(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},arrangeTasks:function(){}}),a={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}},r="showNav",i="hideNav",o="toggleDisplayFormContainerVisibility",d="addNewProject",c="updateMainContent";function s(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){var a,r,i;a=t,r=e,i=n[e],(r=function(t){var e=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==l(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===l(e)?e:String(e)}(r))in a?Object.defineProperty(a,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):a[r]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},arrangeTasks:function(t){"sort"===t.getAttribute("data-arrange-method")||t.getAttribute("data-arrange-method")},getTaskArray:function(){return n.tasks}}}function m(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}function v(){var t=document.querySelector("#project-name-input"),e=t.value.trim();if(t.value="",!e)return alert("Enter Project Name");var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{addTask:function(t){t.setProject(this),e.tasks.push(t)},getTaskArray:function(){return e.tasks},getName:function(){return e.name},getType:function(){return e.type},setName:function(t){e.name=t}}}(e);n.addProject(a);var r=m("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=s(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,r),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(r),x()}function b(){a.emit(d)}function f(t){var e=document.createElement("h2");e.setAttribute("id","main-heading"),e.textContent=t.getName(),console.log(2,t.getName());var n=document.createElement("div");n.setAttribute("id","main-content"),n.appendChild(function(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=t.getTaskArray();return 0===n.length?e.appendChild(function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="Set your priorities in menu above.";var e=document.createElement("div");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}()):n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("div");e.classList.add("task-checkbox-container");var n=document.createElement("input");n.setAttribute("type","checkbox"),n.classList.add("task-item-checkbox"),e.appendChild(n);var a=document.createElement("h4");a.classList.add("task-item-title"),a.textContent="Task Item";var r=document.createElement("p");r.classList.add("task-item-details"),r.textContent="Lorem ipsum dolor sit amet consectetur.";var i=document.createElement("p");i.classList.add("task-item-date"),i.textContent="Due in 3 days";var o=document.createElement("input");o.classList.add("task-priority-checkbox"),o.setAttribute("type","checkbox"),o.setAttribute("aria-label","Prioritize Task");var d=document.createElement("button");d.classList.add("modify-task-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","Edit Task");var c=document.createElement("i");c.classList.add("fa-solid","fa-ellipsis-vertical"),d.appendChild(c);var s=document.createElement("div");s.classList.add("task-button-container"),s.appendChild(o),s.appendChild(d);var l=document.createElement("div");l.classList.add("task-right-side-container"),l.appendChild(i),l.appendChild(s);var u=document.createElement("li");u.classList.add("task-item"),u.appendChild(e),u.appendChild(a),u.appendChild(r),u.appendChild(l);var p=document.createElement("dialog");p.classList.add("task-edit-modal");var m=document.createElement("button");m.classList.add("task-edit-button"),m.setAttribute("type","button"),m.setAttribute("aria-label","Edit Task"),p.appendChild(m);var v=document.createElement("button");return v.classList.add("task-delete-button"),v.setAttribute("type","button"),v.setAttribute("aria-label","Delete Task"),p.appendChild(v),u}())})),e}(t));var a=document.createElement("div");return a.setAttribute("id","main-container"),a.appendChild(e),a.appendChild(n),a}function h(){var t=m(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),a.emit(i);else{if(!0===E.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),a.emit(r)}}function g(t){var e=m("main"),a=t.target,r=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(a);if(r){var i=function(t){return function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(m(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page"),t}(a),o=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var r=n.getProjectArray(),i=t.getAttribute("data-project-name");return r.find((function(t){return t.getName()===i}))}if(a){var o=p(t.getAttribute("data-page-name"),n.getAllTasks());return o.arrangeTasks(t),o}}(i);!function(){for(var t=m("main");t.firstChild;)t.removeChild(t.firstChild)}(),e.appendChild(f(o)),function(t){t.addEventListener("transitionend",h)}(a)}}function A(t){a.emit(c,t)}function y(){var t;!0===E.open?a.on(c,g):!1===E.open&&a.off(c,g),t=m(".zig-zag-nav"),!0===E.open?t.addEventListener("click",A):!1===E.open&&t.removeEventListener("click",A)}var E={open:!1,animating:!1};function C(){E.open=!1,E.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",C),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),S(),y()}function k(){E.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",C)}function j(){E.open=!0,E.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),y(),S()}function L(t,e){for(var n in e)t.setAttribute(n,e[n])}function P(t){var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",P)}function w(){var t,e,n,r=m("#project-form-container"),i="true"===r.getAttribute("data-hidden")?"hidden":"visible";"hidden"===i?(L(r,{"data-hidden":"false","aria-label":"visible"}),i="visible"):"visible"===i&&(L(r,{"data-hidden":"closing","aria-label":"hidden"}),r.addEventListener("animationend",P),i="hidden"),function(t){!function(t){var e=document.querySelector("#add-project-button");"visible"===t?e.addEventListener("click",b):"hidden"===t&&e.removeEventListener("click",b),function(t){"visible"===t?a.on(d,v):"hidden"===t&&a.off(d,v)}(t)}(t)}(i),t=m("#project-form-container"),e="true"===t.getAttribute("data-hidden"),(n=document.getElementById("cancel-add-project-button"))&&(e?n.removeEventListener("click",x):n.addEventListener("click",x))}function x(){a.emit(o)}function S(){var t=document.getElementById("new-project-button");!0===E.open?t.addEventListener("click",x):!1===E.open&&t.removeEventListener("click",x),function(t){!0===t.open?a.on(o,w):!1===t.open&&a.off(o,w)}(E)}const T=t.p+"f0f19e6f57687481453e.webp";!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"});var N,O,z,q=document.getElementById("content");q.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",T),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var r=document.createElement("div");return r.classList.add("header-right"),r.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var r=document.createElement("i");return r.classList.add("fa-solid","fa-moon"),r.setAttribute("id","moon"),n.appendChild(a),n.appendChild(r),t.appendChild(e),t.appendChild(n),t}()),r.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",h),e}()),t.appendChild(e),t.appendChild(r),content.appendChild(t),t}()),q.appendChild(function(t,e,n,o,d){var c=document.createElement("nav");c.classList.add("zig-zag-nav"),c.setAttribute("id","nav-primary-aria"),c.setAttribute("aria-label","Main Navigation"),c.setAttribute("aria-hidden",!0),c.setAttribute("data-visibility",!1);var s=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-header"),n.textContent=l,c.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var r=t[l].listElements,i=document.createDocumentFragment();r.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var r=document.createElement("li");r.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),r.appendChild(a),i.appendChild(r)})),a.appendChild(i),e.appendChild(n),e.appendChild(a),c.appendChild(e)};for(var l in t)s();return a.on(r,j),a.on(i,k),c}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(N=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),N.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(d))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var r=document.createElement("div");r.setAttribute("id","project-input-container"),r.appendChild(s()),r.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var o=document.createElement("form");o.setAttribute("id","project-form-container"),o.setAttribute("aria-label","hidden"),o.setAttribute("data-hidden",!0),o.appendChild(r),o.appendChild(i);var c=document.createElement("button");c.setAttribute("id","new-project-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","New Project"),c.textContent="New Project";var l=document.createElement("div");return l.setAttribute("id","add-project-container"),l.appendChild(c),l.appendChild(o),l}(),N.lastChild),N.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),q.appendChild((O=f(p("all tasks",n.getAllTasks())),(z=document.createElement("main")).appendChild(O),z)),document.querySelectorAll(".task-item-details").forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(r){var i=e.scrollLeft+.5*a;i>=n?a=-1:i<=0&&(a=1),e.scrollLeft=i,requestAnimationFrame(t)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,