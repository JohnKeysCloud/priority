(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!e;)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var n,a=(n=[],{addTaskToProject:function(t,e){n.find((function(e){return e.getName()===t})).addTask(e)},getProjectArray:function(){return[].concat(n)},arrangeProjectArray:function(t){return[].concat(n).filter(t)},getProjectArrayLength:function(){return n.length},addProject:function(t){n.push(t)},deleteProject:function(t){n.splice(n.indexOf(t),1)},getAllTasks:function(){return n.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return n.find((function(e){return e.getName()===t}))}});Math.pow(10,8);const i=6e4,r=36e5;function d(t,e){const n=e?.additionalDigits??2,a=function(t){const e={},n=t.split(o.dateTimeDelimiter);let a;if(n.length>2)return e;if(/:/.test(n[0])?a=n[0]:(e.date=n[0],a=n[1],o.timeZoneDelimiter.test(e.date)&&(e.date=t.split(o.timeZoneDelimiter)[0],a=t.substr(e.date.length,t.length))),a){const t=o.timezone.exec(a);t?(e.time=a.replace(t[1],""),e.timezone=t[1]):e.time=a}return e}(t);let d;if(a.date){const t=function(t,e){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),a=t.match(n);if(!a)return{year:NaN,restDateString:""};const i=a[1]?parseInt(a[1]):null,r=a[2]?parseInt(a[2]):null;return{year:null===r?i:100*r,restDateString:t.slice((a[1]||a[2]).length)}}(a.date,n);d=function(t,e){if(null===e)return new Date(NaN);const n=t.match(s);if(!n)return new Date(NaN);const a=!!n[4],i=l(n[1]),r=l(n[2])-1,d=l(n[3]),o=l(n[4]),c=l(n[5])-1;if(a)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,o,c)?function(t,e,n){const a=new Date(0);a.setUTCFullYear(t,0,4);const i=7*(e-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+i),a}(e,o,c):new Date(NaN);{const t=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(p[e]||(f(t)?29:28))}(e,r,d)&&function(t,e){return e>=1&&e<=(f(t)?366:365)}(e,i)?(t.setUTCFullYear(e,r,Math.max(i,d)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!d||isNaN(d.getTime()))return new Date(NaN);const v=d.getTime();let b,h=0;if(a.time&&(h=function(t){const e=t.match(c);if(!e)return NaN;const n=m(e[1]),a=m(e[2]),d=m(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,a,d)?n*r+a*i+1e3*d:NaN}(a.time),isNaN(h)))return new Date(NaN);if(!a.timezone){const t=new Date(v+h),e=new Date(0);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return b=function(t){if("Z"===t)return 0;const e=t.match(u);if(!e)return 0;const n="+"===e[1]?-1:1,a=parseInt(e[2]),d=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,d)?n*(a*r+d*i):NaN}(a.timezone),isNaN(b)?new Date(NaN):new Date(v+h+b)}const o={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},s=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,c=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,u=/^([+-])(\d{2})(?::?(\d{2}))?$/;function l(t){return t?parseInt(t):1}function m(t){return t&&parseFloat(t.replace(",","."))||0}const p=[31,null,31,30,31,30,31,31,30,31,30,31];function f(t){return t%400==0||t%4==0&&t%100!=0}function v(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function b(t,e){const n=v(t),a=v(e),i=n.getTime()-a.getTime();return i<0?-1:i>0?1:i}function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function A(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach((function(e){var a,i,r;a=t,i=e,r=n[e],(i=function(t){var e=function(t,e){if("object"!==h(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==h(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===h(e)?e:String(e)}(i))in a?Object.defineProperty(a,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):a[i]=r})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},sortTaskArray:function(){n.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return b(d(n),d(a))}))},getTaskArray:function(){return n.tasks}}}const k=t.p+"f0f19e6f57687481453e.webp";var y="showNav",E="hideNav",C="handleMain",L="toggleAddProjectForm",j="toggelAddTaskForm",D="toggleEditTaskForm",w="addNewProject",N="addNewTask";function T(t,e){for(var n in e)t.setAttribute(n,e[n])}function S(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();if(e.length>0){var a=document.createDocumentFragment();return e.length>1&&t.sortTaskArray(),e.forEach((function(t){a.appendChild(function(t){var e=t.getName().toLowerCase(),n=t.getDetails(),a=t.getDueDate(),i=t.getCompleted(),r=t.getPriority(),d=document.createElement("div");d.classList.add("task-checkbox-container");var o=document.createElement("input");o.setAttribute("type","checkbox"),o.setAttribute("data-checked",i?"true":"false"),o.checked=!!i,o.classList.add("task-item-checkbox"),d.appendChild(o);var s=document.createElement("h4");s.classList.add("task-item-title"),s.textContent=e;var c=document.createElement("p");c.classList.add("task-item-details"),c.textContent=n;var u,l=document.createElement("p");l.classList.add("task-item-date"),l.textContent="Due ".concat((u={year:"numeric",month:"short",day:"numeric"},new Date(a).toLocaleDateString("en-us",u)));var m=document.createElement("span");m.classList.add("task-priority-star-icon","material-symbols-outlined"),m.textContent="star";var p=document.createElement("button");p.classList.add("task-priority-star-button"),T(p,{"aria-label":"Prioritize Task",type:"button","data-checked":r?"true":"false"}),p.appendChild(m);var f=document.createElement("button");f.classList.add("modify-task-button"),f.setAttribute("type","button"),f.setAttribute("aria-label","Edit Task");var v=document.createElement("i");v.classList.add("fa-solid","fa-ellipsis-vertical"),f.appendChild(v);var b=document.createElement("div");b.classList.add("task-item-button-container"),b.appendChild(p),b.appendChild(f);var h=document.createElement("div");h.classList.add("task-right-side-container"),h.appendChild(l),h.appendChild(b);var g=document.createElement("li");return g.classList.add("task-item"),g.appendChild(d),g.appendChild(s),""!==n.trim()&&g.appendChild(c),g.appendChild(h),g}(t))})),a}}function x(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=S(t);return n&&e.appendChild(n),e}function P(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}var O,F={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}};function q(t){return a.getAllTasks().find((function(e){return e.getName()===t}))}function z(t){if(t.target.classList.contains("edit-task-button")){var e=t.target.getAttribute("id"),n="cancel-edit-task-button"===e;"save-edit-task-button"===e?console.log("add functionality to save edit task button"):n&&F.emit(D)}}function M(t){var e=P(".edit-task-button-container");"hidden"===t?e.removeEventListener("click",z):"visible"===t&&e.addEventListener("click",z)}function U(t){O="hidden",t.close(),T(t,{"data-hidden":"hidden","aria-label":"hidden"})}function B(t){var e,n,a,i=P("#edit-task-modal"),r=i.getAttribute("data-hidden");"hidden"===r?(O="visible",(a=i).showModal(),T(a,{"data-hidden":"visible","aria-label":"visible"}),M(O)):"visible"===r&&(O="closing",n=U,(e=i).setAttribute("data-hidden","closing"),e.addEventListener("animationend",(function t(){n(e),e.removeEventListener("animationend",t)})),M(O))}var I=!1;function $(t){var n=t.target,a=n.tagName.toLowerCase();if("button"===a||"input"===a){var i=n.closest(".task-item");if(i){var r=i.querySelector(".task-item-title").textContent.toLowerCase(),d={"task-item-checkbox":function(){return function(t,e){var n=t.checked,a=q(e);!0===n?(a.setCompleted(!0),t.setAttribute("data-checked","true")):!1===n&&(a.setCompleted(!1),t.setAttribute("data-checked","false"))}(n,r)},"task-priority-star-button":function(){return function(t,e){var n=t.getAttribute("data-checked"),a=q(e);!function(t,e){"false"===e?t.setAttribute("data-checked","true"):"true"===e&&t.setAttribute("data-checked","false")}(t,n),"false"===n?a.setPriority(!0):"true"===n&&a.setPriority(!1)}(n,r)},"modify-task-button":function(){return function(t){F.emit(D,t)}([e,r])}},o=d[n.className];o&&o()}}}function W(t){var e,n;e=P("#content"),n=function(){var t=document.createElement("h2");t.setAttribute("id","edit-task-heading"),t.textContent="Edit Task";var e=document.createElement("dialog");return T(e,{id:"edit-task-modal","aria-label":"hidden","data-hidden":"hidden"}),e.appendChild(t),e.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","edit-task-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","edit-task-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(D))}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("edit-task-label"),a.setAttribute("for","edit-task-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("edit-task-input"),i.setAttribute("type","text"),i.setAttribute("id","edit-task-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(D))}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("edit-task-label"),d.setAttribute("for","edit-task-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("edit-task-input"),o.setAttribute("type","date"),o.setAttribute("id","edit-task-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(D))}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("edit-task-button"),c.setAttribute("id","save-edit-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Edit Task"),c.setAttribute("form","edit-task-form"),c.textContent="save";var u=document.createElement("button");u.classList.add("edit-task-button"),u.setAttribute("id","cancel-edit-task-button"),u.setAttribute("type","button"),u.setAttribute("aria-label","Cancel Add Task"),u.textContent="cancel";var l=document.createElement("div");l.classList.add("edit-task-button-container"),l.appendChild(c),l.appendChild(u);var m=document.createElement("form");m.setAttribute("id","edit-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(l);var p=document.createElement("div");return p.classList.add("edit-task-form-container"),p.appendChild(m),p}()),e}(),e.appendChild(n),function(t){t.addEventListener("click",$)}(t),I||(F.on(D,B),I=!0)}function Z(t){var e,n,a=t.children,i=a[0];i&&i.hasAttribute("id","placeholder-container")||a.length>0&&((e=document.querySelectorAll(".task-item-details"),n=[],e.forEach((function(t){t.clientWidth<t.scrollWidth&&n.push(t)})),n).forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(i){var r=e.scrollLeft+.5*a;r>=n?a=-1:r<=0&&(a=1),e.scrollLeft=r,requestAnimationFrame(t)}()})),W(t))}function Y(){var t=P("#add-task-form"),e=t.querySelector("#task-add-title"),n=t.querySelector("#task-add-details"),i=t.querySelector("#task-add-due-date"),r=e.value.trim().toLowerCase(),d=n.value.trim();console.log(d);var o=i.value;if(!r)return alert("Enter Task Name");if(!o)return alert("Enter Task Due Date");if(o<(new Date).toISOString().slice(0,10))return alert("Enter Valid Due Date");t.reset();var s=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof a&&"string"!=typeof n)throw new Error("⚠️ name, details & due-date, must all be strings");var i={name:t,projectName:e,dueDate:n,details:a,priority:!1,completed:!1};return{getName:function(){return i.name},setName:function(t){i.name=t},getDetails:function(){return i.details},setDetails:function(t){i.details=t},getDueDate:function(){return i.dueDate},setDueDate:function(t){i.dueDate=t},getPriority:function(){return i.priority},setPriority:function(t){i.priority=t},getCompleted:function(){return i.completed},setCompleted:function(t){i.completed=t},setProjectName:function(t){i.project=t},getProjectName:function(){return i.projectName}}}(r,c,o,d);s.setProjectName(c);var c=Q.projectName.toLowerCase();a.addTaskToProject(c,s),J(),function(t){var e=P("#task-list"),n=e.parentNode,i=a.getProjectObject(t);e.remove();var r=x(i);n.appendChild(r),Z(r)}(c)}function H(){F.emit(N)}var R={formState:"hidden",isAddTaskButtonListenerAttached:!1};function G(t){R.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",G)}function V(){var t,e,n=P(".add-task-form-container"),a=R.formState;"hidden"===a?(T(n,{"data-hidden":"false","aria-label":"visible"}),R.formState="visible"):"visible"===a&&(T(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,R.formState="closing",t.addEventListener("animationend",G)),function(t){var e=P("#add-task-button");"visible"===t?e.addEventListener("click",H):"closing"===t&&e.removeEventListener("click",H)}(e=R.formState),function(t){"visible"===t?F.on(N,Y):"closing"===t&&F.off(N,Y)}(e),function(t){!function(t){var e=P("#cancel-add-task-button");"visible"===t?e.addEventListener("click",J):"closing"===t&&e.removeEventListener("click",J)}(t)}(R.formState)}function J(){F.emit(j)}function K(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var a=x(t),i=document.createElement("div");i.setAttribute("id","main-content"),i.appendChild(a);var r,d=document.createElement("div"),o=t.getType();return d.appendChild(e),"project"===o&&d.appendChild(((r=document.createElement("div")).setAttribute("id","add-task-container"),r.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="add task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),r.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","task-add-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","task-add-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(N))}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("add-task-label"),a.setAttribute("for","task-add-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("add-task-input"),i.setAttribute("type","text"),i.setAttribute("id","task-add-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(N))}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("add-task-label"),d.setAttribute("for","task-add-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("add-task-input"),o.setAttribute("type","date"),o.setAttribute("id","task-add-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(N))}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("add-task-button"),c.setAttribute("id","add-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Add Task"),c.setAttribute("name","add-task-button"),c.setAttribute("form","add-task-form"),c.textContent="add";var u=document.createElement("button");u.classList.add("add-task-button"),u.setAttribute("id","cancel-add-task-button"),u.setAttribute("type","button"),u.setAttribute("aria-label","Cancel Add Task"),u.textContent="cancel";var l=document.createElement("div");l.classList.add("add-task-button-container"),l.appendChild(c),l.appendChild(u);var m=document.createElement("form");m.setAttribute("id","add-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(l);var p=document.createElement("div");return p.classList.add("add-task-form-container"),p.setAttribute("aria-label","hidden"),p.setAttribute("data-hidden",!0),p.appendChild(m),p}()),r)),d.setAttribute("id","main-container"),d.appendChild(i),d}var Q={updateObjectType:null,projectName:null};function X(t){var e=function(t){var e=t.hasAttribute("data-project-name"),n=t.hasAttribute("data-page-name");if(e){var i=a.getProjectArray(),r=t.getAttribute("data-project-name"),d=i.find((function(t){return t.getName()===r}));return Q.updateObjectType="project",d}if(n){var o=A(t.getAttribute("data-page-name"),a.getAllTasks());return Q.updateObjectType="link",o}}(t),n=e.getName(),i=e.getType(),r=K(e),d=r.querySelector("#task-list");R.isAddTaskButtonListenerAttached&&(P("#add-task-form-opener-button").removeEventListener("click",J),R.isAddTaskButtonListenerAttached=!1,F.off(j,V));var o,s=P("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(s),s.appendChild(r),"project"===i&&(Q.projectName=n,function(t){var e=P("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",J),R.isAddTaskButtonListenerAttached=!0)}(o=i),function(t){"project"===t&&F.on(j,V)}(o)),function(t){t.addEventListener("transitionend",pt,{once:!0})}(t),Z(d)}function _(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(P(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page")}(e),function(t){F.emit(C,t)}(e))}function tt(){var t;!0===ct.open?F.on(C,X):!1===ct.open&&F.off(C,X),t=P(".zig-zag-nav"),!0===ct.open?t.addEventListener("click",_):!1===ct.open&&t.removeEventListener("click",_)}function et(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function nt(){var t=P("#add-project-form"),e=t.querySelector("#project-name-input").value.trim().toLowerCase();if(!e)return alert("Enter Project Name");t.reset();var n=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{getName:function(){return e.name},setName:function(t){e.name=t},getType:function(){return e.type},addTask:function(t){e.tasks.push(t)},sortTaskArray:function(){e.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return b(d(n),d(a))}))},getTaskArray:function(){return e.tasks}}}(e);a.addProject(n);var i=P("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=et(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(a,i),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(i),ot(),it.projectFormState="hidden"}function at(){F.emit(w)}var it={projectFormState:"hidden"};function rt(t){it.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",rt)}function dt(){var t,e,n=P("#add-project-form"),a=it.projectFormState;if("hidden"===a)T(n,{"data-hidden":"false","aria-label":"visible"}),it.projectFormState="visible";else if("visible"===a){T(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,it.projectFormState="closing",t.addEventListener("animationend",rt),P("#project-name-input").value=""}(function(t){var e=P("#add-project-button");"visible"===t?e.addEventListener("click",at):"closing"===t&&e.removeEventListener("click",at)})(e=it.projectFormState),function(t){"visible"===t?F.on(w,nt):"closing"===t&&F.off(w,nt)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",ot):"closing"===t&&e.removeEventListener("click",ot)}(t)}(it.projectFormState)}function ot(){F.emit(L)}function st(){var t=document.getElementById("new-project-button");!0===ct.open?t.addEventListener("click",ot):!1===ct.open&&t.removeEventListener("click",ot),function(t){!0===t.open?F.on(L,dt):!1===t.open&&F.off(L,dt)}(ct)}var ct={open:!1,animating:!1};function ut(){ct.open=!1,ct.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",ut),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),st(),tt()}function lt(){ct.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",ut)}function mt(){ct.open=!0,ct.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),tt(),st()}function pt(){var t=P(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),F.emit(E);else{if(!0===ct.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),F.emit(y)}}var ft,vt,bt,ht=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=document.createElement("link");for(var i in a.setAttribute("href",t),a.setAttribute("rel",e),n)a.setAttribute(i,n[i]);document.head.appendChild(a)}("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200","stylesheet"),ht.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",k),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var i=document.createElement("div");return i.classList.add("header-right"),i.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var i=document.createElement("i");return i.classList.add("fa-solid","fa-moon"),i.setAttribute("id","moon"),n.appendChild(a),n.appendChild(i),t.appendChild(e),t.appendChild(n),t}()),i.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",pt),e}()),t.appendChild(e),t.appendChild(i),content.appendChild(t),t}()),ht.appendChild(function(t,e,n,a,i){var r=document.createElement("nav");r.classList.add("zig-zag-nav"),r.setAttribute("id","nav-primary-aria"),r.setAttribute("aria-label","Main Navigation"),r.setAttribute("aria-hidden",!0),r.setAttribute("data-visibility",!1);var d=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=o,r.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var i=t[o].listElements,d=document.createDocumentFragment();i.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var i=document.createElement("li");i.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),i.appendChild(a),d.appendChild(i)})),a.appendChild(d),e.appendChild(n),e.appendChild(a),r.appendChild(e)};for(var o in t)d();return F.on(y,mt),F.on(E,lt),r}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(ft=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),ft.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),F.emit(w))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var a=document.createElement("div");a.setAttribute("id","project-input-container"),a.appendChild(et()),a.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var r=document.createElement("form");r.setAttribute("id","add-project-form"),r.setAttribute("aria-label","hidden"),r.setAttribute("data-hidden",!0),r.appendChild(a),r.appendChild(i);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var o=document.createElement("div");return o.setAttribute("id","add-project-container"),o.appendChild(d),o.appendChild(r),o}(),ft.lastChild),ft.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),ht.appendChild((vt=K(A("all tasks",a.getAllTasks())),(bt=document.createElement("main")).appendChild(vt),bt))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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L0IsSUFBTXNULEVBQXNCamUsU0FBU3dLLGNBQWMsT0FLbkQsT0FKQXlULEVBQW9CL1QsYUFBYSxLQUFNLHlCQUN2QytULEVBQW9CcFQsWUFBWXFQLEdBQ2hDK0QsRUFBb0JwVCxZQUFZNk8sR0FFekJ1RSxDQUNULENWMURJQyxHQUNBekQsR0FBd0IwRCxXQUdIMUQsR0FBd0J0TixjQUFjLFdBQzlDakQsYUFBYSxLQUFNLG9CV2ZWbEssU0FBU2lTLGlCQUFpQixrRUFFbENoSCxTQUFRLFNBQUNzUyxHQUN3QixjQUEzQ0EsRUFBUW5QLGFBQWEsbUJBQ3VCLFVBQTNDbVAsRUFBUW5QLGFBQWEsbUJBQ3NCLGdCQUEzQ21QLEVBQVFuUCxhQUFhLGtCQUV4Qm1QLEVBQVFyVCxhQUFhLHNCQUF1QixRQUNRLGVBQTNDcVQsRUFBUW5QLGFBQWEsbUJBQzlCbVAsRUFBUXJULGFBQWEsc0JBQXVCLFNBRWhELElaMkRGeVEsR0FBUTlQLGFFakVBMkssR0FBdUJKLEVGaUVBN00sRUFBa0IsWUFBYTVILEVBQUttQixpQkVoRTNENFksR0FBTzFhLFNBQVN3SyxjQUFjLFNBQy9CSyxZQUFZMkssSUFFVmtGLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmlvcml0eS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9wcmlvcml0eS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL3ByaW9yaXR5L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2RhdGEuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29uc3RhbnRzLm1qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9wYXJzZUlTTy5tanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvdG9EYXRlLm1qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9jb21wYXJlQXNjLm1qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9sb2dpYy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9ldmVudE5hbWVzLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9zZXQtYXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9jcmVhdGUtdGFzay1saXN0LmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS10YXNrLWxpc3QtcGxhY2Vob2xkZXIuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvY3JlYXRlLXRhc2staXRlbS5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy91dGlsaXRpZXMvZm9ybWF0LWRhdGUuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZS5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy91dGlsaXRpZXMvcHVic3ViLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZS10YXNrLWl0ZW1zLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS1lZGl0LXRhc2stbW9kYWwuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvY3JlYXRlLWVkaXQtdGFzay1mb3JtLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZS10YXNrLWxpc3QuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvZW5hYmxlLXNjcm9sbC1hbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL3Njcm9sbC1lbGVtZW50LWNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlLXRhc2stYWRkLWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlLXRhc2stY2FuY2VsLWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9jcmVhdGUtbWFpbi1jb250ZW50LWNvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9jcmVhdGUtYWRkLXRhc2stY29udGFpbmVyLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS1hZGQtdGFzay1idXR0b24uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvY3JlYXRlLWFkZC10YXNrLWZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlLW1haW4uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvcmVtb3ZlLWFkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGUtbmF2LWxpbmtzLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvbGlzdEljb24vY3JlYXRlLWxpc3QtaWNvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGUtcHJvamVjdC1hZGQtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS1wcm9qZWN0LWl0ZW0uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL3RvZ2dsZS1zY3JvbGwtdmlzaWJpbGl0eS5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGUtbmV3LXByb2plY3QtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9jbGVhci10ZXh0LWlucHV0LmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZS1wcm9qZWN0LWNhbmNlbC1idXR0b24uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvY29tcG9uZW50cy96aWctemFnLW5hdi9oYW5kbGUtemlnLXphZy1uYXYuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvY29tcG9uZW50cy9uYXYtdG9nZ2xlL2hhbmRsZS1uYXYtdG9nZ2xlLWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9hcHAuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvbW9kaWZ5LXNlY29uZC1uYXYtY29udGFpbmVyLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS1tYWluLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9hZGQtc2NyaXB0LXRvLWhlYWQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaW5qZWN0LWZvbnQtYXdlc29tZS1zY3JpcHQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL2FkZC1saW5rLXRvLWhlYWQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaW5qZWN0LXN0YXItbWF0ZXJpYWwtaWNvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9jcmVhdGUtaGVhZGVyLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvdGhlbWUtdG9nZ2xlL3RoZW1lLXRvZ2dsZS5tYXJrdXAuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvY29tcG9uZW50cy9uYXYtdG9nZ2xlL25hdi10b2dnbGUtbWFya3VwLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvemlnLXphZy1uYXYvY3JlYXRlLXppZy16YWctbmF2LmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2NyZWF0ZS1hZGQtcHJvamVjdC1mb3JtLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21vZGlmeS1nZW5lcmljLW5hdi1saW5rcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJmdW5jdGlvbiBwcm9qZWN0c0VuY2Fwc3VsYXRpb24oKSB7XG4gIGNvbnN0IGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheSA9IFtdO1xuXG4gIHJldHVybiB7XG4gICAgYWRkVGFza1RvUHJvamVjdDogKHByb2plY3ROYW1lLCB0YXNrKSA9PiB7XG4gICAgICBjb25zdCBwcm9qZWN0ID0gZW5jYXBzdWxhdGVkUHJvamVjdEFycmF5LmZpbmQoXG4gICAgICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LmdldE5hbWUoKSA9PT0gcHJvamVjdE5hbWVcbiAgICAgICk7XG4gICAgICBwcm9qZWN0LmFkZFRhc2sodGFzayk7XG4gICAgfSxcbiAgICBnZXRQcm9qZWN0QXJyYXk6ICgpID0+IHtcbiAgICAgIHJldHVybiBbLi4uZW5jYXBzdWxhdGVkUHJvamVjdEFycmF5XTtcbiAgICB9LFxuICAgIGFycmFuZ2VQcm9qZWN0QXJyYXk6IChjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuIFsuLi5lbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXldLmZpbHRlcihjYWxsYmFjayk7XG4gICAgfSxcbiAgICBnZXRQcm9qZWN0QXJyYXlMZW5ndGg6ICgpID0+IHtcbiAgICAgIHJldHVybiBlbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXkubGVuZ3RoO1xuICAgIH0sXG4gICAgYWRkUHJvamVjdDogKHByb2plY3QpID0+IHtcbiAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5wdXNoKHByb2plY3QpO1xuICAgIH0sXG4gICAgZGVsZXRlUHJvamVjdDogKHByb2plY3QpID0+IHtcbiAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5zcGxpY2UoXG4gICAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5pbmRleE9mKHByb2plY3QpLFxuICAgICAgICAxXG4gICAgICApO1xuICAgIH0sXG4gICAgZ2V0QWxsVGFza3M6ICgpID0+IHtcbiAgICAgIHJldHVybiBlbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXkuZmxhdE1hcCgocHJvamVjdCkgPT5cbiAgICAgICAgcHJvamVjdC5nZXRUYXNrQXJyYXkoKVxuICAgICAgKTtcbiAgICB9LFxuICAgIGdldFByb2plY3RPYmplY3Q6IChwcm9qZWN0TmFtZSkgPT4ge1xuICAgICAgcmV0dXJuIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5maW5kKFxuICAgICAgICAocHJvamVjdCkgPT4gcHJvamVjdC5nZXROYW1lKCkgPT09IHByb2plY3ROYW1lXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBkYXRhID0gcHJvamVjdHNFbmNhcHN1bGF0aW9uKCk7XG4iLCIvKipcbiAqIEBtb2R1bGUgY29uc3RhbnRzXG4gKiBAc3VtbWFyeSBVc2VmdWwgY29uc3RhbnRzXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbGxlY3Rpb24gb2YgdXNlZnVsIGRhdGUgY29uc3RhbnRzLlxuICpcbiAqIFRoZSBjb25zdGFudHMgY291bGQgYmUgaW1wb3J0ZWQgZnJvbSBgZGF0ZS1mbnMvY29uc3RhbnRzYDpcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgbWF4VGltZSwgbWluVGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBmdW5jdGlvbiBpc0FsbG93ZWRUaW1lKHRpbWUpIHtcbiAqICAgcmV0dXJuIHRpbWUgPD0gbWF4VGltZSAmJiB0aW1lID49IG1pblRpbWU7XG4gKiB9XG4gKiBgYGBcbiAqL1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgZGF5c0luV2Vla1xuICogQHN1bW1hcnkgRGF5cyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBkYXlzSW5XZWVrID0gNztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIGRheXNJblllYXJcbiAqIEBzdW1tYXJ5IERheXMgaW4gMSB5ZWFyLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogSG93IG1hbnkgZGF5cyBpbiBhIHllYXIuXG4gKlxuICogT25lIHllYXJzIGVxdWFscyAzNjUuMjQyNSBkYXlzIGFjY29yZGluZyB0byB0aGUgZm9ybXVsYTpcbiAqXG4gKiA+IExlYXAgeWVhciBvY2N1cmVzIGV2ZXJ5IDQgeWVhcnMsIGV4Y2VwdCBmb3IgeWVhcnMgdGhhdCBhcmUgZGl2aXNhYmxlIGJ5IDEwMCBhbmQgbm90IGRpdmlzYWJsZSBieSA0MDAuXG4gKiA+IDEgbWVhbiB5ZWFyID0gKDM2NSsxLzQtMS8xMDArMS80MDApIGRheXMgPSAzNjUuMjQyNSBkYXlzXG4gKi9cbmV4cG9ydCBjb25zdCBkYXlzSW5ZZWFyID0gMzY1LjI0MjU7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtYXhUaW1lXG4gKiBAc3VtbWFyeSBNYXhpbXVtIGFsbG93ZWQgdGltZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgbWF4VGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBjb25zdCBpc1ZhbGlkID0gODY0MDAwMDAwMDAwMDAwMSA8PSBtYXhUaW1lO1xuICogLy89PiBmYWxzZVxuICpcbiAqIG5ldyBEYXRlKDg2NDAwMDAwMDAwMDAwMDEpO1xuICogLy89PiBJbnZhbGlkIERhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1heFRpbWUgPSBNYXRoLnBvdygxMCwgOCkgKiAyNCAqIDYwICogNjAgKiAxMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWluVGltZVxuICogQHN1bW1hcnkgTWluaW11bSBhbGxvd2VkIHRpbWUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IG1pblRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogY29uc3QgaXNWYWxpZCA9IC04NjQwMDAwMDAwMDAwMDAxID49IG1pblRpbWU7XG4gKiAvLz0+IGZhbHNlXG4gKlxuICogbmV3IERhdGUoLTg2NDAwMDAwMDAwMDAwMDEpXG4gKiAvLz0+IEludmFsaWQgRGF0ZVxuICovXG5leHBvcnQgY29uc3QgbWluVGltZSA9IC1tYXhUaW1lO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5XZWVrXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSB3ZWVrLlxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5XZWVrID0gNjA0ODAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5EYXlcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIGRheS5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luRGF5ID0gODY0MDAwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJbk1pbnV0ZVxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgbWludXRlXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDYwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5Ib3VyXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBob3VyXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbkhvdXIgPSAzNjAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5TZWNvbmRcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIHNlY29uZFxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5TZWNvbmQgPSAxMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luWWVhclxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIHllYXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5ZZWFyID0gNTI1NjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luTW9udGhcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBtb250aC5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbnV0ZXNJbk1vbnRoID0gNDMyMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW51dGVzSW5EYXlcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5EYXkgPSAxNDQwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luSG91clxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIGhvdXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5Ib3VyID0gNjA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtb250aHNJblF1YXJ0ZXJcbiAqIEBzdW1tYXJ5IE1vbnRocyBpbiAxIHF1YXJ0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtb250aHNJblF1YXJ0ZXIgPSAzO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbW9udGhzSW5ZZWFyXG4gKiBAc3VtbWFyeSBNb250aHMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3QgbW9udGhzSW5ZZWFyID0gMTI7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBxdWFydGVyc0luWWVhclxuICogQHN1bW1hcnkgUXVhcnRlcnMgaW4gMSB5ZWFyXG4gKi9cbmV4cG9ydCBjb25zdCBxdWFydGVyc0luWWVhciA9IDQ7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5Ib3VyXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgaG91ci5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbkhvdXIgPSAzNjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luTWludXRlXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgbWludXRlLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luTWludXRlID0gNjA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5EYXlcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5EYXkgPSBzZWNvbmRzSW5Ib3VyICogMjQ7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5XZWVrXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgd2Vlay5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbldlZWsgPSBzZWNvbmRzSW5EYXkgKiA3O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luWWVhclxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHllYXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5ZZWFyID0gc2Vjb25kc0luRGF5ICogZGF5c0luWWVhcjtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbk1vbnRoXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgbW9udGhcbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbk1vbnRoID0gc2Vjb25kc0luWWVhciAvIDEyO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luUXVhcnRlclxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHF1YXJ0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5RdWFydGVyID0gc2Vjb25kc0luTW9udGggKiAzO1xuIiwiaW1wb3J0IHsgbWlsbGlzZWNvbmRzSW5Ib3VyLCBtaWxsaXNlY29uZHNJbk1pbnV0ZSB9IGZyb20gXCIuL2NvbnN0YW50cy5tanNcIjtcblxuLyoqXG4gKiBUaGUge0BsaW5rIHBhcnNlSVNPfSBmdW5jdGlvbiBvcHRpb25zLlxuICovXG5cbi8qKlxuICogQG5hbWUgcGFyc2VJU09cbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUGFyc2UgSVNPIHN0cmluZ1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUGFyc2UgdGhlIGdpdmVuIHN0cmluZyBpbiBJU08gODYwMSBmb3JtYXQgYW5kIHJldHVybiBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEZ1bmN0aW9uIGFjY2VwdHMgY29tcGxldGUgSVNPIDg2MDEgZm9ybWF0cyBhcyB3ZWxsIGFzIHBhcnRpYWwgaW1wbGVtZW50YXRpb25zLlxuICogSVNPIDg2MDE6IGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDFcbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXNuJ3QgYSBzdHJpbmcsIHRoZSBmdW5jdGlvbiBjYW5ub3QgcGFyc2UgdGhlIHN0cmluZyBvclxuICogdGhlIHZhbHVlcyBhcmUgaW52YWxpZCwgaXQgcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGFyZ3VtZW50IC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEBwYXJhbSBvcHRpb25zIC0gQW4gb2JqZWN0IHdpdGggb3B0aW9uc1xuICpcbiAqIEByZXR1cm5zIFRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgc3RyaW5nICcyMDE0LTAyLTExVDExOjMwOjMwJyB0byBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gcGFyc2VJU08oJzIwMTQtMDItMTFUMTE6MzA6MzAnKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCBzdHJpbmcgJyswMjAxNDEwMScgdG8gZGF0ZSxcbiAqIC8vIGlmIHRoZSBhZGRpdGlvbmFsIG51bWJlciBvZiBkaWdpdHMgaW4gdGhlIGV4dGVuZGVkIHllYXIgZm9ybWF0IGlzIDE6XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZUlTTygnKzAyMDE0MTAxJywgeyBhZGRpdGlvbmFsRGlnaXRzOiAxIH0pXG4gKiAvLz0+IEZyaSBBcHIgMTEgMjAxNCAwMDowMDowMFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJU08oYXJndW1lbnQsIG9wdGlvbnMpIHtcbiAgY29uc3QgYWRkaXRpb25hbERpZ2l0cyA9IG9wdGlvbnM/LmFkZGl0aW9uYWxEaWdpdHMgPz8gMjtcbiAgY29uc3QgZGF0ZVN0cmluZ3MgPSBzcGxpdERhdGVTdHJpbmcoYXJndW1lbnQpO1xuXG4gIGxldCBkYXRlO1xuICBpZiAoZGF0ZVN0cmluZ3MuZGF0ZSkge1xuICAgIGNvbnN0IHBhcnNlWWVhclJlc3VsdCA9IHBhcnNlWWVhcihkYXRlU3RyaW5ncy5kYXRlLCBhZGRpdGlvbmFsRGlnaXRzKTtcbiAgICBkYXRlID0gcGFyc2VEYXRlKHBhcnNlWWVhclJlc3VsdC5yZXN0RGF0ZVN0cmluZywgcGFyc2VZZWFyUmVzdWx0LnllYXIpO1xuICB9XG5cbiAgaWYgKCFkYXRlIHx8IGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgY29uc3QgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gIGxldCB0aW1lID0gMDtcbiAgbGV0IG9mZnNldDtcblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZSkge1xuICAgIHRpbWUgPSBwYXJzZVRpbWUoZGF0ZVN0cmluZ3MudGltZSk7XG4gICAgaWYgKGlzTmFOKHRpbWUpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZXpvbmUpIHtcbiAgICBvZmZzZXQgPSBwYXJzZVRpbWV6b25lKGRhdGVTdHJpbmdzLnRpbWV6b25lKTtcbiAgICBpZiAoaXNOYU4ob2Zmc2V0KSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnN0IGRpcnR5RGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUpO1xuICAgIC8vIEpTIHBhcnNlZCBzdHJpbmcgYXNzdW1pbmcgaXQncyBpbiBVVEMgdGltZXpvbmVcbiAgICAvLyBidXQgd2UgbmVlZCBpdCB0byBiZSBwYXJzZWQgaW4gb3VyIHRpbWV6b25lXG4gICAgLy8gc28gd2UgdXNlIHV0YyB2YWx1ZXMgdG8gYnVpbGQgZGF0ZSBpbiBvdXIgdGltZXpvbmUuXG4gICAgLy8gWWVhciB2YWx1ZXMgZnJvbSAwIHRvIDk5IG1hcCB0byB0aGUgeWVhcnMgMTkwMCB0byAxOTk5XG4gICAgLy8gc28gc2V0IHllYXIgZXhwbGljaXRseSB3aXRoIHNldEZ1bGxZZWFyLlxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBEYXRlKDApO1xuICAgIHJlc3VsdC5zZXRGdWxsWWVhcihcbiAgICAgIGRpcnR5RGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgZGlydHlEYXRlLmdldFVUQ01vbnRoKCksXG4gICAgICBkaXJ0eURhdGUuZ2V0VVRDRGF0ZSgpLFxuICAgICk7XG4gICAgcmVzdWx0LnNldEhvdXJzKFxuICAgICAgZGlydHlEYXRlLmdldFVUQ0hvdXJzKCksXG4gICAgICBkaXJ0eURhdGUuZ2V0VVRDTWludXRlcygpLFxuICAgICAgZGlydHlEYXRlLmdldFVUQ1NlY29uZHMoKSxcbiAgICAgIGRpcnR5RGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKSxcbiAgICApO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICByZXR1cm4gbmV3IERhdGUodGltZXN0YW1wICsgdGltZSArIG9mZnNldCk7XG59XG5cbmNvbnN0IHBhdHRlcm5zID0ge1xuICBkYXRlVGltZURlbGltaXRlcjogL1tUIF0vLFxuICB0aW1lWm9uZURlbGltaXRlcjogL1taIF0vaSxcbiAgdGltZXpvbmU6IC8oW1orLV0uKikkLyxcbn07XG5cbmNvbnN0IGRhdGVSZWdleCA9XG4gIC9eLT8oPzooXFxkezN9KXwoXFxkezJ9KSg/Oi0/KFxcZHsyfSkpP3xXKFxcZHsyfSkoPzotPyhcXGR7MX0pKT98KSQvO1xuY29uc3QgdGltZVJlZ2V4ID1cbiAgL14oXFxkezJ9KD86Wy4sXVxcZCopPykoPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/KD86Oj8oXFxkezJ9KD86Wy4sXVxcZCopPykpPyQvO1xuY29uc3QgdGltZXpvbmVSZWdleCA9IC9eKFsrLV0pKFxcZHsyfSkoPzo6PyhcXGR7Mn0pKT8kLztcblxuZnVuY3Rpb24gc3BsaXREYXRlU3RyaW5nKGRhdGVTdHJpbmcpIHtcbiAgY29uc3QgZGF0ZVN0cmluZ3MgPSB7fTtcbiAgY29uc3QgYXJyYXkgPSBkYXRlU3RyaW5nLnNwbGl0KHBhdHRlcm5zLmRhdGVUaW1lRGVsaW1pdGVyKTtcbiAgbGV0IHRpbWVTdHJpbmc7XG5cbiAgLy8gVGhlIHJlZ2V4IG1hdGNoIHNob3VsZCBvbmx5IHJldHVybiBhdCBtYXhpbXVtIHR3byBhcnJheSBlbGVtZW50cy5cbiAgLy8gW2RhdGVdLCBbdGltZV0sIG9yIFtkYXRlLCB0aW1lXS5cbiAgaWYgKGFycmF5Lmxlbmd0aCA+IDIpIHtcbiAgICByZXR1cm4gZGF0ZVN0cmluZ3M7XG4gIH1cblxuICBpZiAoLzovLnRlc3QoYXJyYXlbMF0pKSB7XG4gICAgdGltZVN0cmluZyA9IGFycmF5WzBdO1xuICB9IGVsc2Uge1xuICAgIGRhdGVTdHJpbmdzLmRhdGUgPSBhcnJheVswXTtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMV07XG4gICAgaWYgKHBhdHRlcm5zLnRpbWVab25lRGVsaW1pdGVyLnRlc3QoZGF0ZVN0cmluZ3MuZGF0ZSkpIHtcbiAgICAgIGRhdGVTdHJpbmdzLmRhdGUgPSBkYXRlU3RyaW5nLnNwbGl0KHBhdHRlcm5zLnRpbWVab25lRGVsaW1pdGVyKVswXTtcbiAgICAgIHRpbWVTdHJpbmcgPSBkYXRlU3RyaW5nLnN1YnN0cihcbiAgICAgICAgZGF0ZVN0cmluZ3MuZGF0ZS5sZW5ndGgsXG4gICAgICAgIGRhdGVTdHJpbmcubGVuZ3RoLFxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBpZiAodGltZVN0cmluZykge1xuICAgIGNvbnN0IHRva2VuID0gcGF0dGVybnMudGltZXpvbmUuZXhlYyh0aW1lU3RyaW5nKTtcbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nLnJlcGxhY2UodG9rZW5bMV0sIFwiXCIpO1xuICAgICAgZGF0ZVN0cmluZ3MudGltZXpvbmUgPSB0b2tlblsxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGF0ZVN0cmluZ3MudGltZSA9IHRpbWVTdHJpbmc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRhdGVTdHJpbmdzO1xufVxuXG5mdW5jdGlvbiBwYXJzZVllYXIoZGF0ZVN0cmluZywgYWRkaXRpb25hbERpZ2l0cykge1xuICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgXCJeKD86KFxcXFxkezR9fFsrLV1cXFxcZHtcIiArXG4gICAgICAoNCArIGFkZGl0aW9uYWxEaWdpdHMpICtcbiAgICAgIFwifSl8KFxcXFxkezJ9fFsrLV1cXFxcZHtcIiArXG4gICAgICAoMiArIGFkZGl0aW9uYWxEaWdpdHMpICtcbiAgICAgIFwifSkkKVwiLFxuICApO1xuXG4gIGNvbnN0IGNhcHR1cmVzID0gZGF0ZVN0cmluZy5tYXRjaChyZWdleCk7XG4gIC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB5ZWFyXG4gIGlmICghY2FwdHVyZXMpIHJldHVybiB7IHllYXI6IE5hTiwgcmVzdERhdGVTdHJpbmc6IFwiXCIgfTtcblxuICBjb25zdCB5ZWFyID0gY2FwdHVyZXNbMV0gPyBwYXJzZUludChjYXB0dXJlc1sxXSkgOiBudWxsO1xuICBjb25zdCBjZW50dXJ5ID0gY2FwdHVyZXNbMl0gPyBwYXJzZUludChjYXB0dXJlc1syXSkgOiBudWxsO1xuXG4gIC8vIGVpdGhlciB5ZWFyIG9yIGNlbnR1cnkgaXMgbnVsbCwgbm90IGJvdGhcbiAgcmV0dXJuIHtcbiAgICB5ZWFyOiBjZW50dXJ5ID09PSBudWxsID8geWVhciA6IGNlbnR1cnkgKiAxMDAsXG4gICAgcmVzdERhdGVTdHJpbmc6IGRhdGVTdHJpbmcuc2xpY2UoKGNhcHR1cmVzWzFdIHx8IGNhcHR1cmVzWzJdKS5sZW5ndGgpLFxuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZURhdGUoZGF0ZVN0cmluZywgeWVhcikge1xuICAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgeWVhclxuICBpZiAoeWVhciA9PT0gbnVsbCkgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG5cbiAgY29uc3QgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKGRhdGVSZWdleCk7XG4gIC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCBzdHJpbmdcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG5cbiAgY29uc3QgaXNXZWVrRGF0ZSA9ICEhY2FwdHVyZXNbNF07XG4gIGNvbnN0IGRheU9mWWVhciA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMV0pO1xuICBjb25zdCBtb250aCA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMl0pIC0gMTtcbiAgY29uc3QgZGF5ID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1szXSk7XG4gIGNvbnN0IHdlZWsgPSBwYXJzZURhdGVVbml0KGNhcHR1cmVzWzRdKTtcbiAgY29uc3QgZGF5T2ZXZWVrID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1s1XSkgLSAxO1xuXG4gIGlmIChpc1dlZWtEYXRlKSB7XG4gICAgaWYgKCF2YWxpZGF0ZVdlZWtEYXRlKHllYXIsIHdlZWssIGRheU9mV2VlaykpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgICByZXR1cm4gZGF5T2ZJU09XZWVrWWVhcih5ZWFyLCB3ZWVrLCBkYXlPZldlZWspO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgICBpZiAoXG4gICAgICAhdmFsaWRhdGVEYXRlKHllYXIsIG1vbnRoLCBkYXkpIHx8XG4gICAgICAhdmFsaWRhdGVEYXlPZlllYXJEYXRlKHllYXIsIGRheU9mWWVhcilcbiAgICApIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKHllYXIsIG1vbnRoLCBNYXRoLm1heChkYXlPZlllYXIsIGRheSkpO1xuICAgIHJldHVybiBkYXRlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF0ZVVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID8gcGFyc2VJbnQodmFsdWUpIDogMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VUaW1lKHRpbWVTdHJpbmcpIHtcbiAgY29uc3QgY2FwdHVyZXMgPSB0aW1lU3RyaW5nLm1hdGNoKHRpbWVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiBOYU47IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB0aW1lXG5cbiAgY29uc3QgaG91cnMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzFdKTtcbiAgY29uc3QgbWludXRlcyA9IHBhcnNlVGltZVVuaXQoY2FwdHVyZXNbMl0pO1xuICBjb25zdCBzZWNvbmRzID0gcGFyc2VUaW1lVW5pdChjYXB0dXJlc1szXSk7XG5cbiAgaWYgKCF2YWxpZGF0ZVRpbWUoaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgaG91cnMgKiBtaWxsaXNlY29uZHNJbkhvdXIgKyBtaW51dGVzICogbWlsbGlzZWNvbmRzSW5NaW51dGUgKyBzZWNvbmRzICogMTAwMFxuICApO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWVVbml0KHZhbHVlKSB7XG4gIHJldHVybiAodmFsdWUgJiYgcGFyc2VGbG9hdCh2YWx1ZS5yZXBsYWNlKFwiLFwiLCBcIi5cIikpKSB8fCAwO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWV6b25lKHRpbWV6b25lU3RyaW5nKSB7XG4gIGlmICh0aW1lem9uZVN0cmluZyA9PT0gXCJaXCIpIHJldHVybiAwO1xuXG4gIGNvbnN0IGNhcHR1cmVzID0gdGltZXpvbmVTdHJpbmcubWF0Y2godGltZXpvbmVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiAwO1xuXG4gIGNvbnN0IHNpZ24gPSBjYXB0dXJlc1sxXSA9PT0gXCIrXCIgPyAtMSA6IDE7XG4gIGNvbnN0IGhvdXJzID0gcGFyc2VJbnQoY2FwdHVyZXNbMl0pO1xuICBjb25zdCBtaW51dGVzID0gKGNhcHR1cmVzWzNdICYmIHBhcnNlSW50KGNhcHR1cmVzWzNdKSkgfHwgMDtcblxuICBpZiAoIXZhbGlkYXRlVGltZXpvbmUoaG91cnMsIG1pbnV0ZXMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiBzaWduICogKGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlKTtcbn1cblxuZnVuY3Rpb24gZGF5T2ZJU09XZWVrWWVhcihpc29XZWVrWWVhciwgd2VlaywgZGF5KSB7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihpc29XZWVrWWVhciwgMCwgNCk7XG4gIGNvbnN0IGZvdXJ0aE9mSmFudWFyeURheSA9IGRhdGUuZ2V0VVRDRGF5KCkgfHwgNztcbiAgY29uc3QgZGlmZiA9ICh3ZWVrIC0gMSkgKiA3ICsgZGF5ICsgMSAtIGZvdXJ0aE9mSmFudWFyeURheTtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgZGlmZik7XG4gIHJldHVybiBkYXRlO1xufVxuXG4vLyBWYWxpZGF0aW9uIGZ1bmN0aW9uc1xuXG4vLyBGZWJydWFyeSBpcyBudWxsIHRvIGhhbmRsZSB0aGUgbGVhcCB5ZWFyICh1c2luZyB8fClcbmNvbnN0IGRheXNJbk1vbnRocyA9IFszMSwgbnVsbCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdO1xuXG5mdW5jdGlvbiBpc0xlYXBZZWFySW5kZXgoeWVhcikge1xuICByZXR1cm4geWVhciAlIDQwMCA9PT0gMCB8fCAoeWVhciAlIDQgPT09IDAgJiYgeWVhciAlIDEwMCAhPT0gMCk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF0ZSkge1xuICByZXR1cm4gKFxuICAgIG1vbnRoID49IDAgJiZcbiAgICBtb250aCA8PSAxMSAmJlxuICAgIGRhdGUgPj0gMSAmJlxuICAgIGRhdGUgPD0gKGRheXNJbk1vbnRoc1ttb250aF0gfHwgKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDI5IDogMjgpKVxuICApO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSB7XG4gIHJldHVybiBkYXlPZlllYXIgPj0gMSAmJiBkYXlPZlllYXIgPD0gKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDM2NiA6IDM2NSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlV2Vla0RhdGUoX3llYXIsIHdlZWssIGRheSkge1xuICByZXR1cm4gd2VlayA+PSAxICYmIHdlZWsgPD0gNTMgJiYgZGF5ID49IDAgJiYgZGF5IDw9IDY7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICBpZiAoaG91cnMgPT09IDI0KSB7XG4gICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgJiYgc2Vjb25kcyA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgc2Vjb25kcyA+PSAwICYmXG4gICAgc2Vjb25kcyA8IDYwICYmXG4gICAgbWludXRlcyA+PSAwICYmXG4gICAgbWludXRlcyA8IDYwICYmXG4gICAgaG91cnMgPj0gMCAmJlxuICAgIGhvdXJzIDwgMjVcbiAgKTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVUaW1lem9uZShfaG91cnMsIG1pbnV0ZXMpIHtcbiAgcmV0dXJuIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDw9IDU5O1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHBhcnNlSVNPO1xuIiwiLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGFyZ3VtZW50IC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIGRhdGUgaW4gdGhlIGxvY2FsIHRpbWUgem9uZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDbG9uZSB0aGUgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZShuZXcgRGF0ZSgyMDE0LCAxLCAxMSwgMTEsIDMwLCAzMCkpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHRoZSB0aW1lc3RhbXAgdG8gZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZSgxMzkyMDk4NDMwMDAwKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvRGF0ZShhcmd1bWVudCkge1xuICBjb25zdCBhcmdTdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnQpO1xuXG4gIC8vIENsb25lIHRoZSBkYXRlXG4gIGlmIChcbiAgICBhcmd1bWVudCBpbnN0YW5jZW9mIERhdGUgfHxcbiAgICAodHlwZW9mIGFyZ3VtZW50ID09PSBcIm9iamVjdFwiICYmIGFyZ1N0ciA9PT0gXCJbb2JqZWN0IERhdGVdXCIpXG4gICkge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgYXJndW1lbnQuY29uc3RydWN0b3IoK2FyZ3VtZW50KTtcbiAgfSBlbHNlIGlmIChcbiAgICB0eXBlb2YgYXJndW1lbnQgPT09IFwibnVtYmVyXCIgfHxcbiAgICBhcmdTdHIgPT09IFwiW29iamVjdCBOdW1iZXJdXCIgfHxcbiAgICB0eXBlb2YgYXJndW1lbnQgPT09IFwic3RyaW5nXCIgfHxcbiAgICBhcmdTdHIgPT09IFwiW29iamVjdCBTdHJpbmddXCJcbiAgKSB7XG4gICAgLy8gVE9ETzogQ2FuIHdlIGdldCByaWQgb2YgYXM/XG4gICAgcmV0dXJuIG5ldyBEYXRlKGFyZ3VtZW50KTtcbiAgfSBlbHNlIHtcbiAgICAvLyBUT0RPOiBDYW4gd2UgZ2V0IHJpZCBvZiBhcz9cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHRvRGF0ZTtcbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuL3RvRGF0ZS5tanNcIjtcblxuLyoqXG4gKiBAbmFtZSBjb21wYXJlQXNjXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IENvbXBhcmUgdGhlIHR3byBkYXRlcyBhbmQgcmV0dXJuIC0xLCAwIG9yIDEuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDb21wYXJlIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybiAxIGlmIHRoZSBmaXJzdCBkYXRlIGlzIGFmdGVyIHRoZSBzZWNvbmQsXG4gKiAtMSBpZiB0aGUgZmlyc3QgZGF0ZSBpcyBiZWZvcmUgdGhlIHNlY29uZCBvciAwIGlmIGRhdGVzIGFyZSBlcXVhbC5cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGVUeXBlIC0gVGhlIGBEYXRlYCB0eXBlLCB0aGUgZnVuY3Rpb24gb3BlcmF0ZXMgb24uIEdldHMgaW5mZXJyZWQgZnJvbSBwYXNzZWQgYXJndW1lbnRzLiBBbGxvd3MgdG8gdXNlIGV4dGVuc2lvbnMgbGlrZSBbYFVUQ0RhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdXRjKS5cbiAqXG4gKiBAcGFyYW0gZGF0ZUxlZnQgLSBUaGUgZmlyc3QgZGF0ZSB0byBjb21wYXJlXG4gKiBAcGFyYW0gZGF0ZVJpZ2h0IC0gVGhlIHNlY29uZCBkYXRlIHRvIGNvbXBhcmVcbiAqXG4gKiBAcmV0dXJucyBUaGUgcmVzdWx0IG9mIHRoZSBjb21wYXJpc29uXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbXBhcmUgMTEgRmVicnVhcnkgMTk4NyBhbmQgMTAgSnVseSAxOTg5OlxuICogY29uc3QgcmVzdWx0ID0gY29tcGFyZUFzYyhuZXcgRGF0ZSgxOTg3LCAxLCAxMSksIG5ldyBEYXRlKDE5ODksIDYsIDEwKSlcbiAqIC8vPT4gLTFcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU29ydCB0aGUgYXJyYXkgb2YgZGF0ZXM6XG4gKiBjb25zdCByZXN1bHQgPSBbXG4gKiAgIG5ldyBEYXRlKDE5OTUsIDYsIDIpLFxuICogICBuZXcgRGF0ZSgxOTg3LCAxLCAxMSksXG4gKiAgIG5ldyBEYXRlKDE5ODksIDYsIDEwKVxuICogXS5zb3J0KGNvbXBhcmVBc2MpXG4gKiAvLz0+IFtcbiAqIC8vICAgV2VkIEZlYiAxMSAxOTg3IDAwOjAwOjAwLFxuICogLy8gICBNb24gSnVsIDEwIDE5ODkgMDA6MDA6MDAsXG4gKiAvLyAgIFN1biBKdWwgMDIgMTk5NSAwMDowMDowMFxuICogLy8gXVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IF9kYXRlTGVmdCA9IHRvRGF0ZShkYXRlTGVmdCk7XG4gIGNvbnN0IF9kYXRlUmlnaHQgPSB0b0RhdGUoZGF0ZVJpZ2h0KTtcblxuICBjb25zdCBkaWZmID0gX2RhdGVMZWZ0LmdldFRpbWUoKSAtIF9kYXRlUmlnaHQuZ2V0VGltZSgpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxO1xuICAgIC8vIFJldHVybiAwIGlmIGRpZmYgaXMgMDsgcmV0dXJuIE5hTiBpZiBkaWZmIGlzIE5hTlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgY29tcGFyZUFzYztcbiIsIi8vICogREVQRU5ERU5DSUVTXG5pbXBvcnQgeyBwYXJzZUlTTywgY29tcGFyZUFzYyB9IGZyb20gJ2RhdGUtZm5zJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBsaW5rT2JqZWN0RmFjdG9yeShuYW1lLCBkYXRhKSB7XG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHRhc2tzOiBkYXRhLCAvLyA/IGFsbCB0YXNrcyAoYXJyYXkpLFxuICAgIHR5cGU6ICdsaW5rJyxcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGdldE5hbWU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5uYW1lO1xuICAgIH0sXG4gICAgZ2V0VHlwZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLnR5cGU7XG4gICAgfSxcbiAgICBnZXRTaGFsbG93Q29weTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUgfTtcbiAgICB9LFxuICAgIHNvcnRUYXNrQXJyYXk6ICgpID0+IHtcbiAgICAgIGNvbnN0IHRhc2tBcnJheSA9IHN0YXRlLnRhc2tzO1xuXG4gICAgICB0YXNrQXJyYXkuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAvLyAqIGNhbGxiYWNrIGlzIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgZGF0ZSBzdHJpbmdcblxuICAgICAgICBjb25zdCBkYXRlU3RyaW5nQSA9IGEuZ2V0RHVlRGF0ZSgpO1xuICAgICAgICBjb25zdCBkYXRlU3RyaW5nQiA9IGIuZ2V0RHVlRGF0ZSgpO1xuXG4gICAgICAgIC8vICogcGFyc2VJU08gY29udmVydHMgdGhlIGRhdGUgc3RyaW5nIGludG8gYSBEYXRlIG9iamVjdFxuICAgICAgICBjb25zdCBkYXRlQSA9IHBhcnNlSVNPKGRhdGVTdHJpbmdBKTtcbiAgICAgICAgY29uc3QgZGF0ZUIgPSBwYXJzZUlTTyhkYXRlU3RyaW5nQik7XG5cbiAgICAgICAgLy8gKiBjb21wYXJlQXNjIGNvbXBhcmVzIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybnMgYSBudW1iZXJcbiAgICAgICAgcmV0dXJuIGNvbXBhcmVBc2MoZGF0ZUEsIGRhdGVCKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VGFza0FycmF5OiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUudGFza3M7XG4gICAgfSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvamVjdEZhY3RvcnkobmFtZSkge1xuICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCduYW1lIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHRhc2tzOiBbXSxcbiAgICB0eXBlOiAncHJvamVjdCcsXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBnZXROYW1lOiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUubmFtZTtcbiAgICB9LFxuICAgIHNldE5hbWU6IChuYW1lKSA9PiB7XG4gICAgICBzdGF0ZS5uYW1lID0gbmFtZTtcbiAgICB9LFxuICAgIGdldFR5cGU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS50eXBlO1xuICAgIH0sXG4gICAgYWRkVGFzazogZnVuY3Rpb24gKHRhc2spIHtcbiAgICAgIHN0YXRlLnRhc2tzLnB1c2godGFzayk7XG4gICAgfSxcbiAgICBzb3J0VGFza0FycmF5OiAoKSA9PiB7XG4gICAgICBjb25zdCB0YXNrQXJyYXkgPSBzdGF0ZS50YXNrcztcblxuICAgICAgdGFza0FycmF5LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgLy8gKiBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGRhdGUgc3RyaW5nXG5cbiAgICAgICAgY29uc3QgZGF0ZVN0cmluZ0EgPSBhLmdldER1ZURhdGUoKTtcbiAgICAgICAgY29uc3QgZGF0ZVN0cmluZ0IgPSBiLmdldER1ZURhdGUoKTtcblxuICAgICAgICAvLyAqIHBhcnNlSVNPIGNvbnZlcnRzIHRoZSBkYXRlIHN0cmluZyBpbnRvIGEgRGF0ZSBvYmplY3RcbiAgICAgICAgY29uc3QgZGF0ZUEgPSBwYXJzZUlTTyhkYXRlU3RyaW5nQSk7XG4gICAgICAgIGNvbnN0IGRhdGVCID0gcGFyc2VJU08oZGF0ZVN0cmluZ0IpO1xuXG4gICAgICAgIC8vICogY29tcGFyZUFzYyBjb21wYXJlcyB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm5zIGEgbnVtYmVyXG4gICAgICAgIHJldHVybiBjb21wYXJlQXNjKGRhdGVBLCBkYXRlQik7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFRhc2tBcnJheTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLnRhc2tzO1xuICAgIH0sXG4gIH07XG59XG5cbi8vIFRPRE86OiBjb21iaW5lIGxpbmsgb2JqZWN0IGZhY3RvcnkgYW5kIHByb2plY3QgZmFjdG9yeSBtYXliZT9cblxuZnVuY3Rpb24gdGFza0ZhY3RvcnkobmFtZSwgcHJvamVjdE5hbWUsIGR1ZURhdGUsIGRldGFpbHMpIHtcbiAgaWYgKFxuICAgIHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyAmJlxuICAgIHR5cGVvZiBkZXRhaWxzICE9PSAnc3RyaW5nJyAmJlxuICAgIHR5cGVvZiBkdWVEYXRlICE9PSAnc3RyaW5nJ1xuICApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ+KaoO+4jyBuYW1lLCBkZXRhaWxzICYgZHVlLWRhdGUsIG11c3QgYWxsIGJlIHN0cmluZ3MnKTtcbiAgfVxuXG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHByb2plY3ROYW1lOiBwcm9qZWN0TmFtZSxcbiAgICBkdWVEYXRlOiBkdWVEYXRlLFxuICAgIGRldGFpbHM6IGRldGFpbHMsXG4gICAgcHJpb3JpdHk6IGZhbHNlLFxuICAgIGNvbXBsZXRlZDogZmFsc2UsXG4gIH07XG4gIHJldHVybiB7XG4gICAgZ2V0TmFtZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLm5hbWU7XG4gICAgfSxcbiAgICBzZXROYW1lOiAobmFtZSkgPT4ge1xuICAgICAgc3RhdGUubmFtZSA9IG5hbWU7XG4gICAgfSxcbiAgICBnZXREZXRhaWxzOiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUuZGV0YWlscztcbiAgICB9LFxuICAgIHNldERldGFpbHM6IChkZXRhaWxzKSA9PiB7XG4gICAgICBzdGF0ZS5kZXRhaWxzID0gZGV0YWlscztcbiAgICB9LFxuICAgIGdldER1ZURhdGU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5kdWVEYXRlO1xuICAgIH0sXG4gICAgc2V0RHVlRGF0ZTogKGR1ZURhdGUpID0+IHtcbiAgICAgIHN0YXRlLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgIH0sXG4gICAgZ2V0UHJpb3JpdHk6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5wcmlvcml0eTtcbiAgICB9LFxuICAgIHNldFByaW9yaXR5OiAocHJpb3JpdHkpID0+IHtcbiAgICAgIHN0YXRlLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgfSxcbiAgICBnZXRDb21wbGV0ZWQ6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5jb21wbGV0ZWQ7XG4gICAgfSxcbiAgICBzZXRDb21wbGV0ZWQ6IChib29sZWFuKSA9PiB7XG4gICAgICBzdGF0ZS5jb21wbGV0ZWQgPSBib29sZWFuO1xuICAgIH0sXG4gICAgc2V0UHJvamVjdE5hbWU6IGZ1bmN0aW9uIChwcm9qZWN0TmFtZSkge1xuICAgICAgc3RhdGUucHJvamVjdCA9IHByb2plY3ROYW1lO1xuICAgIH0sXG4gICAgZ2V0UHJvamVjdE5hbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdGF0ZS5wcm9qZWN0TmFtZTtcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgeyBwcm9qZWN0RmFjdG9yeSwgdGFza0ZhY3RvcnksIGxpbmtPYmplY3RGYWN0b3J5IH07XG4iLCJleHBvcnQgY29uc3QgU0hPV19OQVZfRVZFTlQgPSAnc2hvd05hdic7XG5leHBvcnQgY29uc3QgSElERV9OQVZfRVZFTlQgPSAnaGlkZU5hdic7XG5cbmV4cG9ydCBjb25zdCBVUERBVEVfTUFJTiA9ICdoYW5kbGVNYWluJztcblxuZXhwb3J0IGNvbnN0IFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNID0gJ3RvZ2dsZUFkZFByb2plY3RGb3JtJztcbmV4cG9ydCBjb25zdCBUT0dHTEVfQUREX1RBU0tfRk9STSA9ICd0b2dnZWxBZGRUYXNrRm9ybSc7XG5leHBvcnQgY29uc3QgVE9HR0xFX0VESVRfVEFTS19GT1JNID0gJ3RvZ2dsZUVkaXRUYXNrRm9ybSc7XG5cbmV4cG9ydCBjb25zdCBBRERfTkVXX1BST0pFQ1QgPSAnYWRkTmV3UHJvamVjdCc7XG5leHBvcnQgY29uc3QgQUREX05FV19UQVNLID0gJ2FkZE5ld1Rhc2snOyIsImZ1bmN0aW9uIHNldEF0dHJpYnV0ZXMoZWxlbWVudCwgYXR0cmlidXRlcykge1xuICBmb3IgKGNvbnN0IGtleSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyaWJ1dGVzW2tleV0pO1xuICB9XG59XG5cbmV4cG9ydCB7IHNldEF0dHJpYnV0ZXMgfTsiLCIvLyAqIE1BUktVUFxuaW1wb3J0IHsgY3JlYXRlVGFza0l0ZW0gfSBmcm9tICcuL2NyZWF0ZS10YXNrLWl0ZW0nO1xuaW1wb3J0IHsgY3JlYXRlVGFza0xpc3RQbGFjZWhvbGRlciB9IGZyb20gJy4vY3JlYXRlLXRhc2stbGlzdC1wbGFjZWhvbGRlci5qcydcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gZ2V0VGFza0xpc3RDb250ZW50KG1haW5VcGRhdGVPYmplY3QpIHtcbmNvbnN0IHRhc2tBcnJheSA9IG1haW5VcGRhdGVPYmplY3QuZ2V0VGFza0FycmF5KCk7XG4gIGNvbnN0IG1haW5VcGRhdGVPYmplY3RUeXBlID0gbWFpblVwZGF0ZU9iamVjdC5nZXRUeXBlKCk7IFxuICBcbiAgaWYgKHRhc2tBcnJheS5sZW5ndGggPT09IDAgJiYgbWFpblVwZGF0ZU9iamVjdFR5cGUgPT09ICdsaW5rJykge1xuICAgIGNvbnN0IHRhc2tMaXN0UGxhY2Vob2xkZXIgPSBjcmVhdGVUYXNrTGlzdFBsYWNlaG9sZGVyKCk7XG5cbiAgICByZXR1cm4gdGFza0xpc3RQbGFjZWhvbGRlclxuXG4gIH0gZWxzZSBpZiAodGFza0FycmF5Lmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCB0YXNrTGlzdEZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuXG4gICAgaWYgKHRhc2tBcnJheS5sZW5ndGggPiAxKSBtYWluVXBkYXRlT2JqZWN0LnNvcnRUYXNrQXJyYXkoKTtcbiAgICBcbiAgICB0YXNrQXJyYXkuZm9yRWFjaCgodGFzaykgPT4ge1xuICAgICAgdGFza0xpc3RGcmFnbWVudC5hcHBlbmRDaGlsZChjcmVhdGVUYXNrSXRlbSh0YXNrKSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGFza0xpc3RGcmFnbWVudDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm5cbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVUYXNrTGlzdChtYWluVXBkYXRlT2JqZWN0KSB7XG4gIGNvbnN0IHRhc2tMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgdGFza0xpc3Quc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrLWxpc3QnKTtcblxuICBjb25zdCB0YXNrTGlzdENvbnRlbnQgPSBnZXRUYXNrTGlzdENvbnRlbnQobWFpblVwZGF0ZU9iamVjdCk7XG5cbiAgaWYgKHRhc2tMaXN0Q29udGVudCkge1xuICAgIHRhc2tMaXN0LmFwcGVuZENoaWxkKHRhc2tMaXN0Q29udGVudCk7XG4gIH1cblxuICByZXR1cm4gdGFza0xpc3Q7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVRhc2tMaXN0IH07IiwiZnVuY3Rpb24gY3JlYXRlVGFza0xpc3RQbGFjZWhvbGRlcigpIHtcbiAgY29uc3QgcGxhY2Vob2xkZXJUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICBwbGFjZWhvbGRlclRleHQuc2V0QXR0cmlidXRlKCdpZCcsICdwbGFjZWhvbGRlci10ZXh0Jyk7XG4gIHBsYWNlaG9sZGVyVGV4dC5jbGFzc0xpc3QuYWRkKCdodnItd29iYmxlLXZlcnRpY2FsJyk7XG4gIHBsYWNlaG9sZGVyVGV4dC50ZXh0Q29udGVudCA9ICdjcmVhdGUgYSBwcm9qZWN0IGluIHRoZSBhYm92ZSBtZW51JztcblxuICBjb25zdCBwbGFjZWhvbGRlckNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIHBsYWNlaG9sZGVyQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncGxhY2Vob2xkZXItY29udGFpbmVyJyk7XG4gIHBsYWNlaG9sZGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHBsYWNlaG9sZGVyVGV4dCk7XG5cbiAgcmV0dXJuIHBsYWNlaG9sZGVyQ29udGFpbmVyO1xufVxuXG5leHBvcnQgeyBjcmVhdGVUYXNrTGlzdFBsYWNlaG9sZGVyIH07XG4iLCIvLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgZm9ybWF0RGF0ZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZm9ybWF0LWRhdGVcIjtcblxuaW1wb3J0IHsgc2V0QXR0cmlidXRlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXNcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVUYXNrSXRlbSh0YXNrT2JqZWN0KSB7XG4gIGNvbnN0IHRhc2tUaXRsZSA9ICh0YXNrT2JqZWN0LmdldE5hbWUoKSkudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgdGFza0RldGFpbHMgPSB0YXNrT2JqZWN0LmdldERldGFpbHMoKTtcbiAgY29uc3QgdGFza0R1ZURhdGUgPSB0YXNrT2JqZWN0LmdldER1ZURhdGUoKTtcbiAgY29uc3QgaXNUYXNrQ29tcGxldGUgPSB0YXNrT2JqZWN0LmdldENvbXBsZXRlZCgpO1xuICBjb25zdCBpc1Rhc2tQcmlvcml0eSA9IHRhc2tPYmplY3QuZ2V0UHJpb3JpdHkoKTtcblxuICBjb25zdCB0YXNrQ2hlY2tCb3hDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza0NoZWNrQm94Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Rhc2stY2hlY2tib3gtY29udGFpbmVyJyk7XG5cbiAgY29uc3QgdGFza0l0ZW1DaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHRhc2tJdGVtQ2hlY2tib3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG4gIHRhc2tJdGVtQ2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCBpc1Rhc2tDb21wbGV0ZSA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICBpc1Rhc2tDb21wbGV0ZSA/IHRhc2tJdGVtQ2hlY2tib3guY2hlY2tlZCA9IHRydWUgOiB0YXNrSXRlbUNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcblxuICB0YXNrSXRlbUNoZWNrYm94LmNsYXNzTGlzdC5hZGQoJ3Rhc2staXRlbS1jaGVja2JveCcpO1xuICB0YXNrQ2hlY2tCb3hDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0l0ZW1DaGVja2JveCk7XG5cbiAgY29uc3QgdGFza0l0ZW1UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XG4gIHRhc2tJdGVtVGl0bGUuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLXRpdGxlJyk7XG4gIHRhc2tJdGVtVGl0bGUudGV4dENvbnRlbnQgPSB0YXNrVGl0bGU7XG5cbiAgY29uc3QgdGFza0l0ZW1EZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICB0YXNrSXRlbURldGFpbHMuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLWRldGFpbHMnKTtcbiAgdGFza0l0ZW1EZXRhaWxzLnRleHRDb250ZW50ID0gdGFza0RldGFpbHM7XG5cbiAgY29uc3QgdGFza0l0ZW1EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICB0YXNrSXRlbURhdGUuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLWRhdGUnKTtcbiAgdGFza0l0ZW1EYXRlLnRleHRDb250ZW50ID0gYER1ZSAke2Zvcm1hdERhdGUodGFza0R1ZURhdGUpfWA7XG5cbiAgY29uc3QgdGFza1ByaW9yaXR5U3Rhckljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHRhc2tQcmlvcml0eVN0YXJJY29uLmNsYXNzTGlzdC5hZGQoJ3Rhc2stcHJpb3JpdHktc3Rhci1pY29uJywgJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnKTtcbiAgdGFza1ByaW9yaXR5U3Rhckljb24udGV4dENvbnRlbnQgPSAnc3Rhcic7XG5cbiAgY29uc3QgdGFza1ByaW9yaXR5U3RhckJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICB0YXNrUHJpb3JpdHlTdGFyQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3Rhc2stcHJpb3JpdHktc3Rhci1idXR0b24nKTsgXG4gIHNldEF0dHJpYnV0ZXModGFza1ByaW9yaXR5U3RhckJ1dHRvbiwge1xuICAgICdhcmlhLWxhYmVsJzogJ1ByaW9yaXRpemUgVGFzaycsXG4gICAgJ3R5cGUnOiAnYnV0dG9uJyxcbiAgICAnZGF0YS1jaGVja2VkJzogaXNUYXNrUHJpb3JpdHkgPyAndHJ1ZScgOiAnZmFsc2UnLFxuICB9KTtcbiAgdGFza1ByaW9yaXR5U3RhckJ1dHRvbi5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHlTdGFySWNvbik7XG5cbiAgY29uc3QgbW9kaWZ5VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBtb2RpZnlUYXNrQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21vZGlmeS10YXNrLWJ1dHRvbicpO1xuICBtb2RpZnlUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgbW9kaWZ5VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnRWRpdCBUYXNrJyk7XG5cbiAgY29uc3QgbW9kaWZ5VGFza0J1dHRvbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XG4gIG1vZGlmeVRhc2tCdXR0b25JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLWVsbGlwc2lzLXZlcnRpY2FsJyk7XG4gIG1vZGlmeVRhc2tCdXR0b24uYXBwZW5kQ2hpbGQobW9kaWZ5VGFza0J1dHRvbkljb24pO1xuXG4gIGNvbnN0IHRhc2tCdXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza0J1dHRvbkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrLWl0ZW0tYnV0dG9uLWNvbnRhaW5lcicpO1xuICB0YXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tQcmlvcml0eVN0YXJCdXR0b24pO1xuICB0YXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vZGlmeVRhc2tCdXR0b24pO1xuXG4gIGNvbnN0IHRhc2tSaWdodFNpZGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza1JpZ2h0U2lkZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrLXJpZ2h0LXNpZGUtY29udGFpbmVyJyk7XG4gIHRhc2tSaWdodFNpZGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0l0ZW1EYXRlKTtcbiAgdGFza1JpZ2h0U2lkZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrQnV0dG9uQ29udGFpbmVyKTtcblxuICBjb25zdCB0YXNrSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIHRhc2tJdGVtLmNsYXNzTGlzdC5hZGQoJ3Rhc2staXRlbScpO1xuICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrQ2hlY2tCb3hDb250YWluZXIpO1xuICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrSXRlbVRpdGxlKTtcbiAgaWYgKHRhc2tEZXRhaWxzLnRyaW0oKSAhPT0gJycpIHtcbiAgICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrSXRlbURldGFpbHMpO1xuICB9XG4gIHRhc2tJdGVtLmFwcGVuZENoaWxkKHRhc2tSaWdodFNpZGVDb250YWluZXIpO1xuXG4gIHJldHVybiB0YXNrSXRlbTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGFza0l0ZW0gfTtcbiIsImZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZVN0cmluZywgb3B0aW9ucykge1xuICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xuICBsZXQgZGF0ZU9wdGlvbnM7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBkYXRlT3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgZWxzZSB7XG4gICAgZGF0ZU9wdGlvbnMgPSB7XG4gICAgICB5ZWFyOiAnbnVtZXJpYycsXG4gICAgICBtb250aDogJ3Nob3J0JyxcbiAgICAgIGRheTogJ251bWVyaWMnXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygnZW4tdXMnLCBkYXRlT3B0aW9ucyk7XG59XG5cbmV4cG9ydCB7IGZvcm1hdERhdGUgfSIsImZ1bmN0aW9uIGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShzZWxlY3Rvcikge1xuICBjb25zdCB0YXJnZXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIFxuICBpZiAoIXRhcmdldEVsZW1lbnQpIHtcbiAgICBjb25zb2xlLmVycm9yKGBFbGVtZW50IG5vdCBmb3VuZCBmb3Igc2VsZWN0b3I6ICR7c2VsZWN0b3J9YCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldEVsZW1lbnRcbn1cblxuZXhwb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH07IiwiLy8gKiBldmVudHMgKHB1Ymxpc2ggc3Vic2NyaWJlIC8gbWVkaWF0b3IpIHBhdHRlcm5cbmxldCBldmVudHMgPSB7XG4gIGV2ZW50czoge30sXG4gIG9uOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBmbikge1xuICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0gPSB0aGlzLmV2ZW50c1tldmVudE5hbWVdIHx8IFtdO1xuICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0ucHVzaChmbik7XG4gIH0sXG4gIG9mZjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZm4pIHtcbiAgICBpZiAodGhpcy5ldmVudHNbZXZlbnROYW1lXSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmV2ZW50c1tldmVudE5hbWVdLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50c1tldmVudE5hbWVdW2ldID09PSBmbikge1xuICAgICAgICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0uc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBlbWl0OiBmdW5jdGlvbiAoZXZlbnROYW1lLCBkYXRhKSB7XG4gICAgaWYgKHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0pIHtcbiAgICAgIHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0uZm9yRWFjaChmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgZm4oZGF0YSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG59O1xuXG4vLyAhIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIHdpdGggb246XG4gIC8vICogZXZlbnQgbmFtZVxuLy8gKiAgIGZ1bmN0aW9uIHRvIHJ1blxuLy8gKiAgIGFkZCBmdW5jdGlvbiB0byBldmVudHMgb2JqZWN0XG4vLyAqICAgZXZlbnRzID0ge1xuLy8gKiAgICAgZXZlbnRzOiB7XG4vLyAqICAgICAgIGV2ZW50TmFtZTogW2ZuXSxcbi8vICogICAgIH0sXG4vLyAqICAgfVxuLy8gKlxuLy8gKiB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCB3aXRoIGVtaXQ6XG4vLyAqICAgZXZlbnRzID0ge1xuLy8gKiAgICAgZXZlbnRzOiB7XG4vLyAqICAgICAgIGV2ZW50TmFtZTogW2ZuXSxcbi8vICogICAgIH0sXG4vLyAqICAgfVxuLy8gKiAgIGV2ZW50cy5ldmVudHMuZXZlbnROYW1lLmZvckVhY2goZm4gPT4gZm4oZGF0YSkpO1xuLy8gKlxuLy8gKiB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCB3aXRoIG9mZjpcbi8vICogICBldmVudHMgPSB7XG4vLyAqICAgICBldmVudHM6IHtcbi8vICogICAgICAgZXZlbnROYW1lOiBbZm5dLFxuLy8gKiAgICAgfSxcbi8vICogICB9XG4vLyAqICAgZXZlbnRzLmV2ZW50cy5ldmVudE5hbWUuZm9yRWFjaChmbiA9PiB7XG4vLyAqICAgICBpZiAoZm4gPT09IGZuKSB7XG4vLyAqICAgICAgIGV2ZW50cy5ldmVudHMuZXZlbnROYW1lLnNwbGljZShpLCAxKTtcbi8vICogICAgIH1cbi8vICogICB9KTtcbi8vICpcbi8vICogICBmdW5jdGlvbiB0byByZW1vdmVcbi8vICogICByZW1vdmUgZnVuY3Rpb24gZnJvbSBldmVudHMgb2JqZWN0XG4vLyAqICAgZXZlbnRzID0ge1xuLy8gKiAgICAgZXZlbnRzOiB7XG4vLyAqICAgICAgIGV2ZW50TmFtZTogW10sXG4vLyAqICAgICB9LFxuLy8gKiAgIH1cbi8vICpcblxuZXhwb3J0IHsgZXZlbnRzIH07IiwiLy8gKiBEQVRBXG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi9kYXRhJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gdG9nZ2xlU3Rhckljb24ocHJpb3JpdHlCdXR0b24sIGlzUHJpb3JpdHkpIHtcbiAgaWYgKGlzUHJpb3JpdHkgPT09ICdmYWxzZScpIHtcbiAgICBwcmlvcml0eUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtY2hlY2tlZCcsICd0cnVlJyk7XG4gIH0gZWxzZSBpZiAoaXNQcmlvcml0eSA9PT0gJ3RydWUnKSB7XG4gICAgcHJpb3JpdHlCdXR0b24uc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAnZmFsc2UnKTtcbiAgfVxufVxuXG5cbmZ1bmN0aW9uIHRvZ2dsZVRhc2tQcmlvcml0eShwcmlvcml0eUJ1dHRvbiwgdGFza05hbWUpIHtcbiAgY29uc3QgaXNQcmlvcml0eSA9IHByaW9yaXR5QnV0dG9uLmdldEF0dHJpYnV0ZSgnZGF0YS1jaGVja2VkJyk7XG4gIGNvbnN0IHRhc2tPYmplY3QgPSBnZXRUYXNrT2JqZWN0KHRhc2tOYW1lKTtcblxuICB0b2dnbGVTdGFySWNvbihwcmlvcml0eUJ1dHRvbiwgaXNQcmlvcml0eSk7XG5cbiAgaWYgKGlzUHJpb3JpdHkgPT09ICdmYWxzZScpIHtcbiAgICB0YXNrT2JqZWN0LnNldFByaW9yaXR5KHRydWUpO1xuICB9IGVsc2UgaWYgKGlzUHJpb3JpdHkgPT09ICd0cnVlJykge1xuICAgIHRhc2tPYmplY3Quc2V0UHJpb3JpdHkoZmFsc2UpO1xuICB9XG59XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gZ2V0VGFza09iamVjdCh0YXNrTmFtZSkge1xuICBjb25zdCBhbGxUYXNrcyA9IGRhdGEuZ2V0QWxsVGFza3MoKTtcbiAgY29uc3QgdGFza09iamVjdCA9IGFsbFRhc2tzLmZpbmQodGFzayA9PiB0YXNrLmdldE5hbWUoKSA9PT0gdGFza05hbWUpO1xuXG4gIHJldHVybiB0YXNrT2JqZWN0XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZVRhc2tDb21wbGV0aW9uKGNoZWNrYm94LCB0YXNrTmFtZSkge1xuICBjb25zdCBpc0NoZWNrZWQgPSBjaGVja2JveC5jaGVja2VkO1xuICBjb25zdCB0YXNrT2JqZWN0ID0gZ2V0VGFza09iamVjdCh0YXNrTmFtZSk7XG4gIFxuICBpZiAoaXNDaGVja2VkID09PSB0cnVlKSB7XG4gICAgdGFza09iamVjdC5zZXRDb21wbGV0ZWQodHJ1ZSk7XG4gICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAndHJ1ZScpO1xuICB9IGVsc2UgaWYgKGlzQ2hlY2tlZCA9PT0gZmFsc2UpIHtcbiAgICB0YXNrT2JqZWN0LnNldENvbXBsZXRlZChmYWxzZSk7XG4gICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAnZmFsc2UnKTtcbiAgfVxufVxuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmltcG9ydCB7IFRPR0dMRV9FRElUX1RBU0tfRk9STSB9IGZyb20gJy4vZXZlbnROYW1lcyc7XG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi91dGlsaXRpZXMvcHVic3ViJztcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tICcuLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXMnO1xuXG5sZXQgbW9kYWxTdGF0ZTtcblxuZnVuY3Rpb24gaGFuZGxlTW9kYWxCdXR0b25zKGV2ZW50KSB7XG4gIGlmICghZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZWRpdC10YXNrLWJ1dHRvbicpKSByZXR1cm47XG5cbiAgY29uc3QgdGFyZ2V0SWQgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKCdpZCcpO1xuICBjb25zdCBpc1NhdmVCdXR0b24gPSB0YXJnZXRJZCA9PT0gJ3NhdmUtZWRpdC10YXNrLWJ1dHRvbic7XG4gIGNvbnN0IGlzQ2FuY2VsQnV0dG9uID0gdGFyZ2V0SWQgPT09ICdjYW5jZWwtZWRpdC10YXNrLWJ1dHRvbic7XG5cbiAgaWYgKGlzU2F2ZUJ1dHRvbikge1xuICAgIGNvbnNvbGUubG9nKCdhZGQgZnVuY3Rpb25hbGl0eSB0byBzYXZlIGVkaXQgdGFzayBidXR0b24nKTtcbiAgICAvLyBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24oZXZlbnQudGFyZ2V0KTtcbiAgfSBlbHNlIGlmIChpc0NhbmNlbEJ1dHRvbikge1xuICAgIGV2ZW50cy5lbWl0KFRPR0dMRV9FRElUX1RBU0tfRk9STSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9nZ2xlTW9kYWxCdXR0b25Db250YWluZXJFdmVudExpc3RlbmVycyhtb2RhbFN0YXRlKSB7XG4gIGNvbnN0IGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcuZWRpdC10YXNrLWJ1dHRvbi1jb250YWluZXInKTtcblxuICBpZiAobW9kYWxTdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICBlZGl0VGFza0J1dHRvbkNvbnRhaW5lci5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU1vZGFsQnV0dG9ucyk7XG4gIH0gZWxzZSBpZiAobW9kYWxTdGF0ZSA9PT0gJ3Zpc2libGUnKSB7XG4gICAgZWRpdFRhc2tCdXR0b25Db250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVNb2RhbEJ1dHRvbnMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWxFbmhhbmNlZChlbGVtZW50KSB7XG4gIG1vZGFsU3RhdGUgPSAnaGlkZGVuJztcblxuICBlbGVtZW50LmNsb3NlKCk7XG4gIHNldEF0dHJpYnV0ZXMoZWxlbWVudCwge1xuICAgICdkYXRhLWhpZGRlbic6ICdoaWRkZW4nLFxuICAgICdhcmlhLWxhYmVsJzogJ2hpZGRlbicsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBhbmltYXRlUHJlRGlzcGxheU5vbmUoZWxlbWVudCwgY2FsbGJhY2spIHtcbiAgY29uc3Qgb25BbmltYXRpb25FbmQgPSAoKSA9PiB7XG4gICAgY2FsbGJhY2soZWxlbWVudCk7XG5cbiAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIG9uQW5pbWF0aW9uRW5kKTtcbiAgfTtcbiAgXG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWhpZGRlbicsICdjbG9zaW5nJyk7XG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgb25BbmltYXRpb25FbmQpOyBcbn1cblxuZnVuY3Rpb24gc2hvd01vZGFsRW5oYW5jZWQobW9kYWwpIHtcbiAgbW9kYWwuc2hvd01vZGFsKCk7XG4gIHNldEF0dHJpYnV0ZXMobW9kYWwsIHtcbiAgICAnZGF0YS1oaWRkZW4nOiAndmlzaWJsZScsXG4gICAgJ2FyaWEtbGFiZWwnOiAndmlzaWJsZScsXG4gIH0pO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVFZGl0VGFza0Zvcm1WaXNpYmlsaXR5KGRhdGEpIHtcbiAgY29uc3QgZWRpdFRhc2tNb2RhbCA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnI2VkaXQtdGFzay1tb2RhbCcpO1xuICBjb25zdCB0YXNrTW9kYWxWaXNpYmlsaXR5T25DYWxsID0gZWRpdFRhc2tNb2RhbC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJyk7XG5cbiAgaWYgKHRhc2tNb2RhbFZpc2liaWxpdHlPbkNhbGwgPT09ICdoaWRkZW4nKSB7XG4gICAgbW9kYWxTdGF0ZSA9ICd2aXNpYmxlJztcbiAgICBcbiAgICBzaG93TW9kYWxFbmhhbmNlZChlZGl0VGFza01vZGFsKVxuICAgIHRvZ2dsZU1vZGFsQnV0dG9uQ29udGFpbmVyRXZlbnRMaXN0ZW5lcnMobW9kYWxTdGF0ZSk7IFxuICB9IGVsc2UgaWYgKHRhc2tNb2RhbFZpc2liaWxpdHlPbkNhbGwgPT09ICd2aXNpYmxlJykge1xuICAgIG1vZGFsU3RhdGUgPSAnY2xvc2luZyc7XG5cbiAgICBhbmltYXRlUHJlRGlzcGxheU5vbmUoZWRpdFRhc2tNb2RhbCwgY2xvc2VNb2RhbEVuaGFuY2VkKTtcblxuICAgIHRvZ2dsZU1vZGFsQnV0dG9uQ29udGFpbmVyRXZlbnRMaXN0ZW5lcnMobW9kYWxTdGF0ZSk7XG4gIH1cblxuICAvLyBUT0RPOiBcbiAgLy8gbGV0IFtldmVudCwgdGFza05hbWVdID0gWy4uLmRhdGFdO1xuICAvLyBjb25zb2xlLmxvZyh0YXNrTmFtZSk7XG4gIC8vIGNvbnNvbGUubG9nKGV2ZW50LnRhcmdldCk7XG59XG5cbmZ1bmN0aW9uIGVtaXRFZGl0VGFza0Zvcm1WaXNpYmlsaXR5VG9nZ2xlKGRhdGEpIHtcbiAgZXZlbnRzLmVtaXQoVE9HR0xFX0VESVRfVEFTS19GT1JNLCBkYXRhKTtcbn1cblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5pbXBvcnQgeyBjcmVhdGVFZGl0VGFza01vZGFsIH0gZnJvbSAnLi9jcmVhdGUtZWRpdC10YXNrLW1vZGFsJztcblxuXG5sZXQgaXNFZGl0VGFza0Zvcm1FdmVudFB1Ymxpc2hlZCA9IGZhbHNlO1xuXG5mdW5jdGlvbiBhcHBlbmRUYXNrRWRpdE1vZGFsVG9ET00oKSB7XG4gIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjY29udGVudCcpO1xuICBjb25zdCBlZGl0VGFza01vZGFsID0gY3JlYXRlRWRpdFRhc2tNb2RhbCgpO1xuICBjb250ZW50RWxlbWVudC5hcHBlbmRDaGlsZChlZGl0VGFza01vZGFsKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlVGFza0l0ZW1JbnRlcmFjdGFibGVzKGV2ZW50KSB7XG4gIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgY29uc3QgdGFyZ2V0VGFnTmFtZSA9IHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgaWYgKHRhcmdldFRhZ05hbWUgIT09ICdidXR0b24nICYmIHRhcmdldFRhZ05hbWUgIT09ICdpbnB1dCcpIHJldHVybjtcblxuICBjb25zdCB0YXNrSXRlbSA9IHRhcmdldC5jbG9zZXN0KCcudGFzay1pdGVtJyk7XG4gIGlmICghdGFza0l0ZW0pIHJldHVybjtcblxuICBjb25zdCB0YXNrTmFtZSA9IHRhc2tJdGVtXG4gICAgLnF1ZXJ5U2VsZWN0b3IoJy50YXNrLWl0ZW0tdGl0bGUnKVxuICAgIC50ZXh0Q29udGVudC50b0xvd2VyQ2FzZSgpO1xuICBjb25zdCBoYW5kbGVycyA9IHtcbiAgICAndGFzay1pdGVtLWNoZWNrYm94JzogKCkgPT4gdG9nZ2xlVGFza0NvbXBsZXRpb24odGFyZ2V0LCB0YXNrTmFtZSksXG4gICAgJ3Rhc2stcHJpb3JpdHktc3Rhci1idXR0b24nOiAoKSA9PiB0b2dnbGVUYXNrUHJpb3JpdHkodGFyZ2V0LCB0YXNrTmFtZSksXG4gICAgJ21vZGlmeS10YXNrLWJ1dHRvbic6ICgpID0+XG4gICAgICBlbWl0RWRpdFRhc2tGb3JtVmlzaWJpbGl0eVRvZ2dsZShbZSwgdGFza05hbWVdKSxcbiAgfTtcblxuICBjb25zdCBoYW5kbGVyID0gaGFuZGxlcnNbdGFyZ2V0LmNsYXNzTmFtZV07XG4gIGlmIChoYW5kbGVyKSBoYW5kbGVyKCk7XG59XG5cbmZ1bmN0aW9uIGFkZFRhc2tMaXN0RXZlbnRMaXN0ZW5lcih0YXNrTGlzdEVsZW1lbnQpIHtcbiAgdGFza0xpc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlVGFza0l0ZW1JbnRlcmFjdGFibGVzKTtcbn1cblxuZnVuY3Rpb24gcHVibGlzaEVkaXRUYXNrRXZlbnQoKSB7XG4gIGV2ZW50cy5vbihUT0dHTEVfRURJVF9UQVNLX0ZPUk0sIHRvZ2dsZUVkaXRUYXNrRm9ybVZpc2liaWxpdHkpO1xuICBpc0VkaXRUYXNrRm9ybUV2ZW50UHVibGlzaGVkID0gdHJ1ZTtcblxuICByZXR1cm4gaXNFZGl0VGFza0Zvcm1FdmVudFB1Ymxpc2hlZFxufVxuXG5mdW5jdGlvbiBoYW5kbGVUYXNrSXRlbXModGFza0xpc3RFbGVtZW50KSB7XG4gIGFwcGVuZFRhc2tFZGl0TW9kYWxUb0RPTSgpO1xuICBhZGRUYXNrTGlzdEV2ZW50TGlzdGVuZXIodGFza0xpc3RFbGVtZW50KTtcblxuICBpZiAoaXNFZGl0VGFza0Zvcm1FdmVudFB1Ymxpc2hlZCkgcmV0dXJuO1xuICBwdWJsaXNoRWRpdFRhc2tFdmVudCgpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVUYXNrSXRlbXMsIGlzRWRpdFRhc2tGb3JtRXZlbnRQdWJsaXNoZWQgfTtcblxuLy8gcmVtb3ZlIGFuZCBjcmVhdGVUYXNrTGlzdCBwdXR0aW5nIHRoZSBwcmlvcml0eSB0YXNrcyBmaXJzdCBkYXRlIHNvcnRlZFxuLy8gZm9sbG93ZWQgYnkgdGhlIG5vbi1wcmlvcml0eSB0YXNrcyBkYXRlIHNvcnRlZCIsIi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVFZGl0VGFza0Zvcm0gfSBmcm9tICcuL2NyZWF0ZS1lZGl0LXRhc2stZm9ybS5qcyc7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBzZXRBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVFZGl0VGFza01vZGFsKCkge1xuICBjb25zdCBlZGl0VGFza0hlYWRpbmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICBlZGl0VGFza0hlYWRpbmcuc2V0QXR0cmlidXRlKCdpZCcsICdlZGl0LXRhc2staGVhZGluZycpO1xuICBlZGl0VGFza0hlYWRpbmcudGV4dENvbnRlbnQgPSAnRWRpdCBUYXNrJztcblxuICBjb25zdCBlZGl0VGFza01vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGlhbG9nJyk7XG4gIHNldEF0dHJpYnV0ZXMoZWRpdFRhc2tNb2RhbCwge1xuICAgICdpZCc6ICdlZGl0LXRhc2stbW9kYWwnLFxuICAgICdhcmlhLWxhYmVsJzogJ2hpZGRlbicsXG4gICAgJ2RhdGEtaGlkZGVuJzogJ2hpZGRlbicsXG4gIH0pO1xuICBlZGl0VGFza01vZGFsLmFwcGVuZENoaWxkKGVkaXRUYXNrSGVhZGluZyk7XG4gIGVkaXRUYXNrTW9kYWwuYXBwZW5kQ2hpbGQoY3JlYXRlRWRpdFRhc2tGb3JtKCkpO1xuXG4gIHJldHVybiBlZGl0VGFza01vZGFsO1xufVxuXG5leHBvcnQgeyBjcmVhdGVFZGl0VGFza01vZGFsIH07IiwiLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgVE9HR0xFX0VESVRfVEFTS19GT1JNIH0gZnJvbSAnLi9ldmVudE5hbWVzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gJy4uL3V0aWxpdGllcy9wdWJzdWInO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVFZGl0VGFza0Zvcm0oKSB7XG4gIGNvbnN0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICB0aXRsZUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWxhYmVsJyk7XG4gIHRpdGxlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAnZWRpdC10YXNrLXRpdGxlJyk7XG4gIHRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnVGl0bGUnO1xuXG4gIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICB0aXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWlucHV0Jyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay10aXRsZScpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCAndHJ1ZScpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnd2hhdCBhcmUgdGhlIHZpYmVzPycpO1xuICB0aXRsZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnRzLmVtaXQoVE9HR0xFX0VESVRfVEFTS19GT1JNKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IHRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRpdGxlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RpdGxlLWNvbnRhaW5lcicpO1xuICB0aXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnB1dC1jb250YWluZXInKTtcbiAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGVMYWJlbCk7XG4gIHRpdGxlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xuXG4gIGNvbnN0IGRldGFpbHNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGRldGFpbHNMYWJlbC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2stbGFiZWwnKTtcbiAgZGV0YWlsc0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2VkaXQtdGFzay1kZXRhaWxzJyk7XG4gIGRldGFpbHNMYWJlbC50ZXh0Q29udGVudCA9ICdEZXRhaWxzIChvcHRpb25hbCknO1xuXG4gIGNvbnN0IGRldGFpbHNJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGRldGFpbHNJbnB1dC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2staW5wdXQnKTtcbiAgZGV0YWlsc0lucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gIGRldGFpbHNJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1kZXRhaWxzJyk7XG4gIGRldGFpbHNJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ3RlbGwgbWUgbW9yZScpO1xuICBkZXRhaWxzSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudHMuZW1pdChUT0dHTEVfRURJVF9UQVNLX0ZPUk0pO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgZGV0YWlsc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkZXRhaWxzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2RldGFpbHMtY29udGFpbmVyJyk7XG4gIGRldGFpbHNDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnaW5wdXQtY29udGFpbmVyJyk7XG4gIGRldGFpbHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZGV0YWlsc0xhYmVsKTtcbiAgZGV0YWlsc0NvbnRhaW5lci5hcHBlbmRDaGlsZChkZXRhaWxzSW5wdXQpO1xuXG4gIGNvbnN0IGR1ZURhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGR1ZURhdGVMYWJlbC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2stbGFiZWwnKTtcbiAgZHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2VkaXQtdGFzay1kdWUtZGF0ZScpO1xuICBkdWVEYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnRHVlIERhdGUnO1xuXG4gIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2staW5wdXQnKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICdkYXRlJyk7XG4gIGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1kdWUtZGF0ZScpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdyZXF1aXJlZCcsIHRydWUpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd5eXl5LW1tLWRkJyk7XG4gIGR1ZURhdGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50cy5lbWl0KFRPR0dMRV9FRElUX1RBU0tfRk9STSk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBkdWVEYXRlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGR1ZURhdGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZHVlLWRhdGUtY29udGFpbmVyJyk7XG4gIGR1ZURhdGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnaW5wdXQtY29udGFpbmVyJyk7XG4gIGR1ZURhdGVDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlRGF0ZUxhYmVsKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmRDaGlsZChkdWVEYXRlSW5wdXQpO1xuXG4gIGNvbnN0IHNhdmVFZGl0VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWJ1dHRvbicpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdzYXZlLWVkaXQtdGFzay1idXR0b24nKTtcbiAgc2F2ZUVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgc2F2ZUVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdFZGl0IFRhc2snKTtcbiAgc2F2ZUVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgnZm9ybScsICdlZGl0LXRhc2stZm9ybScpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24udGV4dENvbnRlbnQgPSAnc2F2ZSc7XG5cbiAgY29uc3QgY2FuY2VsRWRpdFRhc2tCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgY2FuY2VsRWRpdFRhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWJ1dHRvbicpO1xuICBjYW5jZWxFZGl0VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NhbmNlbC1lZGl0LXRhc2stYnV0dG9uJyk7XG4gIGNhbmNlbEVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgY2FuY2VsRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0NhbmNlbCBBZGQgVGFzaycpO1xuICBjYW5jZWxFZGl0VGFza0J1dHRvbi50ZXh0Q29udGVudCA9ICdjYW5jZWwnO1xuXG4gIGNvbnN0IGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2VkaXQtdGFzay1idXR0b24tY29udGFpbmVyJyk7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHNhdmVFZGl0VGFza0J1dHRvbik7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEVkaXRUYXNrQnV0dG9uKTtcblxuICBjb25zdCBlZGl0VGFza0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIGVkaXRUYXNrRm9ybS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1mb3JtJyk7XG4gIGVkaXRUYXNrRm9ybS5hcHBlbmRDaGlsZCh0aXRsZUNvbnRhaW5lcik7XG4gIGVkaXRUYXNrRm9ybS5hcHBlbmRDaGlsZChkZXRhaWxzQ29udGFpbmVyKTtcbiAgZWRpdFRhc2tGb3JtLmFwcGVuZENoaWxkKGR1ZURhdGVDb250YWluZXIpO1xuICBlZGl0VGFza0Zvcm0uYXBwZW5kQ2hpbGQoZWRpdFRhc2tCdXR0b25Db250YWluZXIpO1xuXG4gIGNvbnN0IGVkaXRUYXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBlZGl0VGFza0Zvcm1Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWZvcm0tY29udGFpbmVyJyk7XG4gIGVkaXRUYXNrRm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0VGFza0Zvcm0pO1xuXG4gIHJldHVybiBlZGl0VGFza0Zvcm1Db250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUVkaXRUYXNrRm9ybSB9O1xuIiwiaW1wb3J0IHsgZW5hYmxlU2Nyb2xsQW5pbWF0aW9ucyB9IGZyb20gJy4vZW5hYmxlLXNjcm9sbC1hbmltYXRpb24nO1xuaW1wb3J0IHsgaGFuZGxlVGFza0l0ZW1zIH0gZnJvbSAnLi9oYW5kbGUtdGFzay1pdGVtcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gaGFuZGxlVGFza0xpc3QodGFza0xpc3RFbGVtZW50KSB7XG4gIGNvbnN0IHRhc2tMaXN0Q2hpbGRyZW4gPSB0YXNrTGlzdEVsZW1lbnQuY2hpbGRyZW47XG4gIGNvbnN0IHRhc2tMaXN0Rmlyc3RDaGlsZCA9IHRhc2tMaXN0Q2hpbGRyZW5bMF07XG5cbiAgLy8gVE9ETzogZ2V0IHN0YXRlIG9mIHRhc2tMaXN0IGV2ZW50cy4uLiBpZiBldmVudHMgZnJvbSBlaXRoZXIgb2YgdGhlIGZ1bmN0aW9ucyBlbmFibGVTY3JvbGxBbmltYXRpb25zIG9yIGhhbmRsZVRhc2tJdGVtcyBhcmUgcHVibGlzaGVkIGFuZCBvciBoYXZlIGxpc3RlbmVycywgdGhlbiByZW1vdmUgdGhlbSBhbGwgaWYgdGhlIHRhc2tMaXN0Q2hpbGRyZW4ubGVuZ3RoIGlzIDBcblxuICBpZiAoXG4gICAgdGFza0xpc3RGaXJzdENoaWxkICYmXG4gICAgdGFza0xpc3RGaXJzdENoaWxkLmhhc0F0dHJpYnV0ZSgnaWQnLCAncGxhY2Vob2xkZXItY29udGFpbmVyJylcbiAgKVxuICAgIHJldHVybjtcblxuICBpZiAodGFza0xpc3RDaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgZW5hYmxlU2Nyb2xsQW5pbWF0aW9ucygpO1xuICAgIGhhbmRsZVRhc2tJdGVtcyh0YXNrTGlzdEVsZW1lbnQpO1xuICB9XG59XG5cbmV4cG9ydCB7IGhhbmRsZVRhc2tMaXN0IH07IiwiLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IHNjcm9sbEVsZW1lbnRDb250ZW50IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9zY3JvbGwtZWxlbWVudC1jb250ZW50XCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gZ2V0Q29udGFpbmVyc1dpdGhPdmVyZmxvdyhjb250YWluZXJzKSB7XG4gIGNvbnN0IGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3cgPSBbXTtcblxuICBjb250YWluZXJzLmZvckVhY2goKGNvbnRhaW5lcikgPT4ge1xuICAgIGNvbnN0IGNvbnRhaW5lcldpZHRoID0gY29udGFpbmVyLmNsaWVudFdpZHRoO1xuICAgIGNvbnN0IGNvbnRhaW5lclNjcm9sbFdpZHRoID0gY29udGFpbmVyLnNjcm9sbFdpZHRoO1xuXG4gICAgaWYgKGNvbnRhaW5lcldpZHRoIDwgY29udGFpbmVyU2Nyb2xsV2lkdGgpIHtcbiAgICAgIGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3cucHVzaChjb250YWluZXIpO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3c7XG59XG5cbmZ1bmN0aW9uIGVuYWJsZVNjcm9sbEFuaW1hdGlvbnMoKSB7XG4gIGNvbnN0IHRhc2tEZXRhaWxDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2staXRlbS1kZXRhaWxzJyk7XG5cbiAgY29uc3QgY29udGFpbmVyc1dpdGhPdmVyZmxvdyA9IGdldENvbnRhaW5lcnNXaXRoT3ZlcmZsb3codGFza0RldGFpbENvbnRhaW5lcnMpO1xuXG4gIGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3cuZm9yRWFjaCgoY29udGFpbmVyKSA9PiB7XG4gICAgc2Nyb2xsRWxlbWVudENvbnRlbnQoY29udGFpbmVyLCAnYmFja3dhcmQnLCAwLjUpO1xuICB9KTtcbn1cblxuZXhwb3J0IHsgZW5hYmxlU2Nyb2xsQW5pbWF0aW9ucyB9O1xuIiwiXG5mdW5jdGlvbiBzY3JvbGxFbGVtZW50Q29udGVudChjb250YWluZXJFbGVtZW50LCBkaXJlY3Rpb24sIHNwZWVkKSB7XG4gIGxldCBlbGVtZW50TWluaW11bVdpZHRoID0gY29udGFpbmVyRWxlbWVudC5zY3JvbGxXaWR0aDtcbiAgLy8gPyBlcXVhbCB0byB0aGUgbWluaW11bSB3aWR0aCB0aGUgZWxlbWVudCByZXF1aXJlcyBpbiBvcmRlciB0byBmaXQgYWxsXG4gIC8vID8gdGhlIGNvbnRlbnQgaW4gdGhlIHZpZXdwb3J0IHdpdGhvdXQgdXNpbmcgYSBob3Jpem9udGFsIHNjcm9sbGJhciBpbiBwaXhlbHNcbiAgLy8gPyBtb3JlIGluZm86IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9FbGVtZW50L3Njcm9sbFdpZHRoXG5cbiAgbGV0IGVsZW1lbnRBY3R1YWxXaWR0aCA9IGNvbnRhaW5lckVsZW1lbnQuY2xpZW50V2lkdGhcbiAgLy8gPyB6ZXJvIGZvciBpbmxpbmUgZWxlbWVudHMgYW5kIGVsZW1lbnRzIHdpdGggbm8gY3NzLCBvdGhlcndpc2UgaXQncyB0aGUgaW5uZXJcbiAgLy8gPyB3aWR0aCBvZiBhbiBlbGVtZW50IGluIHBpeGVsc1xuICAvLyA/IG1vcmUgaW5mbzogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VsZW1lbnQvY2xpZW50V2lkdGggXG5cbiAgbGV0IG1heFNjcm9sbCA9IGVsZW1lbnRNaW5pbXVtV2lkdGggLSBlbGVtZW50QWN0dWFsV2lkdGg7XG4gIC8vID8gdGhlIG1pbWltdW0gd2lkdGggdG8gZml0IGFsbCBjb250bmV0IHZzIHRoZSBhY3R1YWwgd2lkdGggb2YgdGhlIGVsZW1lbnQgdGVsbCB1cyB0aGVcbiAgLy8gPyB0aGUgdG90YWwgc2Nyb2xsYWJsZSBkaXN0YW5jZVxuICBcbiAgbGV0IHNjcm9sbERpcmVjdGlvbiA9XG4gICAgZGlyZWN0aW9uID09PSAnZm9yd2FyZCdcbiAgICAgID8gMVxuICAgICAgOiBkaXJlY3Rpb24gPT09ICdiYWNrd2FyZCdcbiAgICAgICAgPyAtMVxuICAgICAgICA6IGNvbnNvbGUuZXJyb3IoYERpcmVjdGlvbiBwYXJhbWV0ZXIgQWNjZXB0cyBcImZvcndhcmQgb3IgXCJiYWNrd2FyZFwiIFxcbiBZb3UgZW50ZXJlZDogXCIke2RpcmVjdGlvbn1cImApO1xuXG4gIGZ1bmN0aW9uIHNjcm9sbEVsZW1lbnRDb250ZW50KHRpbWVzdGFtcCkge1xuICAgIGxldCBjdXJyZW50U2Nyb2xsUG9zaXRpb24gPSBjb250YWluZXJFbGVtZW50LnNjcm9sbExlZnQ7XG4gICAgLy8gPyBjdXJyZW50U2Nyb2xsUG9zaXRpb24gaXMgdGhlIGN1cnJlbnQgZGlzdGFuY2UgaW4gcGl4ZWxzXG4gICAgLy8gPyB0aGF0IGFuIGVsZW1lbnRzIGNvbnRlbnQgaXMgc2Nyb2xsZWQgZnJvbSBhbiB0aGUgZWxlbWVudHNcbiAgICAvLyA/IGxlZnQgZWRnZVxuXG4gICAgbGV0IG5ld0Rpc3RhbmNlVG9DcmVhdGUgPSBzcGVlZCAqIHNjcm9sbERpcmVjdGlvbjtcbiAgICAvLyA/IG5ld0Rpc3RhbmNlVG9DcmVhdGUgY2FsY3VsYXRlcyB0aGUgbnVtYmVyIG9mIHBpeGVscyB0b1xuICAgIC8vID8gc2Nyb2xsIGluIHRoZSBjdXJyZW50IGZyYW1lXG5cbiAgICBsZXQgY3VycmVudFNjcm9sbCA9IGN1cnJlbnRTY3JvbGxQb3NpdGlvbiArIG5ld0Rpc3RhbmNlVG9DcmVhdGU7XG4gICAgLy8gPyB0aGUgZnVsbCBkaXN0YW5jZSBhd2F5IGZyb20gdGhlIGVsZW1lbnRzIGxlZnQgZWRnZSB0aGF0XG4gICAgLy8gPyB0aGUgZWxlbWVudHMgY29udGVudCB3aWxsIGJlIGZvciB0aGUgY3VycmVudCBmcmFtZVxuXG4gICAgLy8gKiBSZXZlcnNlIGRpcmVjdGlvbiBhdCB0aGUgZW5kc1xuICAgIGlmIChjdXJyZW50U2Nyb2xsID49IG1heFNjcm9sbCkgeyBcbiAgICAgIC8vID8gZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvbyBpcyBtb3JlIHJlbGlhYmxlIGhlcmUgdGhhbiBcbiAgICAgIC8vID8gZXF1YWxpdHkgaXQgZW5zdXJlcyB0aGF0IHRoZSBjb25kaXRpb24gaXMgbWV0IGV2ZW4gaWZcbiAgICAgIC8vID8gdGhlIGV4YWN0IHZhbHVlIGlzIHNraXBwZWQgb3ZlclxuICAgICAgLy8gPyBpdCBhbHNvIGFjY291bnRzIGZvciBlZGdlIGNhc2VzIHdoZXJlIGNvbnRlbnQgbWlnaHQgYmVcbiAgICAgIC8vID8gc2Nyb2xsZWQgc2xpZ2h0bHkgbW9yZSB0aGFuICdtYXhTY3JvbGwnIGR1ZSB0b1xuICAgICAgLy8gPyB1c2VyIGludGVyYWN0aW9uIG9yIGJyb3dzZXIgYmVoYXZpb3JcbiAgICAgIHNjcm9sbERpcmVjdGlvbiA9IC0xOyAvLyAqIENoYW5nZSBkaXJlY3Rpb24gdG8gYmFja3dhcmRcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRTY3JvbGwgPD0gMCkge1xuICAgICAgLy8gPyBzYW1lIGNvbmNlcHQgaGVyZSBhcyBhYm92ZVxuICAgICAgc2Nyb2xsRGlyZWN0aW9uID0gMTsgLy8gKiBDaGFuZ2UgZGlyZWN0aW9uIHRvIGZvcndhcmRcbiAgICB9XG5cbiAgICBjb250YWluZXJFbGVtZW50LnNjcm9sbExlZnQgPSBjdXJyZW50U2Nyb2xsO1xuXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHNjcm9sbEVsZW1lbnRDb250ZW50KTtcbiAgfVxuXG4gIHNjcm9sbEVsZW1lbnRDb250ZW50KCk7IC8vIFN0YXJ0IHRoZSBzY3JvbGxpbmdcbn1cblxuZXhwb3J0IHsgc2Nyb2xsRWxlbWVudENvbnRlbnQgfTsiLCIvLyAqIERBVEFcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuL2RhdGEnO1xuXG4vLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBBRERfTkVXX1RBU0sgfSBmcm9tICcuL2V2ZW50TmFtZXMnO1xuXG4vLyAqIExPR0lDXG5pbXBvcnQgeyB0YXNrRmFjdG9yeSB9IGZyb20gJy4vbG9naWMnO1xuXG4vLyAqIE1BUktVUFxuaW1wb3J0IHsgY3JlYXRlVGFza0xpc3QgfSBmcm9tICcuL2NyZWF0ZS10YXNrLWxpc3QnO1xuXG4vLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5IH0gZnJvbSAnLi9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXInO1xuXG4vLyAqIFNUQVRFU1xuaW1wb3J0IHsgbWFpblN0YXRlIH0gZnJvbSAnLi9oYW5kbGUtbWFpbic7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfSBmcm9tICcuLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlJztcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gJy4uL3V0aWxpdGllcy9wdWJzdWInO1xuXG5pbXBvcnQgeyBlbmFibGVTY3JvbGxBbmltYXRpb25zIH0gZnJvbSAnLi9lbmFibGUtc2Nyb2xsLWFuaW1hdGlvbic7XG5cbmltcG9ydCB7IGhhbmRsZVRhc2tJdGVtcyB9IGZyb20gJy4vaGFuZGxlLXRhc2staXRlbXMnO1xuaW1wb3J0IHsgaGFuZGxlVGFza0xpc3QgfSBmcm9tICcuL2hhbmRsZS10YXNrLWxpc3QnO1xuXG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHVwZGF0ZVRhc2tMaXN0KHByb2plY3ROYW1lKSB7XG4gIGNvbnN0IHRhc2tMaXN0ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjdGFzay1saXN0Jyk7XG4gIGNvbnN0IG1haW5Db250ZW50ID0gdGFza0xpc3QucGFyZW50Tm9kZTtcbiAgY29uc3QgcHJvamVjdE9iamVjdCA9IGRhdGEuZ2V0UHJvamVjdE9iamVjdChwcm9qZWN0TmFtZSk7XG4gIFxuICB0YXNrTGlzdC5yZW1vdmUoKTtcblxuICBjb25zdCB0YXNrTGlzdEVsZW1lbnQgPSBjcmVhdGVUYXNrTGlzdChwcm9qZWN0T2JqZWN0KTtcbiAgbWFpbkNvbnRlbnQuYXBwZW5kQ2hpbGQodGFza0xpc3RFbGVtZW50KTtcblxuICBoYW5kbGVUYXNrTGlzdCh0YXNrTGlzdEVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBhZGROZXdUYXNrKCkge1xuICBjb25zdCB0YXNrRm9ybSA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnI2FkZC10YXNrLWZvcm0nKTtcblxuICBjb25zdCB0YXNrTmFtZUlucHV0ID0gdGFza0Zvcm0ucXVlcnlTZWxlY3RvcignI3Rhc2stYWRkLXRpdGxlJyk7XG4gIGNvbnN0IHRhc2tEZXRhaWxzSW5wdXQgPSB0YXNrRm9ybS5xdWVyeVNlbGVjdG9yKCcjdGFzay1hZGQtZGV0YWlscycpO1xuICBjb25zdCB0YXNrRHVlRGF0ZUlucHV0ID0gdGFza0Zvcm0ucXVlcnlTZWxlY3RvcignI3Rhc2stYWRkLWR1ZS1kYXRlJyk7XG5cbiAgY29uc3QgdGFza05hbWUgPSB0YXNrTmFtZUlucHV0LnZhbHVlLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICBjb25zdCB0YXNrRGV0YWlscyA9IHRhc2tEZXRhaWxzSW5wdXQudmFsdWUudHJpbSgpO1xuXG4gIGNvbnNvbGUubG9nKHRhc2tEZXRhaWxzKTtcbiAgY29uc3QgdGFza0R1ZURhdGUgPSB0YXNrRHVlRGF0ZUlucHV0LnZhbHVlO1xuICBcbiAgaWYgKCF0YXNrTmFtZSkgcmV0dXJuIGFsZXJ0KCdFbnRlciBUYXNrIE5hbWUnKTtcbiAgaWYgKCF0YXNrRHVlRGF0ZSkgcmV0dXJuIGFsZXJ0KCdFbnRlciBUYXNrIER1ZSBEYXRlJyk7XG4gIGlmICh0YXNrRHVlRGF0ZSA8IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCkpIHJldHVybiBhbGVydCgnRW50ZXIgVmFsaWQgRHVlIERhdGUnKTtcbiAgLy8gVE9ETzogc3R1ZHkgZGF0ZSBvYmplY3RcbiAgLy8gY29uc29sZS5sb2cobmV3IERhdGUoKSk7XG4gIC8vIGNvbnNvbGUubG9nKG5ldyBEYXRlKCkudG9TdHJpbmcoKSk7XG4gIC8vIGNvbnNvbGUubG9nKG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCkpO1xuICAvLyBjb25zb2xlLmxvZyhuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkpO1xuICAvLyBjb25zb2xlLmxvZyhuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApKTtcbiAgLy8gY29uc29sZS5sb2codGFza0R1ZURhdGUpO1xuXG4gIHRhc2tGb3JtLnJlc2V0KCk7XG5cbiAgY29uc3QgdGFza09iamVjdCA9IHRhc2tGYWN0b3J5KHRhc2tOYW1lLCBwcm9qZWN0TmFtZSwgdGFza0R1ZURhdGUsIHRhc2tEZXRhaWxzKTtcbiAgdGFza09iamVjdC5zZXRQcm9qZWN0TmFtZShwcm9qZWN0TmFtZSk7XG4gIFxuICBjb25zdCBwcm9qZWN0TmFtZSA9IChtYWluU3RhdGUucHJvamVjdE5hbWUpLnRvTG93ZXJDYXNlKCk7XG4gIGRhdGEuYWRkVGFza1RvUHJvamVjdChwcm9qZWN0TmFtZSwgdGFza09iamVjdCk7XG5cbiAgZW1pdFRvZ2dsZVRhc2tGb3JtVmlzaWJpbGl0eSgpO1xuXG4gIHVwZGF0ZVRhc2tMaXN0KHByb2plY3ROYW1lKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza0FkZEV2ZW50KGZvcm1TdGF0ZSkge1xuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBldmVudHMub24oQUREX05FV19UQVNLLCBhZGROZXdUYXNrKTtcbiAgfVxuICBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGV2ZW50cy5vZmYoQUREX05FV19UQVNLLCBhZGROZXdUYXNrKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbWl0SW5pdGlhbGl6ZVRhc2soKSB7ICBcbiAgZXZlbnRzLmVtaXQoQUREX05FV19UQVNLKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza0FkZEJ1dHRvbkxpc3RlbmVyKGZvcm1TdGF0ZSkge1xuICBjb25zdCBhZGRUYXNrQnV0dG9uID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjYWRkLXRhc2stYnV0dG9uJyk7XG5cbiAgaWYgKGZvcm1TdGF0ZSA9PT0gJ3Zpc2libGUnKSB7XG4gICAgYWRkVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRJbml0aWFsaXplVGFzayk7XG4gIH1cbiAgZWxzZSBpZiAoZm9ybVN0YXRlID09PSAnY2xvc2luZycpIHtcbiAgICBhZGRUYXNrQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZW1pdEluaXRpYWxpemVUYXNrKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVUYXNrQWRkQnV0dG9uKGZvcm1TdGF0ZSkge1xuICB0b2dnbGVUYXNrQWRkQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKTtcbiAgdG9nZ2xlVGFza0FkZEV2ZW50KGZvcm1TdGF0ZSk7XG59XG5cbmV4cG9ydCB7IGhhbmRsZVRhc2tBZGRCdXR0b24gfTsiLCIvLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBUT0dHTEVfQUREX1RBU0tfRk9STSB9IGZyb20gXCIuL2V2ZW50TmFtZXNcIjtcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlVGFza0FkZEJ1dHRvbiB9IGZyb20gXCIuL2hhbmRsZS10YXNrLWFkZC1idXR0b25cIjtcbmltcG9ydCB7IGhhbmRsZVRhc2tDYW5jZWxCdXR0b24gfSBmcm9tIFwiLi9oYW5kbGUtdGFzay1jYW5jZWwtYnV0dG9uXCI7XG5cbi8vICogVVRJVExJSUVTXG5pbXBvcnQgeyBldmVudHMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3B1YnN1YlwiO1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2VcIjtcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmxldCB0YXNrQ29tcG9uZW50U3RhdGUgPSB7XG4gIGZvcm1TdGF0ZTogJ2hpZGRlbicsXG4gIGlzQWRkVGFza0J1dHRvbkxpc3RlbmVyQXR0YWNoZWQ6IGZhbHNlLFxufVxuXG5mdW5jdGlvbiBzZXREaXNwbGF5Tm9uZShldmVudCkge1xuICB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlID0gJ2hpZGRlbic7XG5cbiAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgdGFyZ2V0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJywgJ3RydWUnKTtcbiAgdGFyZ2V0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBzZXREaXNwbGF5Tm9uZSk7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGVQcmVEaXNwbGF5Tm9uZSh0YXJnZXRFbGVtZW50KSB7XG4gIHRhc2tDb21wb25lbnRTdGF0ZS5mb3JtU3RhdGUgPSAnY2xvc2luZyc7XG4gIFxuICB0YXJnZXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIHNldERpc3BsYXlOb25lKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQWRkVGFza0Zvcm0oKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtQ29udGFpbmVyID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcuYWRkLXRhc2stZm9ybS1jb250YWluZXInKTtcbiAgY29uc3QgY3VycmVudFRhc2tGb3JtU3RhdGUgPSB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlO1xuXG4gIGlmIChjdXJyZW50VGFza0Zvcm1TdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKGFkZFRhc2tGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnZmFsc2UnLFxuICAgICAgJ2FyaWEtbGFiZWwnOiAndmlzaWJsZScsXG4gICAgfSk7XG5cbiAgICB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlID0gJ3Zpc2libGUnO1xuICB9IGVsc2UgaWYgKGN1cnJlbnRUYXNrRm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKGFkZFRhc2tGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnY2xvc2luZycsXG4gICAgICAnYXJpYS1sYWJlbCc6ICdoaWRkZW4nLFxuICAgIH0pO1xuXG4gICAgYW5pbWF0ZVByZURpc3BsYXlOb25lKGFkZFRhc2tGb3JtQ29udGFpbmVyKTtcbiAgfVxuXG4gIGhhbmRsZVRhc2tBZGRCdXR0b24odGFza0NvbXBvbmVudFN0YXRlLmZvcm1TdGF0ZSk7XG4gIGhhbmRsZVRhc2tDYW5jZWxCdXR0b24odGFza0NvbXBvbmVudFN0YXRlLmZvcm1TdGF0ZSk7IFxufVxuXG5mdW5jdGlvbiB0b2dnbGVBZGRUYXNrQnV0dG9uRXZlbnRQdWJsaXNoaW5nKG9iamVjdFR5cGUpIHtcbiAgaWYgKG9iamVjdFR5cGUgPT09ICdwcm9qZWN0Jykge1xuICAgIGV2ZW50cy5vbihUT0dHTEVfQUREX1RBU0tfRk9STSwgdG9nZ2xlQWRkVGFza0Zvcm0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRUb2dnbGVUYXNrRm9ybVZpc2liaWxpdHkoKSB7XG4gIGV2ZW50cy5lbWl0KFRPR0dMRV9BRERfVEFTS19GT1JNKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQWRkVGFza0J1dHRvbkNsaWNrTGlzdGVuZXIob2JqZWN0VHlwZSkge1xuICBjb25zdCBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbiA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShcbiAgICAnI2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbidcbiAgKTtcblxuICBpZiAob2JqZWN0VHlwZSA9PT0gJ3Byb2plY3QnKSB7XG4gICAgYWRkVGFza0Zvcm1PcGVuZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgICB0YXNrQ29tcG9uZW50U3RhdGUuaXNBZGRUYXNrQnV0dG9uTGlzdGVuZXJBdHRhY2hlZCA9IHRydWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkVGFza0Zvcm1PcGVuZXJCdXR0b25MaXN0ZW5lcihvYmplY3RUeXBlKSB7XG4gIHRvZ2dsZUFkZFRhc2tCdXR0b25DbGlja0xpc3RlbmVyKG9iamVjdFR5cGUpO1xuICB0b2dnbGVBZGRUYXNrQnV0dG9uRXZlbnRQdWJsaXNoaW5nKG9iamVjdFR5cGUpO1xufVxuXG5leHBvcnQgeyBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5LCB0YXNrQ29tcG9uZW50U3RhdGUsIHRvZ2dsZUFkZFRhc2tGb3JtIH07IiwiLy8gKiBFTUlUVEVSU1xuaW1wb3J0IHsgZW1pdFRvZ2dsZVRhc2tGb3JtVmlzaWJpbGl0eSB9IGZyb20gXCIuL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lclwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2VcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gdG9nZ2xlQ2FuY2VsQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKSB7XG4gIGNvbnN0IGNhbmNlbEFkZFRhc2tCdXR0b24gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNjYW5jZWwtYWRkLXRhc2stYnV0dG9uJyk7XG5cbiAgaWYgKGZvcm1TdGF0ZSA9PT0gJ3Zpc2libGUnKSB7IFxuICAgIGNhbmNlbEFkZFRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGNhbmNlbEFkZFRhc2tCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVUYXNrQ2FuY2VsQnV0dG9uKGZvcm1TdGF0ZSkge1xuICB0b2dnbGVDYW5jZWxCdXR0b25MaXN0ZW5lcihmb3JtU3RhdGUpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVUYXNrQ2FuY2VsQnV0dG9uIH07IiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZVRhc2tMaXN0IH0gZnJvbSBcIi4vY3JlYXRlLXRhc2stbGlzdFwiO1xuaW1wb3J0IHsgY3JlYXRlQWRkVGFza0NvbnRhaW5lciB9IGZyb20gXCIuL2NyZWF0ZS1hZGQtdGFzay1jb250YWluZXJcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbkNvbnRlbnRDb250YWluZXIobWFpblVwZGF0ZU9iamVjdCkge1xuICBjb25zdCBtYWluSGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gIGNvbnN0IGhlYWRpbmdUZXh0Q29udGVudCA9IG1haW5VcGRhdGVPYmplY3QuZ2V0TmFtZSgpO1xuICBtYWluSGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ21haW4taGVhZGluZycpO1xuICBtYWluSGVhZGluZy50ZXh0Q29udGVudCA9IGhlYWRpbmdUZXh0Q29udGVudDtcbiAgXG4gIGNvbnN0IHRhc2tMaXN0RWxlbWVudCA9IGNyZWF0ZVRhc2tMaXN0KG1haW5VcGRhdGVPYmplY3QpO1xuXG4gIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1haW5Db250ZW50LnNldEF0dHJpYnV0ZSgnaWQnLCAnbWFpbi1jb250ZW50Jyk7XG4gIG1haW5Db250ZW50LmFwcGVuZENoaWxkKHRhc2tMaXN0RWxlbWVudCk7XG5cbiAgY29uc3QgbWFpbkNvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3Qgb2JqZWN0VHlwZSA9IG1haW5VcGRhdGVPYmplY3QuZ2V0VHlwZSgpO1xuICBtYWluQ29udGVudENvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluSGVhZGluZyk7XG4gIGlmIChvYmplY3RUeXBlID09PSAncHJvamVjdCcpIHtcbiAgICBtYWluQ29udGVudENvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVBZGRUYXNrQ29udGFpbmVyKCkpO1xuICB9IFxuICBtYWluQ29udGVudENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ21haW4tY29udGFpbmVyJyk7XG4gIG1haW5Db250ZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKG1haW5Db250ZW50KTtcbiAgXG4gIHJldHVybiBtYWluQ29udGVudENvbnRhaW5lclxufVxuXG5leHBvcnQgeyBjcmVhdGVNYWluQ29udGVudENvbnRhaW5lciB9ICIsIi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVBZGRUYXNrQnV0dG9uIH0gZnJvbSAnLi9jcmVhdGUtYWRkLXRhc2stYnV0dG9uJztcbmltcG9ydCB7IGNyZWF0ZUFkZFRhc2tGb3JtIH0gZnJvbSAnLi9jcmVhdGUtYWRkLXRhc2stZm9ybS5qcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2tDb250YWluZXIoKSB7XG4gIGNvbnN0IGFkZFRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkVGFza0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZC10YXNrLWNvbnRhaW5lcicpO1xuICBhZGRUYXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUFkZFRhc2tCdXR0b24oKSk7XG4gIGFkZFRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkVGFza0Zvcm0oKSk7XG5cbiAgcmV0dXJuIGFkZFRhc2tDb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFRhc2tDb250YWluZXIgfTtcbiIsImZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2tCdXR0b24oKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgYWRkVGFza0Zvcm1CdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0FkZCBUYXNrJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnRleHRDb250ZW50ID0gJ2FkZCB0YXNrJztcblxuICBjb25zdCBhZGRUYXNrQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGFkZFRhc2tCdXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKFxuICAgICdpZCcsXG4gICAgJ2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1jb250YWluZXInXG4gICk7XG5cbiAgYWRkVGFza0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybUJ1dHRvbik7XG5cbiAgcmV0dXJuIGFkZFRhc2tCdXR0b25Db250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFRhc2tCdXR0b24gfTtcbiIsIi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IEFERF9ORVdfVEFTSyB9IGZyb20gXCIuL2V2ZW50TmFtZXNcIjtcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gXCIuLi91dGlsaXRpZXMvcHVic3ViXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2tGb3JtKCkge1xuICBjb25zdCB0aXRsZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgdGl0bGVMYWJlbC5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1sYWJlbCcpO1xuICB0aXRsZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2stYWRkLXRpdGxlJyk7XG4gIHRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnVGl0bGUnO1xuXG4gIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICB0aXRsZUlucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWlucHV0Jyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2stYWRkLXRpdGxlJyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdyZXF1aXJlZCcsICd0cnVlJyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd3aGF0IGFyZSB0aGUgdmliZXM/Jyk7XG4gIHRpdGxlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudHMuZW1pdChBRERfTkVXX1RBU0spO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgdGl0bGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGl0bGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgndGl0bGUtY29udGFpbmVyJyk7XG4gIHRpdGxlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2lucHV0LWNvbnRhaW5lcicpO1xuICB0aXRsZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aXRsZUxhYmVsKTtcbiAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG5cbiAgY29uc3QgZGV0YWlsc0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgZGV0YWlsc0xhYmVsLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWxhYmVsJyk7XG4gIGRldGFpbHNMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrLWFkZC1kZXRhaWxzJyk7XG4gIGRldGFpbHNMYWJlbC50ZXh0Q29udGVudCA9ICdEZXRhaWxzIChvcHRpb25hbCknO1xuXG4gIGNvbnN0IGRldGFpbHNJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGRldGFpbHNJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1pbnB1dCcpO1xuICBkZXRhaWxzSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgZGV0YWlsc0lucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCAndGFzay1hZGQtZGV0YWlscycpO1xuICBkZXRhaWxzSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd0ZWxsIG1lIG1vcmUnKTtcbiAgZGV0YWlsc0lucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnRzLmVtaXQoQUREX05FV19UQVNLKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGRldGFpbHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGV0YWlsc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdkZXRhaWxzLWNvbnRhaW5lcicpO1xuICBkZXRhaWxzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2lucHV0LWNvbnRhaW5lcicpO1xuICBkZXRhaWxzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRldGFpbHNMYWJlbCk7XG4gIGRldGFpbHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZGV0YWlsc0lucHV0KTtcblxuICBjb25zdCBkdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBkdWVEYXRlTGFiZWwuY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2stbGFiZWwnKTtcbiAgZHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3Rhc2stYWRkLWR1ZS1kYXRlJyk7XG4gIGR1ZURhdGVMYWJlbC50ZXh0Q29udGVudCA9ICdEdWUgRGF0ZSc7XG5cbiAgY29uc3QgZHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgZHVlRGF0ZUlucHV0LmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWlucHV0Jyk7XG4gIGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrLWFkZC1kdWUtZGF0ZScpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdyZXF1aXJlZCcsIHRydWUpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd5eXl5LW1tLWRkJyk7XG4gIGR1ZURhdGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50cy5lbWl0KEFERF9ORVdfVEFTSyk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBkdWVEYXRlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGR1ZURhdGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZHVlLWRhdGUtY29udGFpbmVyJyk7XG4gIGR1ZURhdGVDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnaW5wdXQtY29udGFpbmVyJyk7XG4gIGR1ZURhdGVDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlRGF0ZUxhYmVsKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmRDaGlsZChkdWVEYXRlSW5wdXQpO1xuXG4gIGNvbnN0IGFkZFRhc2tCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYWRkVGFza0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1idXR0b24nKTtcbiAgYWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZC10YXNrLWJ1dHRvbicpO1xuICBhZGRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgYWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQWRkIFRhc2snKTtcbiAgYWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnYWRkLXRhc2stYnV0dG9uJyk7XG4gIGFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdmb3JtJywgJ2FkZC10YXNrLWZvcm0nKTtcbiAgYWRkVGFza0J1dHRvbi50ZXh0Q29udGVudCA9ICdhZGQnO1xuXG4gIGNvbnN0IGNhbmNlbEFkZFRhc2tCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgY2FuY2VsQWRkVGFza0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1idXR0b24nKTtcbiAgY2FuY2VsQWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NhbmNlbC1hZGQtdGFzay1idXR0b24nKTtcbiAgY2FuY2VsQWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0NhbmNlbCBBZGQgVGFzaycpO1xuICBjYW5jZWxBZGRUYXNrQnV0dG9uLnRleHRDb250ZW50ID0gJ2NhbmNlbCc7XG5cbiAgY29uc3QgYWRkVGFza0J1dHRvbkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRUYXNrQnV0dG9uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWJ1dHRvbi1jb250YWluZXInKTtcbiAgYWRkVGFza0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRUYXNrQnV0dG9uKTtcbiAgYWRkVGFza0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChjYW5jZWxBZGRUYXNrQnV0dG9uKTtcblxuICBjb25zdCBhZGRUYXNrRm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgYWRkVGFza0Zvcm0uc2V0QXR0cmlidXRlKCdpZCcsICdhZGQtdGFzay1mb3JtJyk7XG4gIGFkZFRhc2tGb3JtLmFwcGVuZENoaWxkKHRpdGxlQ29udGFpbmVyKTtcbiAgYWRkVGFza0Zvcm0uYXBwZW5kQ2hpbGQoZGV0YWlsc0NvbnRhaW5lcik7XG4gIGFkZFRhc2tGb3JtLmFwcGVuZENoaWxkKGR1ZURhdGVDb250YWluZXIpO1xuICBhZGRUYXNrRm9ybS5hcHBlbmRDaGlsZChhZGRUYXNrQnV0dG9uQ29udGFpbmVyKTtcblxuICBjb25zdCBhZGRUYXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRUYXNrRm9ybUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1mb3JtLWNvbnRhaW5lcicpO1xuICBhZGRUYXNrRm9ybUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnaGlkZGVuJyk7XG4gIGFkZFRhc2tGb3JtQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnZGF0YS1oaWRkZW4nLCB0cnVlKTtcbiAgYWRkVGFza0Zvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm0pO1xuXG4gIHJldHVybiBhZGRUYXNrRm9ybUNvbnRhaW5lcjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQWRkVGFza0Zvcm0gfTsiLCIvLyAqIERBVEFcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuL2RhdGEuanMnO1xuXG4vLyAqIEhBTkRMRVJTXG5pbXBvcnQgeyBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyLCB0YXNrQ29tcG9uZW50U3RhdGUgfSBmcm9tICcuL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lci5qcyc7XG5pbXBvcnQgeyBoYW5kbGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL25hdi10b2dnbGUvaGFuZGxlLW5hdi10b2dnbGUtYnV0dG9uLmpzJztcbmltcG9ydCB7IHJlbW92ZUFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uTGlzdGVuZXIgfSBmcm9tICcuL3JlbW92ZS1hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXIuanMnO1xuaW1wb3J0IHsgaGFuZGxlVGFza0xpc3QgfSBmcm9tICcuL2hhbmRsZS10YXNrLWxpc3QuanMnO1xuXG4vLyAqIExBWU9VVFxuaW1wb3J0IHsgY3JlYXRlTWFpbkNvbnRlbnRDb250YWluZXIgfSBmcm9tICcuL2NyZWF0ZS1tYWluLWNvbnRlbnQtY29udGFpbmVyLmpzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgbGlua09iamVjdEZhY3RvcnkgfSBmcm9tICcuL2xvZ2ljLmpzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5jb25zdCBtYWluU3RhdGUgPSB7XG4gIHVwZGF0ZU9iamVjdFR5cGU6IG51bGwsXG4gIHByb2plY3ROYW1lOiBudWxsLFxufVxuXG5mdW5jdGlvbiBjbG9zZU5hdlBvc3RUcmFuc2l0aW9uKHRhcmdldEVsZW1lbnQpIHtcbiAgdGFyZ2V0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgaGFuZGxlTmF2VG9nZ2xlQnV0dG9uLCB7XG4gICAgb25jZTogdHJ1ZSxcbiAgfSk7XG4gIC8vID8gdGhlIG9uY2Ugb3B0aW9uIGlzIHVzZWQgdG8gcmVtb3ZlIHRoZSBldmVudCBsaXN0ZW5lciBhZnRlciBpdCBoYXMgYmVlbiBjYWxsZWQgb25jZS5cbn1cblxuZnVuY3Rpb24gY2xlYXJNYWluKG1haW5FbGVtZW50KSB7XG4gIHdoaWxlIChtYWluRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgbWFpbkVsZW1lbnQucmVtb3ZlQ2hpbGQobWFpbkVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzb2x2ZU1haW5VcGRhdGVPYmplY3QobmV3Q3VycmVudE5hdkxpbmspIHtcbiAgY29uc3QgaXNQcm9qZWN0TGluayA9IG5ld0N1cnJlbnROYXZMaW5rLmhhc0F0dHJpYnV0ZSgnZGF0YS1wcm9qZWN0LW5hbWUnKTtcbiAgY29uc3QgaXNQYWdlTGluayA9IG5ld0N1cnJlbnROYXZMaW5rLmhhc0F0dHJpYnV0ZSgnZGF0YS1wYWdlLW5hbWUnKTtcblxuICBpZiAoaXNQcm9qZWN0TGluaykgeyAgICBcbiAgICBjb25zdCBwcm9qZWN0QXJyYXkgPSBkYXRhLmdldFByb2plY3RBcnJheSgpO1xuICAgIGNvbnN0IHByb2plY3RWYWx1ZSA9IG5ld0N1cnJlbnROYXZMaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1wcm9qZWN0LW5hbWUnKTtcbiAgICBjb25zdCBwcm9qZWN0T2JqZWN0ID0gcHJvamVjdEFycmF5LmZpbmQoXG4gICAgICAocHJvamVjdCkgPT4gcHJvamVjdC5nZXROYW1lKCkgPT09IHByb2plY3RWYWx1ZVxuICAgICAgKTtcbiAgICBcbiAgICBtYWluU3RhdGUudXBkYXRlT2JqZWN0VHlwZSA9ICdwcm9qZWN0JztcbiAgICBcbiAgICByZXR1cm4gcHJvamVjdE9iamVjdDtcbiAgICAgIFxuICAgIH0gZWxzZSBpZiAoaXNQYWdlTGluaykge1xuICAgIGNvbnN0IHBhZ2VOYW1lID0gbmV3Q3VycmVudE5hdkxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScpO1xuICAgIGNvbnN0IGxpbmtPYmplY3QgPSBsaW5rT2JqZWN0RmFjdG9yeShwYWdlTmFtZSwgZGF0YS5nZXRBbGxUYXNrcygpKTtcblxuICAgIG1haW5TdGF0ZS51cGRhdGVPYmplY3RUeXBlID0gJ2xpbmsnO1xuXG4gICAgcmV0dXJuIGxpbmtPYmplY3Q7XG5cbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVNYWluKHRhcmdldEVsZW1lbnQpIHtcbiAgY29uc3QgbmV3Q3VycmVudE5hdkxpbmsgPSB0YXJnZXRFbGVtZW50O1xuICBjb25zdCBtYWluVXBkYXRlT2JqZWN0ID0gcmVzb2x2ZU1haW5VcGRhdGVPYmplY3QobmV3Q3VycmVudE5hdkxpbmspO1xuICBjb25zdCBtYWluVXBkYXRlT2JqZWN0TmFtZSA9IG1haW5VcGRhdGVPYmplY3QuZ2V0TmFtZSgpO1xuICBjb25zdCBtYWluVXBkYXRlT2JqZWN0VHlwZSA9IG1haW5VcGRhdGVPYmplY3QuZ2V0VHlwZSgpO1xuICBjb25zdCBuZXdNYWluQ29udGFpbmVyID0gY3JlYXRlTWFpbkNvbnRlbnRDb250YWluZXIobWFpblVwZGF0ZU9iamVjdCk7XG4gIGNvbnN0IG5ld1Rhc2tMaXN0ID0gbmV3TWFpbkNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcjdGFzay1saXN0Jyk7XG4gIFxuICBjb25zdCBpc0FkZFRhc2tGb3JtT3BlbmVyQnV0dG9uQXR0YWNoZWQgPSB0YXNrQ29tcG9uZW50U3RhdGUuaXNBZGRUYXNrQnV0dG9uTGlzdGVuZXJBdHRhY2hlZDtcbiAgaWYgKGlzQWRkVGFza0Zvcm1PcGVuZXJCdXR0b25BdHRhY2hlZCkge1xuICAgIHJlbW92ZUFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uTGlzdGVuZXIoKTtcbiAgfVxuXG4gIGNvbnN0IG1haW5FbGVtZW50ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCdtYWluJyk7XG4gIGNsZWFyTWFpbihtYWluRWxlbWVudCk7XG5cbiAgbWFpbkVsZW1lbnQuYXBwZW5kQ2hpbGQobmV3TWFpbkNvbnRhaW5lcik7XG5cbiAgaWYgKG1haW5VcGRhdGVPYmplY3RUeXBlID09PSAncHJvamVjdCcpIHtcbiAgICBtYWluU3RhdGUucHJvamVjdE5hbWUgPSBtYWluVXBkYXRlT2JqZWN0TmFtZTtcbiAgICBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyKG1haW5VcGRhdGVPYmplY3RUeXBlKTtcbiAgfVxuXG4gIGNsb3NlTmF2UG9zdFRyYW5zaXRpb24odGFyZ2V0RWxlbWVudCk7XG4gIGhhbmRsZVRhc2tMaXN0KG5ld1Rhc2tMaXN0KTtcbn1cblxuZXhwb3J0IHsgaGFuZGxlTWFpbiwgbWFpblN0YXRlIH07XG4iLCIvLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5IH0gZnJvbSBcIi4vYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uLWxpc3RlbmVyXCI7XG5cbi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IFRPR0dMRV9BRERfVEFTS19GT1JNIH0gZnJvbSBcIi4vZXZlbnROYW1lc1wiO1xuXG4vLyAqIEVWRU5UU1xuaW1wb3J0IHsgdG9nZ2xlQWRkVGFza0Zvcm0gfSBmcm9tIFwiLi9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXJcIjtcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IHRhc2tDb21wb25lbnRTdGF0ZSB9IGZyb20gXCIuL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lclwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wdWJzdWJcIjtcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHJlbW92ZUFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uTGlzdGVuZXIoKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKFxuICAgICcjYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uJ1xuICApO1xuICBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRUb2dnbGVUYXNrRm9ybVZpc2liaWxpdHkpO1xuXG4gIHRhc2tDb21wb25lbnRTdGF0ZS5pc0FkZFRhc2tCdXR0b25MaXN0ZW5lckF0dGFjaGVkID0gZmFsc2U7XG4gIGV2ZW50cy5vZmYoVE9HR0xFX0FERF9UQVNLX0ZPUk0sIHRvZ2dsZUFkZFRhc2tGb3JtKTtcbn1cblxuZXhwb3J0IHsgcmVtb3ZlQWRkVGFza0Zvcm1PcGVuZXJCdXR0b25MaXN0ZW5lciB9OyIsIi8vICogSEFORExFUlNcbmltcG9ydCB7IGhhbmRsZU1haW4gfSBmcm9tICcuL2hhbmRsZS1tYWluLmpzJztcblxuLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgVVBEQVRFX01BSU4gfSBmcm9tICcuL2V2ZW50TmFtZXMuanMnO1xuXG4vLyAqICBTVEFURVNcbmltcG9ydCB7IG5hdlN0YXRlIH0gZnJvbSAnLi4vY29tcG9uZW50cy96aWctemFnLW5hdi9oYW5kbGUtemlnLXphZy1uYXYuanMnO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSAnLi4vdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZS5qcyc7XG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi91dGlsaXRpZXMvcHVic3ViLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gZW1pdFVwZGF0ZU1haW4oZXZlbnQpIHtcbiAgZXZlbnRzLmVtaXQoVVBEQVRFX01BSU4sIGV2ZW50KTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlT2xkQXJpYUN1cnJlbnQobm9kZWxpc3QpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2RlbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIGlmIChub2RlbGlzdFtpXS5oYXNBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcpKSB7XG4gICAgICBub2RlbGlzdFtpXS5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldEFyaWFDdXJyZW50KHRhcmdldEVsZW1lbnQpIHtcbiAgY29uc3QgbmF2ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcuemlnLXphZy1uYXYnKTtcbiAgY29uc3QgbmF2TGlua3MgPSBuYXYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbmF2LWxpbmsnKTtcblxuICByZW1vdmVPbGRBcmlhQ3VycmVudChuYXZMaW5rcyk7XG5cbiAgdGFyZ2V0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtY3VycmVudCcsICdwYWdlJyk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrSWZDbGlja2FibGVOYXZMaW5rKHRhcmdldEVsZW1lbnQpIHtcbiAgY29uc3QgaXNUYXJnZXROYXZMaW5rID0gdGFyZ2V0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ25hdi1saW5rJyk7XG4gIGNvbnN0IGlzVGFyZ2V0TGlua0FjdGl2ZSA9IHRhcmdldEVsZW1lbnQuaGFzQXR0cmlidXRlKCdhcmlhLWN1cnJlbnQnKTtcbiAgY29uc3QgaXNUYXJnZXRMaW5rQ2xpY2thYmxlID0gaXNUYXJnZXROYXZMaW5rICYmICFpc1RhcmdldExpbmtBY3RpdmU7XG5cbiAgaWYgKGlzVGFyZ2V0TGlua0NsaWNrYWJsZSkgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNldEFjdGl2ZUxpbmsoZXZlbnQpIHtcbiAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgY29uc3QgaXNUYXJnZXRFbGVtZW50TmF2TGluayA9IGNoZWNrSWZDbGlja2FibGVOYXZMaW5rKHRhcmdldEVsZW1lbnQpO1xuICBpZiAoIWlzVGFyZ2V0RWxlbWVudE5hdkxpbmspIHJldHVybjtcblxuICBzZXRBcmlhQ3VycmVudCh0YXJnZXRFbGVtZW50KTtcbiAgZW1pdFVwZGF0ZU1haW4odGFyZ2V0RWxlbWVudCk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZU5hdkxpbmtMaXN0ZW5lcnMoKSB7XG4gIGNvbnN0IHppZ1phZ05hdiA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnLnppZy16YWctbmF2Jyk7XG5cbiAgaWYgKG5hdlN0YXRlLm9wZW4gPT09IHRydWUpIHtcbiAgICB6aWdaYWdOYXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZXRBY3RpdmVMaW5rKTtcbiAgfSBlbHNlIGlmIChuYXZTdGF0ZS5vcGVuID09PSBmYWxzZSkge1xuICAgIHppZ1phZ05hdi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHNldEFjdGl2ZUxpbmspO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5hdkxpbmtzKCkge1xuICBpZiAobmF2U3RhdGUub3BlbiA9PT0gdHJ1ZSkge1xuICAgIGV2ZW50cy5vbihVUERBVEVfTUFJTiwgaGFuZGxlTWFpbik7XG4gIH0gZWxzZSBpZiAobmF2U3RhdGUub3BlbiA9PT0gZmFsc2UpIHtcbiAgICBldmVudHMub2ZmKFVQREFURV9NQUlOLCBoYW5kbGVNYWluKTtcbiAgfVxuICB0b2dnbGVOYXZMaW5rTGlzdGVuZXJzKCk7XG59XG5cbmV4cG9ydCB7IGhhbmRsZU5hdkxpbmtzIH07IiwiLy8gKiBTVFlMRVNIRUVUU1xuaW1wb3J0ICcuL2xpc3RJY29uLnNjc3MnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVMaXN0SWNvbigpIHtcbiAgY29uc3QgbGlzdEljb25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbGlzdEljb25Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnbGlzdC1pY29uLWNvbnRhaW5lcicpO1xuICBsaXN0SWNvbkNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XG5cbiAgY29uc3QgbGlzdEljb25CYXJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGxpc3RJY29uQmFycy5jbGFzc0xpc3QuYWRkKCdsaXN0LWljb24tYmFycycpO1xuXG4gIGxpc3RJY29uQ29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RJY29uQmFycyk7XG5cbiAgcmV0dXJuIGxpc3RJY29uQ29udGFpbmVyO1xufVxuXG5leHBvcnQgeyBjcmVhdGVMaXN0SWNvbiB9O1xuXG4iLCIvLyAqIERBVEFcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuL2RhdGEuanMnO1xuXG4vLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlIH0gZnJvbSAnLi9oYW5kbGUtbmV3LXByb2plY3QtYnV0dG9uJztcblxuLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgQUREX05FV19QUk9KRUNUIH0gZnJvbSAnLi9ldmVudE5hbWVzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgcHJvamVjdEZhY3RvcnkgfSBmcm9tICcuL2xvZ2ljJztcblxuLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZVByb2plY3RJdGVtIH0gZnJvbSAnLi9jcmVhdGUtcHJvamVjdC1pdGVtJztcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IGZvcm1Db21wb25lbnRTdGF0ZSB9IGZyb20gJy4vaGFuZGxlLW5ldy1wcm9qZWN0LWJ1dHRvbic7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi91dGlsaXRpZXMvcHVic3ViJztcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UnO1xuaW1wb3J0IHsgdG9nZ2xlU2Nyb2xsQmFyVmlzaWJpbGl0eSB9IGZyb20gJy4uL3V0aWxpdGllcy90b2dnbGUtc2Nyb2xsLXZpc2liaWxpdHkuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiB1cGRhdGVQcm9qZWN0TGlzdChkYXRhLCBwcm9qZWN0TGlzdCkge1xuICBjb25zdCByZXZlcnNlZFByb2plY3RBcnJheSA9IGRhdGEuZ2V0UHJvamVjdEFycmF5KCkuc2xpY2UoKS5yZXZlcnNlKCk7XG4gIC8vID8gdG8gcHV0IHRoZSBtb3N0IHJlY2VudGx5IGFkZGVkIHByb2plY3QgYXQgdGhlIHRvcCBvZiB0aGUgbGlzdFxuICAvLyAqIHNsaWNlKCkgaXMgdXNlZCB0byBjcmVhdGUgYSBjb3B5IG9mIHRoZSBhcnJheVxuICAvLyAqIG5vdCBlbnRlcmluZyBhIHN0YXJ0IGFuZCBlbmQgaW5kZXggd2lsbCByZXR1cm4gYSBjb3B5IG9mIHRoZSBlbnRpcmUgYXJyYXlcbiAgLy8gKiByZXZlcnNlKCkgaXMgdXNlZCB0byByZXZlcnNlIHRoZSBvcmRlciBvZiB0aGUgYXJyYXlcblxuICB3aGlsZSAocHJvamVjdExpc3QuZmlyc3RDaGlsZCkge1xuICAgIHByb2plY3RMaXN0LnJlbW92ZUNoaWxkKHByb2plY3RMaXN0LmZpcnN0Q2hpbGQpO1xuICB9XG5cbiAgcmV2ZXJzZWRQcm9qZWN0QXJyYXkuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgIHByb2plY3RMaXN0LmFwcGVuZENoaWxkKGNyZWF0ZVByb2plY3RJdGVtKHByb2plY3QuZ2V0TmFtZSgpKSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjaGVja0xpc3RPdmVyZmxvdyhwcm9qZWN0TGlzdCkge1xuICB0b2dnbGVTY3JvbGxCYXJWaXNpYmlsaXR5KHByb2plY3RMaXN0KTtcbn1cblxuZnVuY3Rpb24gQWRkTmV3UHJvamVjdCgpIHtcbiAgY29uc3QgcHJvamVjdEZvcm0gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNhZGQtcHJvamVjdC1mb3JtJyk7XG5cbiAgY29uc3QgcHJvamVjdE5hbWVJbnB1dCA9IHByb2plY3RGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LW5hbWUtaW5wdXQnKTtcbiAgY29uc3QgcHJvamVjdE5hbWUgPSBwcm9qZWN0TmFtZUlucHV0LnZhbHVlLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICghcHJvamVjdE5hbWUpIHJldHVybiBhbGVydCgnRW50ZXIgUHJvamVjdCBOYW1lJyk7XG4gIHByb2plY3RGb3JtLnJlc2V0KClcblxuICBjb25zdCBwcm9qZWN0T2JqZWN0ID0gcHJvamVjdEZhY3RvcnkocHJvamVjdE5hbWUpO1xuICBkYXRhLmFkZFByb2plY3QocHJvamVjdE9iamVjdCk7IC8vID8gaW1wb3J0ZWQgZnJvbSBkYXRhLmpzXG5cbiAgY29uc3QgcHJvamVjdExpc3QgPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNwcm9qZWN0LW5hdi1saXN0Jyk7XG4gIHVwZGF0ZVByb2plY3RMaXN0KGRhdGEsIHByb2plY3RMaXN0KTtcblxuICBjaGVja0xpc3RPdmVyZmxvdyhwcm9qZWN0TGlzdCk7XG5cbiAgZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSgpOyAvLyA/IGVtaXRzIFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNXG5cbiAgZm9ybUNvbXBvbmVudFN0YXRlLnByb2plY3RGb3JtU3RhdGUgPSAnaGlkZGVuJztcbn1cblxuZnVuY3Rpb24gdG9nZ2xlUHJvamVjdEFkZEV2ZW50KGZvcm1TdGF0ZSkge1xuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBldmVudHMub24oQUREX05FV19QUk9KRUNULCBBZGROZXdQcm9qZWN0KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGV2ZW50cy5vZmYoQUREX05FV19QUk9KRUNULCBBZGROZXdQcm9qZWN0KTtcbiAgfVxufSBcblxuZnVuY3Rpb24gZW1pdEluaXRpYWxpemVQcm9qZWN0KCkge1xuICBldmVudHMuZW1pdChBRERfTkVXX1BST0pFQ1QpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVQcm9qZWN0QWRkQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKSB7XG4gIGNvbnN0IHByb2plY3RBZGRCdXR0b24gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNhZGQtcHJvamVjdC1idXR0b24nKTtcblxuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBwcm9qZWN0QWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZW1pdEluaXRpYWxpemVQcm9qZWN0KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIHByb2plY3RBZGRCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0SW5pdGlhbGl6ZVByb2plY3QpO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gaGFuZGxlUHJvamVjdEFkZEJ1dHRvbihmb3JtU3RhdGUpIHtcbiAgdG9nZ2xlUHJvamVjdEFkZEJ1dHRvbkxpc3RlbmVyKGZvcm1TdGF0ZSk7XG4gIHRvZ2dsZVByb2plY3RBZGRFdmVudChmb3JtU3RhdGUpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVQcm9qZWN0QWRkQnV0dG9uIH07IiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUxpc3RJY29uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbGlzdEljb24vY3JlYXRlLWxpc3QtaWNvblwiOyAvLyA/ICBJTiBDT01QT05FTlRTIEZPTERFUlxuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVQcm9qZWN0SXRlbShwcm9qZWN0TmFtZSkge1xuICBjb25zdCBwcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIHByb2plY3RCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmF2LWxpbmsnKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIHByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgYFByb2plY3QgJHtwcm9qZWN0TmFtZX1gKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdC1uYW1lJywgcHJvamVjdE5hbWUpO1xuICBwcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG5cbiAgY29uc3QgbGlzdEljb24gPSBjcmVhdGVMaXN0SWNvbigpO1xuXG4gIGNvbnN0IHByb2plY3RMaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIHByb2plY3RMaS5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWxpJyk7XG4gIHByb2plY3RMaS5jbGFzc0xpc3QuYWRkKCduYXYtbGknKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCBgUHJvamVjdCAke3Byb2plY3ROYW1lfWApO1xuICBwcm9qZWN0TGkuYXBwZW5kQ2hpbGQobGlzdEljb24pO1xuICBwcm9qZWN0TGkuYXBwZW5kQ2hpbGQocHJvamVjdEJ1dHRvbik7XG5cbiAgcmV0dXJuIHByb2plY3RMaTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlUHJvamVjdEl0ZW0gfTsiLCJmdW5jdGlvbiB0b2dnbGVTY3JvbGxCYXJWaXNpYmlsaXR5KGNvbnRhaW5lcikge1xuICBpZiAoY29udGFpbmVyLnNjcm9sbFdpZHRoID4gY29udGFpbmVyLmNsaWVudFdpZHRoKSB7XG4gICAgLy8gPyBDb250ZW50IG92ZXJmbG93cywgc2hvdyBzY3JvbGxiYXJcbiAgICBjb250YWluZXIuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7XG4gIH0gZWxzZSB7XG4gICAgLy8gPyBDb250ZW50IGRvZXMgbm90IG92ZXJmbG93LCBoaWRlIHNjcm9sbGJhclxuICAgIGNvbnRhaW5lci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICB9XG59XG5cbmV4cG9ydCB7IHRvZ2dsZVNjcm9sbEJhclZpc2liaWxpdHkgfTsiLCIvLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBUT0dHTEVfQUREX1BST0pFQ1RfRk9STSB9IGZyb20gXCIuL2V2ZW50TmFtZXNcIjtcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlUHJvamVjdEFkZEJ1dHRvbiB9IGZyb20gXCIuL2hhbmRsZS1wcm9qZWN0LWFkZC1idXR0b25cIjtcbmltcG9ydCB7IGhhbmRsZVByb2plY3RDYW5jZWxCdXR0b24gfSBmcm9tIFwiLi9oYW5kbGUtcHJvamVjdC1jYW5jZWwtYnV0dG9uXCI7XG5cbi8vICogU1RBVEVTXG5pbXBvcnQgeyBuYXZTdGF0ZSB9IGZyb20gXCIuLi9jb21wb25lbnRzL3ppZy16YWctbmF2L2hhbmRsZS16aWctemFnLW5hdlwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wdWJzdWJcIjtcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlXCI7XG5pbXBvcnQgeyBjbGVhclRleHRJbnB1dCB9IGZyb20gXCIuLi91dGlsaXRpZXMvY2xlYXItdGV4dC1pbnB1dFwiO1xuaW1wb3J0IHsgc2V0QXR0cmlidXRlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXNcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubGV0IGZvcm1Db21wb25lbnRTdGF0ZSA9IHtcbiAgcHJvamVjdEZvcm1TdGF0ZTogJ2hpZGRlbicsXG59XG5cbmZ1bmN0aW9uIHNldERpc3BsYXlOb25lKGV2ZW50KSB7XG4gIGZvcm1Db21wb25lbnRTdGF0ZS5wcm9qZWN0Rm9ybVN0YXRlID0gJ2hpZGRlbic7XG5cbiAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgdGFyZ2V0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJywgJ3RydWUnKTtcbiAgdGFyZ2V0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBzZXREaXNwbGF5Tm9uZSk7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGVQcmVEaXNwbGF5Tm9uZSh0YXJnZXRFbGVtZW50KSB7XG4gIGZvcm1Db21wb25lbnRTdGF0ZS5wcm9qZWN0Rm9ybVN0YXRlID0gJ2Nsb3NpbmcnO1xuXG4gIHRhcmdldEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgc2V0RGlzcGxheU5vbmUpOyBcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQWRkUHJvamVjdEZvcm0oKSB7XG4gIGNvbnN0IHByb2plY3RGb3JtQ29udGFpbmVyID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKFxuICAgICcjYWRkLXByb2plY3QtZm9ybSdcbiAgKTtcbiAgY29uc3QgcHJvamVjdEZvcm1TdGF0ZSA9IGZvcm1Db21wb25lbnRTdGF0ZS5wcm9qZWN0Rm9ybVN0YXRlO1xuXG4gIGlmIChwcm9qZWN0Rm9ybVN0YXRlID09PSAnaGlkZGVuJykge1xuICAgIHNldEF0dHJpYnV0ZXMocHJvamVjdEZvcm1Db250YWluZXIsIHtcbiAgICAgICdkYXRhLWhpZGRlbic6ICdmYWxzZScsXG4gICAgICAnYXJpYS1sYWJlbCc6ICd2aXNpYmxlJyxcbiAgICB9KTtcblxuICAgIGZvcm1Db21wb25lbnRTdGF0ZS5wcm9qZWN0Rm9ybVN0YXRlID0gJ3Zpc2libGUnO1xuICB9IGVsc2UgaWYgKHByb2plY3RGb3JtU3RhdGUgPT09ICd2aXNpYmxlJykge1xuICAgIHNldEF0dHJpYnV0ZXMocHJvamVjdEZvcm1Db250YWluZXIsIHtcbiAgICAgICdkYXRhLWhpZGRlbic6ICdjbG9zaW5nJyxcbiAgICAgICdhcmlhLWxhYmVsJzogJ2hpZGRlbicsXG4gICAgfSk7XG5cbiAgICBhbmltYXRlUHJlRGlzcGxheU5vbmUocHJvamVjdEZvcm1Db250YWluZXIpO1xuXG4gICAgY29uc3QgcHJvamVjdE5hbWVJbnB1dCA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnI3Byb2plY3QtbmFtZS1pbnB1dCcpO1xuICAgIGNsZWFyVGV4dElucHV0KHByb2plY3ROYW1lSW5wdXQpO1xuICB9XG5cbiAgaGFuZGxlUHJvamVjdEFkZEJ1dHRvbihmb3JtQ29tcG9uZW50U3RhdGUucHJvamVjdEZvcm1TdGF0ZSk7XG4gIGhhbmRsZVByb2plY3RDYW5jZWxCdXR0b24oZm9ybUNvbXBvbmVudFN0YXRlLnByb2plY3RGb3JtU3RhdGUpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVOZXdQcm9qZWN0QnV0dG9uRXZlbnRQdWJsaXNoaW5nKG5hdlN0YXRlKSB7XG4gIGlmIChuYXZTdGF0ZS5vcGVuID09PSB0cnVlKSB7XG4gICAgZXZlbnRzLm9uKFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNLCB0b2dnbGVBZGRQcm9qZWN0Rm9ybSk7XG4gIH0gZWxzZSBpZiAobmF2U3RhdGUub3BlbiA9PT0gZmFsc2UpIHtcbiAgICBldmVudHMub2ZmKFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNLCB0b2dnbGVBZGRQcm9qZWN0Rm9ybSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSgpIHtcbiAgZXZlbnRzLmVtaXQoVE9HR0xFX0FERF9QUk9KRUNUX0ZPUk0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVOZXdQcm9qZWN0QnV0dG9uKCkge1xuICBjb25zdCBuZXdQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25ldy1wcm9qZWN0LWJ1dHRvbicpO1xuXG4gIGlmIChuYXZTdGF0ZS5vcGVuID09PSB0cnVlKSB7XG4gICAgbmV3UHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUpO1xuICB9IGVsc2UgaWYgKG5hdlN0YXRlLm9wZW4gPT09IGZhbHNlKSB7XG4gICAgbmV3UHJvamVjdEJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUpO1xuICB9XG5cbiAgdG9nZ2xlTmV3UHJvamVjdEJ1dHRvbkV2ZW50UHVibGlzaGluZyhuYXZTdGF0ZSk7XG59XG5cbmV4cG9ydCB7IGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUsIGhhbmRsZU5ld1Byb2plY3RCdXR0b24sIGZvcm1Db21wb25lbnRTdGF0ZSB9OyIsImZ1bmN0aW9uIGNsZWFyVGV4dElucHV0KGlucHV0RWxlbWVudCkge1xuICBpbnB1dEVsZW1lbnQudmFsdWUgPSAnJztcbn1cblxuZXhwb3J0IHsgY2xlYXJUZXh0SW5wdXQgfTsiLCIvLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlIH0gZnJvbSBcIi4vaGFuZGxlLW5ldy1wcm9qZWN0LWJ1dHRvblwiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiB0b2dnbGVDYW5jZWxCdXR0b25MaXN0ZW5lcihmb3JtU3RhdGUpIHtcbiAgY29uc3QgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW5jZWwtYWRkLXByb2plY3QtYnV0dG9uJyk7XG5cbiAgICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHsgXG4gICAgICBjYW5jZWxBZGRQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSk7XG4gICAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgICAgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByb2plY3RDYW5jZWxCdXR0b24oZm9ybVN0YXRlKSB7XG4gIHRvZ2dsZUNhbmNlbEJ1dHRvbkxpc3RlbmVyKGZvcm1TdGF0ZSk7XG59XG5cbmV4cG9ydCB7IGhhbmRsZVByb2plY3RDYW5jZWxCdXR0b24gfTsiLCIvLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBISURFX05BVl9FVkVOVCwgU0hPV19OQVZfRVZFTlQgfSBmcm9tICcuLi8uLi9qcy9ldmVudE5hbWVzLmpzJztcblxuLy8gKiBIQU5MREVSU1xuaW1wb3J0IHsgaGFuZGxlTmF2TGlua3MgfSBmcm9tICcuLi8uLi9qcy9oYW5kbGUtbmF2LWxpbmtzLmpzJztcbmltcG9ydCB7IGhhbmRsZU5ld1Byb2plY3RCdXR0b24gfSBmcm9tICcuLi8uLi9qcy9oYW5kbGUtbmV3LXByb2plY3QtYnV0dG9uLmpzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9wdWJzdWIuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5sZXQgbmF2U3RhdGUgPSB7XG4gIG9wZW46IGZhbHNlLFxuICBhbmltYXRpbmc6IGZhbHNlLFxufVxuXG5mdW5jdGlvbiBoaWRlTmF2KCkge1xuICBuYXZTdGF0ZS5vcGVuID0gZmFsc2U7XG4gIG5hdlN0YXRlLmFuaW1hdGluZyA9IGZhbHNlO1xuXG4gIGNvbnN0IHppZ1phZ05hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy56aWctemFnLW5hdicpO1xuICBcbiAgemlnWmFnTmF2LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIGhpZGVOYXYpO1xuICBcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCB0cnVlKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnZGF0YS12aXNpYmlsaXR5JywgZmFsc2UpO1xuXG4gIGhhbmRsZU5ld1Byb2plY3RCdXR0b24oKTtcbiAgaGFuZGxlTmF2TGlua3MoKTtcbn1cblxuZnVuY3Rpb24gaW5pdGlhdGVIaWRlTmF2KCkge1xuICBuYXZTdGF0ZS5hbmltYXRpbmcgPSB0cnVlO1xuXG4gIGNvbnN0IHppZ1phZ05hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy56aWctemFnLW5hdicpO1xuICB6aWdaYWdOYXYuc2V0QXR0cmlidXRlKCdkYXRhLXZpc2liaWxpdHknLCAnY2xvc2luZycpO1xuICB6aWdaYWdOYXYuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgaGlkZU5hdik7XG59XG5cbmZ1bmN0aW9uIHNob3dOYXYoKSB7XG4gIG5hdlN0YXRlLm9wZW4gPSB0cnVlO1xuICBuYXZTdGF0ZS5hbmltYXRpbmcgPSBmYWxzZTtcblxuICBjb25zdCB6aWdaYWdOYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuemlnLXphZy1uYXYnKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCBmYWxzZSk7XG4gIHppZ1phZ05hdi5zZXRBdHRyaWJ1dGUoJ2RhdGEtdmlzaWJpbGl0eScsIHRydWUpO1xuXG4gIGhhbmRsZU5hdkxpbmtzKCk7XG4gIGhhbmRsZU5ld1Byb2plY3RCdXR0b24oKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTmF2KCkge1xuICBldmVudHMub24oU0hPV19OQVZfRVZFTlQsIHNob3dOYXYpO1xuICBldmVudHMub24oSElERV9OQVZfRVZFTlQsIGluaXRpYXRlSGlkZU5hdik7XG59XG5cbmV4cG9ydCB7IGhhbmRsZU5hdiwgbmF2U3RhdGUgfTsiLCIvLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBISURFX05BVl9FVkVOVCwgU0hPV19OQVZfRVZFTlQgfSBmcm9tICcuLi8uLi9qcy9ldmVudE5hbWVzLmpzJztcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IG5hdlN0YXRlIH0gZnJvbSAnLi4vemlnLXphZy1uYXYvaGFuZGxlLXppZy16YWctbmF2LmpzJztcblxuLy8gKiBVVElMSVRFU1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL3B1YnN1Yi5qcyc7XG5pbXBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gaGFuZGxlTmF2VG9nZ2xlQnV0dG9uKCkge1xuICBjb25zdCB0b2dnbGVCdXR0b24gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJy5uYXYtdG9nZ2xlLWJ1dHRvbicpO1xuICBjb25zdCB0b2dnbGVCdXR0b25BY3RpdmF0ZWQgPSB0b2dnbGVCdXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKTtcblxuICBpZiAoIXRvZ2dsZUJ1dHRvbkFjdGl2YXRlZCkge1xuICAgIGlmIChuYXZTdGF0ZS5hbmltYXRpbmcgPT09IHRydWUpIHJldHVybjtcblxuICAgIHRvZ2dsZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblxuICAgIHRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQ2xvc2UgTmF2aWdhdGlvbiBNZW51Jyk7XG4gICAgdG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIHRydWUpO1xuXG4gICAgZXZlbnRzLmVtaXQoU0hPV19OQVZfRVZFTlQpO1xuICB9IGVsc2Uge1xuICAgIHRvZ2dsZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcblxuICAgIHRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnT3BlbiBOYXZpZ2F0aW9uIE1lbnUnKTtcbiAgICB0b2dnbGVCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgZmFsc2UpO1xuXG4gICAgZXZlbnRzLmVtaXQoSElERV9OQVZfRVZFTlQpO1xuICB9XG59XG5cbmV4cG9ydCB7IGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbiB9O1xuIiwiLy8gKiBEQVRBXG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi9kYXRhLmpzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgbGlua09iamVjdEZhY3RvcnkgfSBmcm9tICcuL2xvZ2ljLmpzJztcblxuLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUhlYWRlciB9IGZyb20gJy4vY3JlYXRlLWhlYWRlci5qcyc7XG5pbXBvcnQgeyBjcmVhdGVNYWluIH0gZnJvbSAnLi9jcmVhdGUtbWFpbi5qcyc7XG5pbXBvcnQgeyBjcmVhdGVaaWdaYWdOYXYgfSBmcm9tICcuLi9jb21wb25lbnRzL3ppZy16YWctbmF2L2NyZWF0ZS16aWctemFnLW5hdi5qcyc7XG5cbi8vICogTU9ESUZJRVJTXG5pbXBvcnQgeyBtb2RpZnlHZW5lcmljTmF2TGlua3MgfSBmcm9tICcuL21vZGlmeS1nZW5lcmljLW5hdi1saW5rcy5qcyc7XG5pbXBvcnQgeyBtb2RpZnlTZWNvbmROYXZDb250YWluZXIgfSBmcm9tICcuL21vZGlmeS1zZWNvbmQtbmF2LWNvbnRhaW5lci5qcyc7XG5pbXBvcnQgeyBpbmplY3RGb250QXdlc29tZVNjcmlwdCB9IGZyb20gJy4vaW5qZWN0LWZvbnQtYXdlc29tZS1zY3JpcHQuanMnO1xuaW1wb3J0IHsgaW5qZWN0U3Rhck1hdGVyaWFsSWNvbiB9IGZyb20gJy4vaW5qZWN0LXN0YXItbWF0ZXJpYWwtaWNvbi5qcyc7XG5cbi8vICogU1RZTEVTSEVFVFNcbmltcG9ydCAnLi4vY29tcG9uZW50cy96aWctemFnLW5hdi96aWctemFnLW5hdi5zY3NzJztcbmltcG9ydCAnLi4vY3NzL3N0eWxlcy5jc3MnO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgY3JlYXRlU2Nyb2xsQW5pbWF0aW9uIH0gZnJvbSAnLi4vdXRpbGl0aWVzL3Njcm9sbC1lbGVtZW50LWNvbnRlbnQuanMnO1xuXG5jb25zdCBjb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKTtcblxuLy8gKiBJTkpFQ1QgZm9udCBhd2Vzb21lIHNjcmlwdFxuaW5qZWN0Rm9udEF3ZXNvbWVTY3JpcHQoKTtcbmluamVjdFN0YXJNYXRlcmlhbEljb24oKTtcblxuLy8gKiBDUkVBVEUgaGVhZGVyXG5jb250ZW50LmFwcGVuZENoaWxkKGNyZWF0ZUhlYWRlcigpKTsgIFxuXG4vLyAqIENSRUFURSBuYXZcbi8qIFxuICDilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJBcbiAg4pSCIC8vIFBBUkFNOiBjcmVhdGVaaWdaYWdOYXYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKUglxuICDilIIgLy8gPyAxLiBvYmplY3RPZkxpc3RzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCXG4gIOKUgiAvLyA/IDIuIGluaXRpYWxQYWdlICh1c2VkIHRvIHNldCB0aGUgYXJpYSAtIGN1cnJlbnQgYXR0cmlidXRlKSAgICAgICAgICDilIJcbiAg4pSCIC8vID8gMy4gbmF2VHlwZSAoYW5jaG9yIGZvciAnYScgdGFncyAvIGJ1dHRvbiBmb3IgJ2J1dHRvbiB0YWdzKSAgICAgICAgIOKUglxuICDilIIgLy8gPyA0LiBpZCAoc2V0cyBuYXZpZ2F0aW9ucyBpZCBmb3IgYXJpYSBpbiBjb25qdW5jdGlvbiB3aXRoIGEgbmF2ICAgICAg4pSCXG4gIOKUgiAgIC8vID8gdG9nZ2xlIGJ1dHRvbikgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilIIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilIJcbiAg4pSCIC8vID8gNS4gc3BlY2lhbE5hdkxpbmtBcnIgaXMgYW4gYXJyYXkgb2YgcGFnZSBuYW1lcyB3aXRoIHRoYXQgd2lsbCAgICAgIOKUglxuICDilIIgICAvLyA/IGJlIHVzZWQgdG8gY3JlYXRlIGEgc3BlY2lhbCBuYXYgbGlua3MgdmlhIGEgdW5pcXVlIGNzcyBjbGFzcyAgICAg4pSCXG4gIOKUlOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUmFxuICovXG5jb25zdCBsaXN0T2JqZWN0cyA9IHtcbiAgSG9tZToge1xuICAgIGxpc3RFbGVtZW50czogW1xuICAgICAgWydBbGwgVGFza3MnLCAnIyddLFxuICAgICAgWydUb2RheScsICcjJ10sXG4gICAgICBbJ05leHQgNyBEYXlzJywgJyMnXSxcbiAgICAgIFsnUHJpb3JpdGllcycsICcjJ10sXG4gICAgXSxcbiAgfSxcbiAgUHJvamVjdHM6IHtcbiAgICBsaXN0RWxlbWVudHM6IFtdLFxuICB9LFxufTtcbmNvbnRlbnQuYXBwZW5kQ2hpbGQoXG4gIGNyZWF0ZVppZ1phZ05hdihsaXN0T2JqZWN0cywgJ0FsbCBUYXNrcycsICdidXR0b24nLCAnbmF2LXByaW1hcnktYXJpYScpXG4pO1xuXG4vLyAqIE1PRElGSUVSIENBTExTIChvcmRlciBtYXR0ZXJzKVxubW9kaWZ5U2Vjb25kTmF2Q29udGFpbmVyKCk7XG5tb2RpZnlHZW5lcmljTmF2TGlua3MoKTtcblxuLy8gIVxuLy8gIVxuLy8gIVxuXG5jb250ZW50LmFwcGVuZENoaWxkKGNyZWF0ZU1haW4obGlua09iamVjdEZhY3RvcnkoJ2FsbCB0YXNrcycsIGRhdGEuZ2V0QWxsVGFza3MoKSkpKTtcblxuXG4vLyAhXG4vLyAhXG4vLyAhIiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUFkZFByb2plY3RDb250YWluZXIgfSBmcm9tICcuL2NyZWF0ZS1hZGQtcHJvamVjdC1mb3JtLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBtb2RpZnlTZWNvbmROYXZDb250YWluZXIoKSB7XG4gIGNvbnN0IHByb2plY3ROYXZMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAnLm5hdi1saXN0LWNvbnRhaW5lcjpudGgtY2hpbGQoMiknXG4gICk7XG4gIHByb2plY3ROYXZMaXN0Q29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdC1uYXYtbGlzdC1jb250YWluZXInKTtcbiAgcHJvamVjdE5hdkxpc3RDb250YWluZXIuaW5zZXJ0QmVmb3JlKFxuICAgIGNyZWF0ZUFkZFByb2plY3RDb250YWluZXIoKSxcbiAgICBwcm9qZWN0TmF2TGlzdENvbnRhaW5lci5sYXN0Q2hpbGRcbiAgKTtcblxuICBjb25zdCBwcm9qZWN0TmF2TGlzdCA9IHByb2plY3ROYXZMaXN0Q29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5uYXYtdWwnKTtcbiAgcHJvamVjdE5hdkxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0LW5hdi1saXN0Jyk7XG59XG5cbmV4cG9ydCB7IG1vZGlmeVNlY29uZE5hdkNvbnRhaW5lciB9O1xuIiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyIH0gZnJvbSBcIi4vY3JlYXRlLW1haW4tY29udGVudC1jb250YWluZXJcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbihtYWluVXBkYXRlT2JqZWN0KSB7IFxuICBjb25zdCBtYWluQ29udGVudENvbnRhaW5lciA9IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyKG1haW5VcGRhdGVPYmplY3QpO1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWFpbicpO1xuICBtYWluLmFwcGVuZENoaWxkKG1haW5Db250ZW50Q29udGFpbmVyKTtcblxuICByZXR1cm4gbWFpbjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTWFpbiB9OyIsImZ1bmN0aW9uIGFkZFNjcmlwdFRvSGVhZChzcmMsIGF0dHJpYnV0ZXMgPSB7fSkge1xuICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3NyYycsIHNyYyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9qYXZhc2NyaXB0Jyk7XG5cbiAgZm9yIChsZXQgYXR0cmlidXRlIGluIGF0dHJpYnV0ZXMpIHtcbiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgYXR0cmlidXRlc1thdHRyaWJ1dGVdKTtcbiAgfVxuXG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbn1cblxuZXhwb3J0IHsgYWRkU2NyaXB0VG9IZWFkIH07IiwiLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGFkZFNjcmlwdFRvSGVhZCB9IGZyb20gXCIuLi91dGlsaXRpZXMvYWRkLXNjcmlwdC10by1oZWFkXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGluamVjdEZvbnRBd2Vzb21lU2NyaXB0KCkge1xuICBjb25zdCBzb3VyY2UgPSAnaHR0cHM6Ly9raXQuZm9udGF3ZXNvbWUuY29tLzI0MTc2YWI5NzMuanMnO1xuICBjb25zdCBhdHRyaWJ1dGVzID0ge1xuICAgIGNyb3Nzb3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgfTtcblxuICBhZGRTY3JpcHRUb0hlYWQoc291cmNlLCBhdHRyaWJ1dGVzKTtcblxufVxuXG5leHBvcnQgeyBpbmplY3RGb250QXdlc29tZVNjcmlwdCB9OyIsImZ1bmN0aW9uIGFkZExpbmtUb0hlYWQoaHJlZiwgcmVsLCBhdHRyaWJ1dGVzID0ge30pIHtcbiAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7XG4gIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gIGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCByZWwpO1xuXG4gIGZvciAobGV0IGF0dHJpYnV0ZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlLCBhdHRyaWJ1dGVzW2F0dHJpYnV0ZV0pO1xuICB9XG5cbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rKTtcbn1cblxuZXhwb3J0IHsgYWRkTGlua1RvSGVhZCB9O1xuIiwiLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGFkZExpbmtUb0hlYWQgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2FkZC1saW5rLXRvLWhlYWRcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gaW5qZWN0U3Rhck1hdGVyaWFsSWNvbigpIHtcbiAgY29uc3QgaHJlZiA9ICdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1hdGVyaWFsK1N5bWJvbHMrT3V0bGluZWQ6b3Bzeix3Z2h0LEZJTEwsR1JBREAyMC4uNDgsMTAwLi43MDAsMC4uMSwtNTAuLjIwMCc7XG4gIGNvbnN0IHJlbCA9ICdzdHlsZXNoZWV0JztcblxuICBhZGRMaW5rVG9IZWFkKGhyZWYsIHJlbCk7XG59XG5cbmV4cG9ydCB7IGluamVjdFN0YXJNYXRlcmlhbEljb24gfTsiLCIvLyAqIEFTU0VUU1xuaW1wb3J0IHByaW9yaXR5TG9nbyBmcm9tICcuLi9hc3NldHMvaW1hZ2VzL3ByaW9yaXR5LWxvZ28ud2VicCc7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL25hdi10b2dnbGUvbmF2LXRvZ2dsZS1tYXJrdXAnO1xuaW1wb3J0IHsgY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL3RoZW1lLXRvZ2dsZS90aGVtZS10b2dnbGUubWFya3VwJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlSGVhZGVyKCkge1xuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTtcblxuICBjb25zdCBoZWFkZXJMZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGhlYWRlckxlZnQuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLWxlZnQnKTtcblxuICBjb25zdCBoZWFkZXJMb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gIGhlYWRlckxvZ28uY2xhc3NMaXN0LmFkZCgnaGVhZGVyLWxvZ28nKTtcbiAgaGVhZGVyTG9nby5zZXRBdHRyaWJ1dGUoJ3NyYycsIHByaW9yaXR5TG9nbyk7XG4gIGhlYWRlckxvZ28uc2V0QXR0cmlidXRlKCdhbHQnLCAnUHJpb3JpdHkgTG9nbycpO1xuXG4gIGNvbnN0IGhlYWRlclRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgaGVhZGVyVGl0bGUuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLXRpdGxlJyk7XG4gIGhlYWRlclRpdGxlLnRleHRDb250ZW50ID0gJzxwcntpb31yaXR5Pic7XG5cbiAgaGVhZGVyTGVmdC5hcHBlbmRDaGlsZChoZWFkZXJMb2dvKTtcbiAgaGVhZGVyTGVmdC5hcHBlbmRDaGlsZChoZWFkZXJUaXRsZSk7XG5cbiAgY29uc3QgaGVhZGVyUmlnaHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgaGVhZGVyUmlnaHQuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLXJpZ2h0Jyk7XG5cbiAgaGVhZGVyUmlnaHQuYXBwZW5kQ2hpbGQoY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24oKSk7XG4gIGhlYWRlclJpZ2h0LmFwcGVuZENoaWxkKGNyZWF0ZU5hdlRvZ2dsZUJ1dHRvbignbmF2LXByaW1hcnktYXJpYScpKTtcblxuICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVyTGVmdCk7XG4gIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJSaWdodCk7XG5cbiAgY29udGVudC5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gIHJldHVybiBoZWFkZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUhlYWRlciB9O1xuIiwiLy8gKiBEZXBlbmRlbmNpZXM6IGh0bWwtc2NyaXB0LWluamVjdGlvbi5qc1xuXG4vLyAqIERlc2NyaXB0aW9uOiBDcmVhdGVzIGEgdGhlbWUgdG9nZ2xlIGJ1dHRvbi5cbi8vID8gQHJldHVybiB7SFRNTEVsZW1lbnR9IHRoZW1lVG9nZ2xlQ29udGFpbmVyXG5cbi8vICogQGV4YW1wbGVcbi8vID8gY29uc3QgdGhlbWVUb2dnbGVDb250YWluZXIgPSBjcmVhdGVUaGVtZVRvZ2dsZUJ1dHRvbigpO1xuLy8gPyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoZW1lVG9nZ2xlQ29udGFpbmVyKTtcblxuLy8gKiBTVFlMRVNIRUVUU1xuaW1wb3J0ICcuL3RoZW1lLXRvZ2dsZS5zY3NzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24oKSB7XG4gIGNvbnN0IHRoZW1lVG9nZ2xlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRoZW1lVG9nZ2xlQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAndGhlbWUtdG9nZ2xlLWNvbnRhaW5lcicpO1xuXG4gIGNvbnN0IHRoZW1lVG9nZ2xlQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICB0aGVtZVRvZ2dsZUNoZWNrYm94LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuICB0aGVtZVRvZ2dsZUNoZWNrYm94LnNldEF0dHJpYnV0ZSgnaWQnLCAndGhlbWUtdG9nZ2xlLWNoZWNrYm94Jyk7XG5cbiAgY29uc3QgdGhlbWVUb2dnbGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIHRoZW1lVG9nZ2xlTGFiZWwuc2V0QXR0cmlidXRlKCdpZCcsICd0aGVtZS10b2dnbGUtbGFiZWwnKTtcbiAgdGhlbWVUb2dnbGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0aGVtZS10b2dnbGUtY2hlY2tib3gnKTtcblxuICBjb25zdCBzdW5JY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xuICBzdW5JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLXN1bicpO1xuICBzdW5JY29uLnNldEF0dHJpYnV0ZSgnaWQnLCAnc3VuJyk7XG5cbiAgY29uc3QgbW9vbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XG4gIG1vb25JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLW1vb24nKTtcbiAgbW9vbkljb24uc2V0QXR0cmlidXRlKCdpZCcsICdtb29uJyk7XG5cbiAgdGhlbWVUb2dnbGVMYWJlbC5hcHBlbmRDaGlsZChzdW5JY29uKTtcbiAgdGhlbWVUb2dnbGVMYWJlbC5hcHBlbmRDaGlsZChtb29uSWNvbik7XG5cbiAgdGhlbWVUb2dnbGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGhlbWVUb2dnbGVDaGVja2JveCk7XG4gIHRoZW1lVG9nZ2xlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoZW1lVG9nZ2xlTGFiZWwpO1xuXG4gIHJldHVybiB0aGVtZVRvZ2dsZUNvbnRhaW5lcjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24gfTsiLCIvLyAqIEhBTkRMRVJTXG5pbXBvcnQgeyBoYW5kbGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tICcuL2hhbmRsZS1uYXYtdG9nZ2xlLWJ1dHRvbic7XG5cbi8vICoqIFNUWUxFU1xuaW1wb3J0ICcuL25hdi10b2dnbGUuc2Nzcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZU5hdlRvZ2dsZUJ1dHRvbihhcmlhQ29udHJvbHNJRCkge1xuICBjb25zdCBuYXZUb2dnbGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ25hdi10b2dnbGUtYnV0dG9uJyk7XG4gIG5hdlRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnT3BlbiBOYXZpZ2F0aW9uIE1lbnUnKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1jb250cm9scycsIGFyaWFDb250cm9sc0lEKTtcblxuICBjb25zdCBuYXZUb2dnbGVCYXJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5hdlRvZ2dsZUJhcnMuY2xhc3NMaXN0LmFkZCgnbmF2LXRvZ2dsZS1iYXJzJyk7XG5cbiAgbmF2VG9nZ2xlQnV0dG9uLmFwcGVuZENoaWxkKG5hdlRvZ2dsZUJhcnMpO1xuXG4gIG5hdlRvZ2dsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbik7XG5cbiAgcmV0dXJuIG5hdlRvZ2dsZUJ1dHRvbjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTmF2VG9nZ2xlQnV0dG9uIH07IiwiLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlTmF2IH0gZnJvbSAnLi9oYW5kbGUtemlnLXphZy1uYXYuanMnO1xuXG4vLyAqIFNUWUxFU0hFRVRTXG5pbXBvcnQgJy4vemlnLXphZy1uYXYuc2Nzcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vICogaW5pdGlhbFBhZ2UgaXMgYSBzdHJpbmcgdGhhdCB3aWxsIGJlIHVzZWQgdG8gc2V0IHRoZSBhcmlhLWN1cnJlbnQgYXR0cmlidXRlICh1c2UgdGhlIGluZGV4IG9mIHRoZSBwYWdlIG5hbWUpXG4vLyAqIGFuY2hvck9yQnV0dG9uIGlzIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBpZiB0aGUgbmF2IGxpbmtzIGFyZSBidXR0b25zIG9yIGFuY2hvcnMgb3B0aW9ucyBhcmUgJ2J1dHRvbicgb3IgJ2EnXG4vLyAqIGlkIGlzIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIHRvIHNldCB0aGUgaWQgYXR0cmlidXRlIG9mIHRoZSBuYXYncyBuZXN0ZWQgVUwgZWxlbWVudFxuXG5mdW5jdGlvbiBjcmVhdGVaaWdaYWdOYXYoXG4gIG9iamVjdE9mTGlzdHMsXG4gIGluaXRpYWxQYWdlLFxuICBhbmNob3JPckJ1dHRvbixcbiAgYXJpYUNvbnRyb2xzSUQsXG4gIHNwZWNpYWxOYXZMaXN0SXRlbUFycmF5XG4pIHtcbiAgY29uc3QgemlnWmFnTmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gIHppZ1phZ05hdi5jbGFzc0xpc3QuYWRkKCd6aWctemFnLW5hdicpO1xuICB6aWdaYWdOYXYuc2V0QXR0cmlidXRlKCdpZCcsIGFyaWFDb250cm9sc0lEKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdNYWluIE5hdmlnYXRpb24nKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCB0cnVlKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnZGF0YS12aXNpYmlsaXR5JywgZmFsc2UpO1xuXG4gIGZvciAoY29uc3QgbGlzdCBpbiBvYmplY3RPZkxpc3RzKSB7XG4gICAgY29uc3QgbGlzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxpc3RDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnbmF2LWxpc3QtY29udGFpbmVyJyk7XG5cbiAgICBjb25zdCBsaXN0SGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBsaXN0SGVhZGVyLmNsYXNzTGlzdC5hZGQoJ25hdi1saXN0LWhlYWRpbmcnKTtcbiAgICBsaXN0SGVhZGVyLnRleHRDb250ZW50ID0gbGlzdDtcbiAgICB6aWdaYWdOYXYuYXBwZW5kQ2hpbGQobGlzdEhlYWRlcik7XG5cbiAgICBjb25zdCBsaXN0VUwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIGxpc3RVTC5jbGFzc0xpc3QuYWRkKCduYXYtdWwnKTtcblxuICAgIGNvbnN0IGdyb3VwZWRMaXN0RWxlbWVudHMgPSBvYmplY3RPZkxpc3RzW2xpc3RdLmxpc3RFbGVtZW50cztcblxuICAgIGNvbnN0IGxpc3RGcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICBncm91cGVkTGlzdEVsZW1lbnRzLmZvckVhY2goKHBhZ2VOYW1lQW5kSHJlZiwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHBhZ2VOYW1lID0gcGFnZU5hbWVBbmRIcmVmWzBdO1xuICAgICAgY29uc3QgcGFnZUhyZWYgPSBwYWdlTmFtZUFuZEhyZWZbMV07XG5cbiAgICAgIGNvbnN0IG5hdkxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBhbmNob3JPckJ1dHRvbiA9PT0gJ2J1dHRvbidcbiAgICAgICAgICA/ICdidXR0b24nXG4gICAgICAgICAgOiAnYSdcbiAgICAgICAgICA/ICdhJ1xuICAgICAgICAgIDogY29uc29sZS5sb2coJ3ppZ1phZ05hdiBvbmx5IGFjY2VwdHMgXCJidXR0b25cIiBvciBcImFcIiBhcyBhcmd1bWVudHMnKVxuICAgICAgKTtcbiAgICAgIG5hdkxpbmsuY2xhc3NMaXN0LmFkZCgnbmF2LWxpbmsnKTtcbiAgICAgIGlmIChhbmNob3JPckJ1dHRvbiA9PT0gJ2EnKSB7XG4gICAgICAgIG5hdkxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgcGFnZUhyZWYpO1xuICAgICAgfVxuICAgICAgaWYgKHBhZ2VOYW1lID09PSBpbml0aWFsUGFnZSkge1xuICAgICAgICBuYXZMaW5rLnNldEF0dHJpYnV0ZSgnYXJpYS1jdXJyZW50JywgJ3BhZ2UnKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbmF2TEkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgbmF2TEkuY2xhc3NMaXN0LmFkZCgnbmF2LWxpJyk7XG4gICAgICBpZiAoc3BlY2lhbE5hdkxpc3RJdGVtQXJyYXkpIHtcbiAgICAgICAgc3BlY2lhbE5hdkxpc3RJdGVtQXJyYXkuZm9yRWFjaCgoc3BlY2lhbE5hdkxpbmspID0+IHtcbiAgICAgICAgICBpZiAocGFnZU5hbWUgPT09IHNwZWNpYWxOYXZMaW5rKSB7XG4gICAgICAgICAgICBuYXZMSS5jbGFzc0xpc3QuYWRkKCdzcGVjaWFsLW5hdi1saScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIG5hdkxpbmsudGV4dENvbnRlbnQgPSBwYWdlTmFtZTtcbiAgICAgIG5hdkxpbmsuc2V0QXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScsIHBhZ2VOYW1lLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgICBuYXZMSS5hcHBlbmRDaGlsZChuYXZMaW5rKTtcbiAgICAgIGxpc3RGcmFnbWVudC5hcHBlbmRDaGlsZChuYXZMSSk7XG4gICAgfSk7XG5cbiAgICBsaXN0VUwuYXBwZW5kQ2hpbGQobGlzdEZyYWdtZW50KTtcbiAgICBcbiAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RIZWFkZXIpO1xuICAgIGxpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQobGlzdFVMKTtcblxuICAgIHppZ1phZ05hdi5hcHBlbmRDaGlsZChsaXN0Q29udGFpbmVyKTtcbiAgfVxuXG4gIGhhbmRsZU5hdigpO1xuXG4gIHJldHVybiB6aWdaYWdOYXY7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVppZ1phZ05hdiB9OyIsIi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IEFERF9ORVdfUFJPSkVDVCB9IGZyb20gXCIuL2V2ZW50TmFtZXNcIjtcblxuLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUxpc3RJY29uIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvbGlzdEljb24vY3JlYXRlLWxpc3QtaWNvblwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9wdWJzdWJcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlQWRkUHJvamVjdENvbnRhaW5lcigpIHtcbiAgY29uc3QgcHJvamVjdE5hbWVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHByb2plY3ROYW1lSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0LW5hbWUtaW5wdXQnKTtcbiAgcHJvamVjdE5hbWVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICBwcm9qZWN0TmFtZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnRW50ZXIgUHJvamVjdCBOYW1lJyk7XG4gIHByb2plY3ROYW1lSW5wdXQuc2V0QXR0cmlidXRlKCdtYXgtbGVuZ3RoJywgMjQpO1xuICBwcm9qZWN0TmFtZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnRzLmVtaXQoQUREX05FV19QUk9KRUNUKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZC1wcm9qZWN0LWJ1dHRvbicpO1xuICBhZGRQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3JlcXVpcmVkJywgdHJ1ZSk7XG4gIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCduYW1lJywgJ2FkZC1wcm9qZWN0Jyk7XG4gIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdmb3JtJywgJ2FkZC1wcm9qZWN0LWZvcm0nKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQWRkIFByb2plY3QnKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdhZGQnO1xuXG4gIGNvbnN0IGNhbmNlbEFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2NhbmNlbC1hZGQtcHJvamVjdC1idXR0b24nKTtcbiAgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0NhbmNlbCBBZGQgUHJvamVjdCcpO1xuICBjYW5jZWxBZGRQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gJ2NhbmNlbCc7XG5cbiAgY29uc3QgcHJvamVjdElucHV0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHByb2plY3RJbnB1dENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Byb2plY3QtaW5wdXQtY29udGFpbmVyJyk7XG4gIHByb2plY3RJbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVMaXN0SWNvbigpKTtcbiAgcHJvamVjdElucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3ROYW1lSW5wdXQpO1xuXG4gIGNvbnN0IHByb2plY3RCdXR0b25zQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHByb2plY3RCdXR0b25zQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdC1idXR0b25zLWNvbnRhaW5lcicpO1xuICBwcm9qZWN0QnV0dG9uc0NvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRQcm9qZWN0QnV0dG9uKTtcbiAgcHJvamVjdEJ1dHRvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoY2FuY2VsQWRkUHJvamVjdEJ1dHRvbik7XG5cbiAgY29uc3QgcHJvamVjdEZvcm1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIHByb2plY3RGb3JtQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkLXByb2plY3QtZm9ybScpO1xuICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnaGlkZGVuJyk7XG4gIHByb2plY3RGb3JtQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnZGF0YS1oaWRkZW4nLCB0cnVlKTtcblxuICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0SW5wdXRDb250YWluZXIpO1xuICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0QnV0dG9uc0NvbnRhaW5lcik7XG5cbiAgY29uc3QgbmV3UHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBuZXdQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnbmV3LXByb2plY3QtYnV0dG9uJyk7XG4gIG5ld1Byb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBuZXdQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdOZXcgUHJvamVjdCcpO1xuICBuZXdQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gJ05ldyBQcm9qZWN0JztcblxuICBjb25zdCBhZGRQcm9qZWN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGFkZFByb2plY3RDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdhZGQtcHJvamVjdC1jb250YWluZXInKTtcbiAgYWRkUHJvamVjdENvbnRhaW5lci5hcHBlbmRDaGlsZChuZXdQcm9qZWN0QnV0dG9uKTtcbiAgYWRkUHJvamVjdENvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0Rm9ybUNvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGFkZFByb2plY3RDb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFByb2plY3RDb250YWluZXIgfTtcbiIsImZ1bmN0aW9uIG1vZGlmeUdlbmVyaWNOYXZMaW5rcygpIHtcbiAgY29uc3QgZ2VuZXJpY05hdkxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm5hdi1saXN0LWNvbnRhaW5lcjpub3QoI3Byb2plY3QtbmF2LWxpc3QtY29udGFpbmVyKSAubmF2LWxpbmsnKTtcblxuICBnZW5lcmljTmF2TGlua3MuZm9yRWFjaCgobmF2TGluaykgPT4ge1xuICAgIGlmIChuYXZMaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1wYWdlLW5hbWUnKSA9PT0gJ2FsbCB0YXNrcydcbiAgICAgIHx8IG5hdkxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScpID09PSAndG9kYXknXG4gICAgICB8fCBuYXZMaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1wYWdlLW5hbWUnKSA9PT0gJ25leHQgNyBkYXlzJylcbiAgICB7XG4gICAgICBuYXZMaW5rLnNldEF0dHJpYnV0ZSgnZGF0YS1hcnJhbmdlLW1ldGhvZCcsICdzb3J0Jyk7XG4gICAgfSBlbHNlIGlmIChuYXZMaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1wYWdlLW5hbWUnKSA9PT0gJ3ByaW9yaXRpZXMnKSB7XG4gICAgICBuYXZMaW5rLnNldEF0dHJpYnV0ZSgnZGF0YS1hcnJhbmdlLW1ldGhvZCcsICdmaWx0ZXInKTtcbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyBtb2RpZnlHZW5lcmljTmF2TGlua3MgfTsiXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImRvY3VtZW50IiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsImkiLCJFcnJvciIsInJlcGxhY2UiLCJwIiwiZW5jYXBzdWxhdGVkUHJvamVjdEFycmF5IiwiZGF0YSIsImFkZFRhc2tUb1Byb2plY3QiLCJwcm9qZWN0TmFtZSIsInRhc2siLCJmaW5kIiwicHJvamVjdCIsImdldE5hbWUiLCJhZGRUYXNrIiwiZ2V0UHJvamVjdEFycmF5IiwiY29uY2F0IiwiYXJyYW5nZVByb2plY3RBcnJheSIsImNhbGxiYWNrIiwiZmlsdGVyIiwiZ2V0UHJvamVjdEFycmF5TGVuZ3RoIiwiYWRkUHJvamVjdCIsInB1c2giLCJkZWxldGVQcm9qZWN0Iiwic3BsaWNlIiwiaW5kZXhPZiIsImdldEFsbFRhc2tzIiwiZmxhdE1hcCIsImdldFRhc2tBcnJheSIsImdldFByb2plY3RPYmplY3QiLCJNYXRoIiwicG93IiwibWlsbGlzZWNvbmRzSW5NaW51dGUiLCJtaWxsaXNlY29uZHNJbkhvdXIiLCJwYXJzZUlTTyIsImFyZ3VtZW50Iiwib3B0aW9ucyIsImFkZGl0aW9uYWxEaWdpdHMiLCJkYXRlU3RyaW5ncyIsImRhdGVTdHJpbmciLCJhcnJheSIsInNwbGl0IiwicGF0dGVybnMiLCJkYXRlVGltZURlbGltaXRlciIsInRpbWVTdHJpbmciLCJ0ZXN0IiwiZGF0ZSIsInRpbWVab25lRGVsaW1pdGVyIiwic3Vic3RyIiwidG9rZW4iLCJ0aW1lem9uZSIsImV4ZWMiLCJ0aW1lIiwic3BsaXREYXRlU3RyaW5nIiwicGFyc2VZZWFyUmVzdWx0IiwicmVnZXgiLCJSZWdFeHAiLCJjYXB0dXJlcyIsIm1hdGNoIiwieWVhciIsIk5hTiIsInJlc3REYXRlU3RyaW5nIiwicGFyc2VJbnQiLCJjZW50dXJ5Iiwic2xpY2UiLCJwYXJzZVllYXIiLCJEYXRlIiwiZGF0ZVJlZ2V4IiwiaXNXZWVrRGF0ZSIsImRheU9mWWVhciIsInBhcnNlRGF0ZVVuaXQiLCJtb250aCIsImRheSIsIndlZWsiLCJkYXlPZldlZWsiLCJfeWVhciIsInZhbGlkYXRlV2Vla0RhdGUiLCJpc29XZWVrWWVhciIsInNldFVUQ0Z1bGxZZWFyIiwiZGlmZiIsImdldFVUQ0RheSIsInNldFVUQ0RhdGUiLCJnZXRVVENEYXRlIiwiZGF5T2ZJU09XZWVrWWVhciIsImRheXNJbk1vbnRocyIsImlzTGVhcFllYXJJbmRleCIsInZhbGlkYXRlRGF0ZSIsInZhbGlkYXRlRGF5T2ZZZWFyRGF0ZSIsIm1heCIsInBhcnNlRGF0ZSIsImlzTmFOIiwiZ2V0VGltZSIsInRpbWVzdGFtcCIsIm9mZnNldCIsInRpbWVSZWdleCIsImhvdXJzIiwicGFyc2VUaW1lVW5pdCIsIm1pbnV0ZXMiLCJzZWNvbmRzIiwidmFsaWRhdGVUaW1lIiwicGFyc2VUaW1lIiwiZGlydHlEYXRlIiwicmVzdWx0Iiwic2V0RnVsbFllYXIiLCJnZXRVVENGdWxsWWVhciIsImdldFVUQ01vbnRoIiwic2V0SG91cnMiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VVRDTWlsbGlzZWNvbmRzIiwidGltZXpvbmVTdHJpbmciLCJ0aW1lem9uZVJlZ2V4Iiwic2lnbiIsIl9ob3VycyIsInZhbGlkYXRlVGltZXpvbmUiLCJwYXJzZVRpbWV6b25lIiwidmFsdWUiLCJwYXJzZUZsb2F0IiwidG9EYXRlIiwiYXJnU3RyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiY29uc3RydWN0b3IiLCJjb21wYXJlQXNjIiwiZGF0ZUxlZnQiLCJkYXRlUmlnaHQiLCJfZGF0ZUxlZnQiLCJfZGF0ZVJpZ2h0IiwibGlua09iamVjdEZhY3RvcnkiLCJuYW1lIiwic3RhdGUiLCJ0YXNrcyIsInR5cGUiLCJnZXRUeXBlIiwiZ2V0U2hhbGxvd0NvcHkiLCJfb2JqZWN0U3ByZWFkIiwic29ydFRhc2tBcnJheSIsInNvcnQiLCJhIiwiYiIsImRhdGVTdHJpbmdBIiwiZ2V0RHVlRGF0ZSIsImRhdGVTdHJpbmdCIiwiU0hPV19OQVZfRVZFTlQiLCJISURFX05BVl9FVkVOVCIsIlVQREFURV9NQUlOIiwiVE9HR0xFX0FERF9QUk9KRUNUX0ZPUk0iLCJUT0dHTEVfQUREX1RBU0tfRk9STSIsIlRPR0dMRV9FRElUX1RBU0tfRk9STSIsIkFERF9ORVdfUFJPSkVDVCIsIkFERF9ORVdfVEFTSyIsInNldEF0dHJpYnV0ZXMiLCJlbGVtZW50IiwiYXR0cmlidXRlcyIsImtleSIsInNldEF0dHJpYnV0ZSIsImdldFRhc2tMaXN0Q29udGVudCIsIm1haW5VcGRhdGVPYmplY3QiLCJ0YXNrQXJyYXkiLCJtYWluVXBkYXRlT2JqZWN0VHlwZSIsInBsYWNlaG9sZGVyVGV4dCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInBsYWNlaG9sZGVyQ29udGFpbmVyIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUYXNrTGlzdFBsYWNlaG9sZGVyIiwidGFza0xpc3RGcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJmb3JFYWNoIiwidGFza09iamVjdCIsInRhc2tUaXRsZSIsInRvTG93ZXJDYXNlIiwidGFza0RldGFpbHMiLCJnZXREZXRhaWxzIiwidGFza0R1ZURhdGUiLCJpc1Rhc2tDb21wbGV0ZSIsImdldENvbXBsZXRlZCIsImlzVGFza1ByaW9yaXR5IiwiZ2V0UHJpb3JpdHkiLCJ0YXNrQ2hlY2tCb3hDb250YWluZXIiLCJ0YXNrSXRlbUNoZWNrYm94IiwiY2hlY2tlZCIsInRhc2tJdGVtVGl0bGUiLCJ0YXNrSXRlbURldGFpbHMiLCJkYXRlT3B0aW9ucyIsInRhc2tJdGVtRGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInRhc2tQcmlvcml0eVN0YXJJY29uIiwidGFza1ByaW9yaXR5U3RhckJ1dHRvbiIsIm1vZGlmeVRhc2tCdXR0b24iLCJtb2RpZnlUYXNrQnV0dG9uSWNvbiIsInRhc2tCdXR0b25Db250YWluZXIiLCJ0YXNrUmlnaHRTaWRlQ29udGFpbmVyIiwidGFza0l0ZW0iLCJ0cmltIiwiY3JlYXRlVGFza0l0ZW0iLCJjcmVhdGVUYXNrTGlzdCIsInRhc2tMaXN0IiwidGFza0xpc3RDb250ZW50IiwiY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIiwic2VsZWN0b3IiLCJ0YXJnZXRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnNvbGUiLCJlcnJvciIsIm1vZGFsU3RhdGUiLCJldmVudHMiLCJvbiIsImV2ZW50TmFtZSIsImZuIiwib2ZmIiwiZW1pdCIsImdldFRhc2tPYmplY3QiLCJ0YXNrTmFtZSIsImhhbmRsZU1vZGFsQnV0dG9ucyIsImV2ZW50IiwidGFyZ2V0IiwiY29udGFpbnMiLCJ0YXJnZXRJZCIsImdldEF0dHJpYnV0ZSIsImlzQ2FuY2VsQnV0dG9uIiwibG9nIiwidG9nZ2xlTW9kYWxCdXR0b25Db250YWluZXJFdmVudExpc3RlbmVycyIsImVkaXRUYXNrQnV0dG9uQ29udGFpbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbG9zZU1vZGFsRW5oYW5jZWQiLCJjbG9zZSIsInRvZ2dsZUVkaXRUYXNrRm9ybVZpc2liaWxpdHkiLCJtb2RhbCIsImVkaXRUYXNrTW9kYWwiLCJ0YXNrTW9kYWxWaXNpYmlsaXR5T25DYWxsIiwic2hvd01vZGFsIiwib25BbmltYXRpb25FbmQiLCJpc0VkaXRUYXNrRm9ybUV2ZW50UHVibGlzaGVkIiwiaGFuZGxlVGFza0l0ZW1JbnRlcmFjdGFibGVzIiwidGFyZ2V0VGFnTmFtZSIsInRhZ05hbWUiLCJjbG9zZXN0IiwiaGFuZGxlcnMiLCJjaGVja2JveCIsImlzQ2hlY2tlZCIsInNldENvbXBsZXRlZCIsInRvZ2dsZVRhc2tDb21wbGV0aW9uIiwicHJpb3JpdHlCdXR0b24iLCJpc1ByaW9yaXR5IiwidG9nZ2xlU3Rhckljb24iLCJzZXRQcmlvcml0eSIsInRvZ2dsZVRhc2tQcmlvcml0eSIsImVtaXRFZGl0VGFza0Zvcm1WaXNpYmlsaXR5VG9nZ2xlIiwiaGFuZGxlciIsImNsYXNzTmFtZSIsImhhbmRsZVRhc2tJdGVtcyIsInRhc2tMaXN0RWxlbWVudCIsImNvbnRlbnRFbGVtZW50IiwiZWRpdFRhc2tIZWFkaW5nIiwidGl0bGVMYWJlbCIsInRpdGxlSW5wdXQiLCJwcmV2ZW50RGVmYXVsdCIsInRpdGxlQ29udGFpbmVyIiwiZGV0YWlsc0xhYmVsIiwiZGV0YWlsc0lucHV0IiwiZGV0YWlsc0NvbnRhaW5lciIsImR1ZURhdGVMYWJlbCIsImR1ZURhdGVJbnB1dCIsImR1ZURhdGVDb250YWluZXIiLCJzYXZlRWRpdFRhc2tCdXR0b24iLCJjYW5jZWxFZGl0VGFza0J1dHRvbiIsImVkaXRUYXNrRm9ybSIsImVkaXRUYXNrRm9ybUNvbnRhaW5lciIsImNyZWF0ZUVkaXRUYXNrRm9ybSIsImNyZWF0ZUVkaXRUYXNrTW9kYWwiLCJhZGRUYXNrTGlzdEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVUYXNrTGlzdCIsImNvbnRhaW5lcnMiLCJjb250YWluZXJzV2l0aE92ZXJmbG93IiwidGFza0xpc3RDaGlsZHJlbiIsImNoaWxkcmVuIiwidGFza0xpc3RGaXJzdENoaWxkIiwiaGFzQXR0cmlidXRlIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbnRhaW5lciIsImNsaWVudFdpZHRoIiwic2Nyb2xsV2lkdGgiLCJjb250YWluZXJFbGVtZW50IiwibWF4U2Nyb2xsIiwic2Nyb2xsRGlyZWN0aW9uIiwic2Nyb2xsRWxlbWVudENvbnRlbnQiLCJjdXJyZW50U2Nyb2xsIiwic2Nyb2xsTGVmdCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImFkZE5ld1Rhc2siLCJ0YXNrRm9ybSIsInRhc2tOYW1lSW5wdXQiLCJ0YXNrRGV0YWlsc0lucHV0IiwidGFza0R1ZURhdGVJbnB1dCIsImFsZXJ0IiwidG9JU09TdHJpbmciLCJyZXNldCIsImR1ZURhdGUiLCJkZXRhaWxzIiwicHJpb3JpdHkiLCJjb21wbGV0ZWQiLCJzZXROYW1lIiwic2V0RGV0YWlscyIsInNldER1ZURhdGUiLCJib29sZWFuIiwic2V0UHJvamVjdE5hbWUiLCJnZXRQcm9qZWN0TmFtZSIsInRhc2tGYWN0b3J5IiwibWFpblN0YXRlIiwiZW1pdFRvZ2dsZVRhc2tGb3JtVmlzaWJpbGl0eSIsIm1haW5Db250ZW50IiwicGFyZW50Tm9kZSIsInByb2plY3RPYmplY3QiLCJyZW1vdmUiLCJ1cGRhdGVUYXNrTGlzdCIsImVtaXRJbml0aWFsaXplVGFzayIsInRhc2tDb21wb25lbnRTdGF0ZSIsImZvcm1TdGF0ZSIsImlzQWRkVGFza0J1dHRvbkxpc3RlbmVyQXR0YWNoZWQiLCJzZXREaXNwbGF5Tm9uZSIsInRvZ2dsZUFkZFRhc2tGb3JtIiwiYWRkVGFza0Zvcm1Db250YWluZXIiLCJjdXJyZW50VGFza0Zvcm1TdGF0ZSIsImFkZFRhc2tCdXR0b24iLCJ0b2dnbGVUYXNrQWRkQnV0dG9uTGlzdGVuZXIiLCJ0b2dnbGVUYXNrQWRkRXZlbnQiLCJjYW5jZWxBZGRUYXNrQnV0dG9uIiwidG9nZ2xlQ2FuY2VsQnV0dG9uTGlzdGVuZXIiLCJoYW5kbGVUYXNrQ2FuY2VsQnV0dG9uIiwiY3JlYXRlTWFpbkNvbnRlbnRDb250YWluZXIiLCJtYWluSGVhZGluZyIsImhlYWRpbmdUZXh0Q29udGVudCIsImFkZFRhc2tDb250YWluZXIiLCJtYWluQ29udGVudENvbnRhaW5lciIsIm9iamVjdFR5cGUiLCJhZGRUYXNrRm9ybUJ1dHRvbiIsImFkZFRhc2tCdXR0b25Db250YWluZXIiLCJjcmVhdGVBZGRUYXNrQnV0dG9uIiwiYWRkVGFza0Zvcm0iLCJjcmVhdGVBZGRUYXNrRm9ybSIsInVwZGF0ZU9iamVjdFR5cGUiLCJoYW5kbGVNYWluIiwibmV3Q3VycmVudE5hdkxpbmsiLCJpc1Byb2plY3RMaW5rIiwiaXNQYWdlTGluayIsInByb2plY3RBcnJheSIsInByb2plY3RWYWx1ZSIsImxpbmtPYmplY3QiLCJyZXNvbHZlTWFpblVwZGF0ZU9iamVjdCIsIm1haW5VcGRhdGVPYmplY3ROYW1lIiwibmV3TWFpbkNvbnRhaW5lciIsIm5ld1Rhc2tMaXN0IiwibWFpbkVsZW1lbnQiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJjbGVhck1haW4iLCJhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbiIsInRvZ2dsZUFkZFRhc2tCdXR0b25DbGlja0xpc3RlbmVyIiwidG9nZ2xlQWRkVGFza0J1dHRvbkV2ZW50UHVibGlzaGluZyIsImhhbmRsZU5hdlRvZ2dsZUJ1dHRvbiIsIm9uY2UiLCJjbG9zZU5hdlBvc3RUcmFuc2l0aW9uIiwic2V0QWN0aXZlTGluayIsImlzVGFyZ2V0RWxlbWVudE5hdkxpbmsiLCJpc1RhcmdldE5hdkxpbmsiLCJpc1RhcmdldExpbmtBY3RpdmUiLCJjaGVja0lmQ2xpY2thYmxlTmF2TGluayIsIm5vZGVsaXN0IiwicmVtb3ZlQXR0cmlidXRlIiwicmVtb3ZlT2xkQXJpYUN1cnJlbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic2V0QXJpYUN1cnJlbnQiLCJlbWl0VXBkYXRlTWFpbiIsImhhbmRsZU5hdkxpbmtzIiwiemlnWmFnTmF2IiwibmF2U3RhdGUiLCJvcGVuIiwiY3JlYXRlTGlzdEljb24iLCJsaXN0SWNvbkNvbnRhaW5lciIsImxpc3RJY29uQmFycyIsIkFkZE5ld1Byb2plY3QiLCJwcm9qZWN0Rm9ybSIsInByb2plY3RGYWN0b3J5IiwicHJvamVjdExpc3QiLCJyZXZlcnNlZFByb2plY3RBcnJheSIsInJldmVyc2UiLCJwcm9qZWN0QnV0dG9uIiwibGlzdEljb24iLCJwcm9qZWN0TGkiLCJjcmVhdGVQcm9qZWN0SXRlbSIsInVwZGF0ZVByb2plY3RMaXN0Iiwic3R5bGUiLCJvdmVyZmxvdyIsImNoZWNrTGlzdE92ZXJmbG93IiwiZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSIsImZvcm1Db21wb25lbnRTdGF0ZSIsInByb2plY3RGb3JtU3RhdGUiLCJlbWl0SW5pdGlhbGl6ZVByb2plY3QiLCJ0b2dnbGVBZGRQcm9qZWN0Rm9ybSIsInByb2plY3RGb3JtQ29udGFpbmVyIiwicHJvamVjdEFkZEJ1dHRvbiIsInRvZ2dsZVByb2plY3RBZGRCdXR0b25MaXN0ZW5lciIsInRvZ2dsZVByb2plY3RBZGRFdmVudCIsImNhbmNlbEFkZFByb2plY3RCdXR0b24iLCJnZXRFbGVtZW50QnlJZCIsImhhbmRsZVByb2plY3RDYW5jZWxCdXR0b24iLCJoYW5kbGVOZXdQcm9qZWN0QnV0dG9uIiwibmV3UHJvamVjdEJ1dHRvbiIsInRvZ2dsZU5ld1Byb2plY3RCdXR0b25FdmVudFB1Ymxpc2hpbmciLCJhbmltYXRpbmciLCJoaWRlTmF2IiwiaW5pdGlhdGVIaWRlTmF2Iiwic2hvd05hdiIsInRvZ2dsZUJ1dHRvbiIsInByb2plY3ROYXZMaXN0Q29udGFpbmVyIiwibWFpbiIsImNvbnRlbnQiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJzY3JpcHQiLCJhdHRyaWJ1dGUiLCJoZWFkIiwiYWRkU2NyaXB0VG9IZWFkIiwiY3Jvc3NvcmlnaW4iLCJocmVmIiwicmVsIiwibGluayIsImFkZExpbmtUb0hlYWQiLCJoZWFkZXIiLCJoZWFkZXJMZWZ0IiwiaGVhZGVyTG9nbyIsInByaW9yaXR5TG9nbyIsImhlYWRlclRpdGxlIiwiaGVhZGVyUmlnaHQiLCJ0aGVtZVRvZ2dsZUNvbnRhaW5lciIsInRoZW1lVG9nZ2xlQ2hlY2tib3giLCJ0aGVtZVRvZ2dsZUxhYmVsIiwic3VuSWNvbiIsIm1vb25JY29uIiwiY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24iLCJhcmlhQ29udHJvbHNJRCIsIm5hdlRvZ2dsZUJ1dHRvbiIsIm5hdlRvZ2dsZUJhcnMiLCJjcmVhdGVOYXZUb2dnbGVCdXR0b24iLCJjcmVhdGVIZWFkZXIiLCJvYmplY3RPZkxpc3RzIiwiaW5pdGlhbFBhZ2UiLCJhbmNob3JPckJ1dHRvbiIsInNwZWNpYWxOYXZMaXN0SXRlbUFycmF5IiwiX2xvb3AiLCJsaXN0Q29udGFpbmVyIiwibGlzdEhlYWRlciIsImxpc3QiLCJsaXN0VUwiLCJncm91cGVkTGlzdEVsZW1lbnRzIiwibGlzdEVsZW1lbnRzIiwibGlzdEZyYWdtZW50IiwicGFnZU5hbWVBbmRIcmVmIiwiaW5kZXgiLCJwYWdlTmFtZSIsIm5hdkxpbmsiLCJuYXZMSSIsImNyZWF0ZVppZ1phZ05hdiIsIkhvbWUiLCJQcm9qZWN0cyIsImluc2VydEJlZm9yZSIsInByb2plY3ROYW1lSW5wdXQiLCJhZGRQcm9qZWN0QnV0dG9uIiwicHJvamVjdElucHV0Q29udGFpbmVyIiwicHJvamVjdEJ1dHRvbnNDb250YWluZXIiLCJhZGRQcm9qZWN0Q29udGFpbmVyIiwiY3JlYXRlQWRkUHJvamVjdENvbnRhaW5lciIsImxhc3RDaGlsZCJdLCJzb3VyY2VSb290IjoiIn0=