(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{addTaskToProject:function(t,n){e.find((function(e){return e.getName()===t})).addTask(n)},getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return e.find((function(e){return e.getName()===t}))},arrangeTasks:function(){}}),a={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}};function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){var a,i,o;a=t,i=e,o=n[e],(i=function(t){var e=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==r(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===r(e)?e:String(e)}(i))in a?Object.defineProperty(a,i,{value:o,enumerable:!0,configurable:!0,writable:!0}):a[i]=o})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},arrangeTasks:function(t){"sort"===t.getAttribute("data-arrange-method")||t.getAttribute("data-arrange-method")},getTaskArray:function(){return n.tasks}}}const d=t.p+"f0f19e6f57687481453e.webp";var s="showNav",u="hideNav",c="handleMain",l="toggleAddProjectForm",m="addNewProject",f="toggelAddTaskForm",p="addNewTask";function h(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function b(t,e){const n=h(t),a=h(e),r=n.getTime()-a.getTime();return r<0?-1:r>0?1:r}Math.pow(10,8);const v=43200,g=1440;function y(t){const e=h(t);return+function(t){const e=h(t);return e.setHours(23,59,59,999),e}(e)==+function(t){const e=h(t),n=e.getMonth();return e.setFullYear(e.getFullYear(),n+1,0),e.setHours(23,59,59,999),e}(e)}function A(t,e){const n=h(t),a=h(e),r=b(n,a),i=Math.abs(function(t,e){const n=h(t),a=h(e);return 12*(n.getFullYear()-a.getFullYear())+(n.getMonth()-a.getMonth())}(n,a));let o;if(i<1)o=0;else{1===n.getMonth()&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-r*i);let e=b(n,a)===-r;y(h(t))&&1===i&&1===b(t,a)&&(e=!1),o=r*(i-Number(e))}return 0===o?0:o}function k(t,e,n){const a=function(t,e){return h(t).getTime()-h(e).getTime()}(t,e)/1e3;return(r=n?.roundingMethod,r?Math[r]:Math.trunc)(a);var r}const E={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function C(t){return(e={})=>{const n=e.width?String(e.width):t.defaultWidth;return t.formats[n]||t.formats[t.defaultWidth]}}const j={date:C({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:C({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:C({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},w={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function L(t){return(e,n)=>{let a;if("formatting"===(n?.context?String(n.context):"standalone")&&t.formattingValues){const e=t.defaultFormattingWidth||t.defaultWidth,r=n?.width?String(n.width):e;a=t.formattingValues[r]||t.formattingValues[e]}else{const e=t.defaultWidth,r=n?.width?String(n.width):t.defaultWidth;a=t.values[r]||t.values[e]}return a[t.argumentCallback?t.argumentCallback(e):e]}}function T(t){return(e,n={})=>{const a=n.width,r=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],i=e.match(r);if(!i)return null;const o=i[0],d=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth],s=Array.isArray(d)?function(t,e){for(let e=0;e<t.length;e++)if(t[e].test(o))return e}(d):function(t,e){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&t[e].test(o))return e}(d);let u;return u=t.valueCallback?t.valueCallback(s):s,u=n.valueCallback?n.valueCallback(u):u,{value:u,rest:e.slice(o.length)}}}var P;const M={code:"en-US",formatDistance:(t,e,n)=>{let a;const r=E[t];return a="string"==typeof r?r:1===e?r.one:r.other.replace("{{count}}",e.toString()),n?.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:j,formatRelative:(t,e,n,a)=>w[t],localize:{ordinalNumber:(t,e)=>{const n=Number(t),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:L({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:L({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:t=>t-1}),month:L({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:L({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:L({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(P={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:t=>parseInt(t,10)},(t,e={})=>{const n=t.match(P.matchPattern);if(!n)return null;const a=n[0],r=t.match(P.parsePattern);if(!r)return null;let i=P.valueCallback?P.valueCallback(r[0]):r[0];return i=e.valueCallback?e.valueCallback(i):i,{value:i,rest:t.slice(a.length)}}),era:T({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:T({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:t=>t+1}),month:T({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:T({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:T({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};let S={};function D(){return S}function x(t){const e=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return e.setUTCFullYear(t.getFullYear()),t.getTime()-e.getTime()}function N(t,e){return function(t,e,n){const a=D(),r=n?.locale??a.locale??M,i=b(t,e);if(isNaN(i))throw new RangeError("Invalid time value");const o=Object.assign({},n,{addSuffix:n?.addSuffix,comparison:i});let d,s;i>0?(d=h(e),s=h(t)):(d=h(t),s=h(e));const u=k(s,d),c=(x(s)-x(d))/1e3,l=Math.round((u-c)/60);let m;if(l<2)return n?.includeSeconds?u<5?r.formatDistance("lessThanXSeconds",5,o):u<10?r.formatDistance("lessThanXSeconds",10,o):u<20?r.formatDistance("lessThanXSeconds",20,o):u<40?r.formatDistance("halfAMinute",0,o):u<60?r.formatDistance("lessThanXMinutes",1,o):r.formatDistance("xMinutes",1,o):0===l?r.formatDistance("lessThanXMinutes",1,o):r.formatDistance("xMinutes",l,o);if(l<45)return r.formatDistance("xMinutes",l,o);if(l<90)return r.formatDistance("aboutXHours",1,o);if(l<g){const t=Math.round(l/60);return r.formatDistance("aboutXHours",t,o)}if(l<2520)return r.formatDistance("xDays",1,o);if(l<v){const t=Math.round(l/g);return r.formatDistance("xDays",t,o)}if(l<2*v)return m=Math.round(l/v),r.formatDistance("aboutXMonths",m,o);if(m=A(s,d),m<12){const t=Math.round(l/v);return r.formatDistance("xMonths",t,o)}{const t=m%12,e=Math.floor(m/12);return t<3?r.formatDistance("aboutXYears",e,o):t<9?r.formatDistance("overXYears",e,o):r.formatDistance("almostXYears",e+1,o)}}(t,Date.now(),e)}function W(t){var e=document.createElement("div");e.classList.add("task-checkbox-container");var n=document.createElement("input");n.setAttribute("type","checkbox"),n.classList.add("task-item-checkbox"),e.appendChild(n);var a=document.createElement("h4");a.classList.add("task-item-title"),a.textContent=t.getName();var r=document.createElement("p");r.classList.add("task-item-details"),r.textContent=t.getDetails();var i=document.createElement("p");i.classList.add("task-item-date");var o=N(t.getDueDate(),{addSuffix:!0});i.textContent="Due ".concat(o);var d=document.createElement("input");d.classList.add("task-priority-checkbox"),d.setAttribute("type","checkbox"),d.setAttribute("aria-label","Prioritize Task");var s=document.createElement("button");s.classList.add("modify-task-button"),s.setAttribute("type","button"),s.setAttribute("aria-label","Edit Task");var u=document.createElement("i");u.classList.add("fa-solid","fa-ellipsis-vertical"),s.appendChild(u);var c=document.createElement("div");c.classList.add("task-item-button-container"),c.appendChild(d),c.appendChild(s);var l=document.createElement("div");l.classList.add("task-right-side-container"),l.appendChild(i),l.appendChild(c);var m=document.createElement("li");m.classList.add("task-item"),m.appendChild(e),m.appendChild(a),console.log(t.getDetails()),""!==t.getDetails()&&m.appendChild(r),m.appendChild(l);var f=document.createElement("dialog");f.classList.add("task-edit-modal");var p=document.createElement("button");p.classList.add("task-edit-button"),p.setAttribute("type","button"),p.setAttribute("aria-label","Edit Task"),f.appendChild(p);var h=document.createElement("button");return h.classList.add("task-delete-button"),h.setAttribute("type","button"),h.setAttribute("aria-label","Delete Task"),f.appendChild(h),m}function O(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}function F(){var t=O("#add-task-form"),e=t.querySelector("#title"),a=t.querySelector("#details"),r=t.querySelector("#due-date"),i=e.value.trim(),o=a.value.trim(),d=r.value;if(!i)return alert("Enter Task Name");if(!d)return alert("Enter Task Due Date");t.reset();var s=I.projectName,u=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof n&&"string"!=typeof a)throw new Error("⚠️ name, details & due-date, must all be strings");var r={name:t,projectName:e,details:n,dueDate:a,priority:!1,completed:!1};return{getName:function(){return r.name},setName:function(t){r.name=t},getDetails:function(){return r.details},setDetails:function(t){r.details=t},getDueDate:function(){return r.dueDate},setDueDate:function(t){r.dueDate=t},getPriority:function(){return r.priority},setPriority:function(t){r.priority=t},getCompleted:function(){return r.completed},setCompleted:function(t){r.completed=t},setProjectName:function(t){r.project=t},getProjectName:function(){return r.projectName}}}(i,s,o,d);u.setProjectName(s),n.addTaskToProject(s,u),J(),function(t){var e=O("#task-list"),a=function(t){var e=document.createDocumentFragment();return t.getTaskArray().forEach((function(t){e.appendChild(W(t))})),e}(n.getProjectObject(t));!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(e),e.appendChild(a)}(s)}function q(){a.emit(p)}function z(t,e){for(var n in e)t.setAttribute(n,e[n])}var X={formState:"hidden",isAddTaskButtonListenerAttached:!1};function Y(t){X.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",Y)}function B(){var t,e,n=O("#add-task-form-container"),r=X.formState;"hidden"===r?(n.setAttribute("data-hidden",!1),X.formState="visible"):"visible"===r&&(z(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,X.formState="closing",t.addEventListener("animationend",Y)),function(t){var e=O("#add-task-button");"visible"===t?e.addEventListener("click",q):"closing"===t&&e.removeEventListener("click",q)}(e=X.formState),function(t){"visible"===t?a.on(p,F):"closing"===t&&a.off(p,F)}(e),function(t){!function(t){var e=O("#cancel-add-task-button");"visible"===t?e.addEventListener("click",J):"closing"===t&&e.removeEventListener("click",J)}(t)}(X.formState)}function J(){a.emit(f)}function H(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var r,i=document.createElement("div");i.setAttribute("id","main-content"),i.appendChild(function(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=function(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();var a=document.createDocumentFragment();return e.forEach((function(t){a.appendChild(W(t))})),a}(t);return e.appendChild(n),e}(t)),"project"===t.getType()&&i.appendChild(((r=document.createElement("div")).setAttribute("id","add-task-container"),r.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="Add Task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),r.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","title"),e.setAttribute("name","title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(p))}));var n=document.createElement("div");n.setAttribute("id","title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var r=document.createElement("label");r.classList.add("add-task-label"),r.setAttribute("for","details"),r.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("add-task-input"),i.setAttribute("type","text"),i.setAttribute("id","details"),i.setAttribute("name","details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(p))}));var o=document.createElement("div");o.setAttribute("id","details-container"),o.classList.add("input-container"),o.appendChild(r),o.appendChild(i);var d=document.createElement("label");d.classList.add("add-task-label"),d.setAttribute("for","due-date"),d.textContent="Due Date";var s=document.createElement("input");s.classList.add("add-task-input"),s.setAttribute("type","date"),s.setAttribute("id","due-date"),s.setAttribute("name","due-date"),s.setAttribute("required",!0),s.setAttribute("placeholder","yyyy-mm-dd"),s.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(p))}));var u=document.createElement("div");u.setAttribute("id","due-date-container"),u.classList.add("input-container"),u.appendChild(d),u.appendChild(s);var c=document.createElement("button");c.classList.add("add-task-button"),c.setAttribute("id","add-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Add Task"),c.setAttribute("name","add-task-button"),c.setAttribute("form","add-task-form"),c.textContent="Add Task";var l=document.createElement("button");l.classList.add("add-task-button"),l.setAttribute("id","cancel-add-task-button"),l.setAttribute("type","button"),l.setAttribute("aria-label","Cancel Add Task"),l.textContent="Cancel";var m=document.createElement("div");m.setAttribute("id","add-task-button-container"),m.appendChild(c),m.appendChild(l);var f=document.createElement("form");f.setAttribute("id","add-task-form"),f.appendChild(n),f.appendChild(o),f.appendChild(u),f.appendChild(m);var h=document.createElement("div");return h.setAttribute("id","add-task-form-container"),h.setAttribute("aria-label","hidden"),h.setAttribute("data-hidden",!0),h.appendChild(f),h}()),r));var o=document.createElement("div");return o.setAttribute("id","main-container"),o.appendChild(e),o.appendChild(i),o}var I={updateObjectType:null,projectName:null};function Q(t){var e=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var r=n.getProjectArray(),i=t.getAttribute("data-project-name"),d=r.find((function(t){return t.getName()===i}));return I.updateObjectType="project",d}if(a){var s=o(t.getAttribute("data-page-name"),n.getAllTasks());return s.arrangeTasks(t),I.updateObjectType="link",s}}(t),r=e.getName(),i=e.getType(),d=H(e);X.isAddTaskButtonListenerAttached&&(O("#add-task-form-opener-button").removeEventListener("click",J),X.isAddTaskButtonListenerAttached=!1,a.off(f,B));var s,u=O("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(u),u.appendChild(d),"project"===i&&(I.projectName=r,function(t){var e=O("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",J),X.isAddTaskButtonListenerAttached=!0)}(s=i),function(t){"project"===t&&a.on(f,B)}(s)),function(t){t.addEventListener("transitionend",ot,{once:!0})}(t)}function V(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(O(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page")}(e),function(t){a.emit(c,t)}(e))}function U(){var t;!0===nt.open?a.on(c,Q):!1===nt.open&&a.off(c,Q),t=O(".zig-zag-nav"),!0===nt.open?t.addEventListener("click",V):!1===nt.open&&t.removeEventListener("click",V)}function $(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function R(){var t=O("#add-project-form"),e=t.querySelector("#project-name-input").value.trim();if(!e)return alert("Enter Project Name");t.reset();var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{addTask:function(t){e.tasks.push(t)},getTaskArray:function(){return e.tasks},getName:function(){return e.name},getType:function(){return e.type},setName:function(t){e.name=t}}}(e);n.addProject(a);var r=O("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=$(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,r),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(r),tt(),K.projectFormState="hidden"}function G(){a.emit(m)}var K={projectFormState:"hidden"};function Z(t){K.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",Z)}function _(){var t,e,n=O("#add-project-form"),r=K.projectFormState;if("hidden"===r)z(n,{"data-hidden":"false","aria-label":"visible"}),K.projectFormState="visible";else if("visible"===r){z(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,K.projectFormState="closing",t.addEventListener("animationend",Z),O("#project-name-input").value=""}(function(t){var e=O("#add-project-button");"visible"===t?e.addEventListener("click",G):"closing"===t&&e.removeEventListener("click",G)})(e=K.projectFormState),function(t){"visible"===t?a.on(m,R):"closing"===t&&a.off(m,R)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",tt):"closing"===t&&e.removeEventListener("click",tt)}(t)}(K.projectFormState)}function tt(){a.emit(l)}function et(){var t=document.getElementById("new-project-button");!0===nt.open?t.addEventListener("click",tt):!1===nt.open&&t.removeEventListener("click",tt),function(t){!0===t.open?a.on(l,_):!1===t.open&&a.off(l,_)}(nt)}var nt={open:!1,animating:!1};function at(){nt.open=!1,nt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",at),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),et(),U()}function rt(){nt.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",at)}function it(){nt.open=!0,nt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),U(),et()}function ot(){var t=O(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),a.emit(u);else{if(!0===nt.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),a.emit(s)}}var dt,st,ut,ct=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),ct.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",d),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var r=document.createElement("div");return r.classList.add("header-right"),r.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var r=document.createElement("i");return r.classList.add("fa-solid","fa-moon"),r.setAttribute("id","moon"),n.appendChild(a),n.appendChild(r),t.appendChild(e),t.appendChild(n),t}()),r.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",ot),e}()),t.appendChild(e),t.appendChild(r),content.appendChild(t),t}()),ct.appendChild(function(t,e,n,r,i){var o=document.createElement("nav");o.classList.add("zig-zag-nav"),o.setAttribute("id","nav-primary-aria"),o.setAttribute("aria-label","Main Navigation"),o.setAttribute("aria-hidden",!0),o.setAttribute("data-visibility",!1);var d=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=c,o.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var r=t[c].listElements,i=document.createDocumentFragment();r.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var r=document.createElement("li");r.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),r.appendChild(a),i.appendChild(r)})),a.appendChild(i),e.appendChild(n),e.appendChild(a),o.appendChild(e)};for(var c in t)d();return a.on(s,it),a.on(u,rt),o}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(dt=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),dt.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(m))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var r=document.createElement("div");r.setAttribute("id","project-input-container"),r.appendChild($()),r.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var o=document.createElement("form");o.setAttribute("id","add-project-form"),o.setAttribute("aria-label","hidden"),o.setAttribute("data-hidden",!0),o.appendChild(r),o.appendChild(i);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var s=document.createElement("div");return s.setAttribute("id","add-project-container"),s.appendChild(d),s.appendChild(o),s}(),dt.lastChild),dt.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),ct.appendChild((st=H(o("all tasks",n.getAllTasks())),(ut=document.createElement("main")).appendChild(st),ut)),document.querySelectorAll(".task-item-details").forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(r){var i=e.scrollLeft+.5*a;i>=n?a=-1:i<=0&&(a=1),e.scrollLeft=i,requestAnimationFrame(t)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,