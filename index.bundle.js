(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{addTaskToProject:function(t,n){e.find((function(e){return e.getName()===t})).addTask(n)},getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return e.find((function(e){return e.getName()===t}))}}),a={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}};Math.pow(10,8);const r=6e4,i=36e5,o=43200,d=1440;function s(t,e){const n=e?.additionalDigits??2,a=function(t){const e={},n=t.split(u.dateTimeDelimiter);let a;if(n.length>2)return e;if(/:/.test(n[0])?a=n[0]:(e.date=n[0],a=n[1],u.timeZoneDelimiter.test(e.date)&&(e.date=t.split(u.timeZoneDelimiter)[0],a=t.substr(e.date.length,t.length))),a){const t=u.timezone.exec(a);t?(e.time=a.replace(t[1],""),e.timezone=t[1]):e.time=a}return e}(t);let o;if(a.date){const t=function(t,e){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),a=t.match(n);if(!a)return{year:NaN,restDateString:""};const r=a[1]?parseInt(a[1]):null,i=a[2]?parseInt(a[2]):null;return{year:null===i?r:100*i,restDateString:t.slice((a[1]||a[2]).length)}}(a.date,n);o=function(t,e){if(null===e)return new Date(NaN);const n=t.match(c);if(!n)return new Date(NaN);const a=!!n[4],r=f(n[1]),i=f(n[2])-1,o=f(n[3]),d=f(n[4]),s=f(n[5])-1;if(a)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,d,s)?function(t,e,n){const a=new Date(0);a.setUTCFullYear(t,0,4);const r=7*(e-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+r),a}(e,d,s):new Date(NaN);{const t=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(h[e]||(b(t)?29:28))}(e,i,o)&&function(t,e){return e>=1&&e<=(b(t)?366:365)}(e,r)?(t.setUTCFullYear(e,i,Math.max(r,o)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);const d=o.getTime();let s,v=0;if(a.time&&(v=function(t){const e=t.match(l);if(!e)return NaN;const n=p(e[1]),a=p(e[2]),o=p(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,a,o)?n*i+a*r+1e3*o:NaN}(a.time),isNaN(v)))return new Date(NaN);if(!a.timezone){const t=new Date(d+v),e=new Date(0);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return s=function(t){if("Z"===t)return 0;const e=t.match(m);if(!e)return 0;const n="+"===e[1]?-1:1,a=parseInt(e[2]),o=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,o)?n*(a*i+o*r):NaN}(a.timezone),isNaN(s)?new Date(NaN):new Date(d+v+s)}const u={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},c=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,l=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,m=/^([+-])(\d{2})(?::?(\d{2}))?$/;function f(t){return t?parseInt(t):1}function p(t){return t&&parseFloat(t.replace(",","."))||0}const h=[31,null,31,30,31,30,31,31,30,31,30,31];function b(t){return t%400==0||t%4==0&&t%100!=0}function v(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function g(t,e){const n=v(t),a=v(e),r=n.getTime()-a.getTime();return r<0?-1:r>0?1:r}function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function A(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function k(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?A(Object(n),!0).forEach((function(e){var a,r,i;a=t,r=e,i=n[e],(r=function(t){var e=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==y(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===y(e)?e:String(e)}(r))in a?Object.defineProperty(a,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):a[r]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):A(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},sortTaskArray:function(){n.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return g(s(n),s(a))}))},getTaskArray:function(){return n.tasks}}}const C=t.p+"f0f19e6f57687481453e.webp";var E="showNav",w="hideNav",j="handleMain",D="toggleAddProjectForm",T="addNewProject",L="toggelAddTaskForm",N="addNewTask";function M(t){const e=v(t);return+function(t){const e=v(t);return e.setHours(23,59,59,999),e}(e)==+function(t){const e=v(t),n=e.getMonth();return e.setFullYear(e.getFullYear(),n+1,0),e.setHours(23,59,59,999),e}(e)}function S(t,e){const n=v(t),a=v(e),r=g(n,a),i=Math.abs(function(t,e){const n=v(t),a=v(e);return 12*(n.getFullYear()-a.getFullYear())+(n.getMonth()-a.getMonth())}(n,a));let o;if(i<1)o=0;else{1===n.getMonth()&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-r*i);let e=g(n,a)===-r;M(v(t))&&1===i&&1===g(t,a)&&(e=!1),o=r*(i-Number(e))}return 0===o?0:o}function P(t,e,n){const a=function(t,e){return v(t).getTime()-v(e).getTime()}(t,e)/1e3;return(r=n?.roundingMethod,r?Math[r]:Math.trunc)(a);var r}const x={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function W(t){return(e={})=>{const n=e.width?String(e.width):t.defaultWidth;return t.formats[n]||t.formats[t.defaultWidth]}}const F={date:W({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:W({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:W({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},O={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function q(t){return(e,n)=>{let a;if("formatting"===(n?.context?String(n.context):"standalone")&&t.formattingValues){const e=t.defaultFormattingWidth||t.defaultWidth,r=n?.width?String(n.width):e;a=t.formattingValues[r]||t.formattingValues[e]}else{const e=t.defaultWidth,r=n?.width?String(n.width):t.defaultWidth;a=t.values[r]||t.values[e]}return a[t.argumentCallback?t.argumentCallback(e):e]}}function z(t){return(e,n={})=>{const a=n.width,r=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],i=e.match(r);if(!i)return null;const o=i[0],d=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth],s=Array.isArray(d)?function(t,e){for(let e=0;e<t.length;e++)if(t[e].test(o))return e}(d):function(t,e){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&t[e].test(o))return e}(d);let u;return u=t.valueCallback?t.valueCallback(s):s,u=n.valueCallback?n.valueCallback(u):u,{value:u,rest:e.slice(o.length)}}}var X;const Y={code:"en-US",formatDistance:(t,e,n)=>{let a;const r=x[t];return a="string"==typeof r?r:1===e?r.one:r.other.replace("{{count}}",e.toString()),n?.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:F,formatRelative:(t,e,n,a)=>O[t],localize:{ordinalNumber:(t,e)=>{const n=Number(t),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:q({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:q({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:t=>t-1}),month:q({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:q({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:q({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:(X={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:t=>parseInt(t,10)},(t,e={})=>{const n=t.match(X.matchPattern);if(!n)return null;const a=n[0],r=t.match(X.parsePattern);if(!r)return null;let i=X.valueCallback?X.valueCallback(r[0]):r[0];return i=e.valueCallback?e.valueCallback(i):i,{value:i,rest:t.slice(a.length)}}),era:z({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:z({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:t=>t+1}),month:z({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:z({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:z({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};let U={};function B(){return U}function H(t){const e=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return e.setUTCFullYear(t.getFullYear()),t.getTime()-e.getTime()}function I(t,e){return function(t,e,n){const a=B(),r=n?.locale??a.locale??Y,i=g(t,e);if(isNaN(i))throw new RangeError("Invalid time value");const s=Object.assign({},n,{addSuffix:n?.addSuffix,comparison:i});let u,c;i>0?(u=v(e),c=v(t)):(u=v(t),c=v(e));const l=P(c,u),m=(H(c)-H(u))/1e3,f=Math.round((l-m)/60);let p;if(f<2)return n?.includeSeconds?l<5?r.formatDistance("lessThanXSeconds",5,s):l<10?r.formatDistance("lessThanXSeconds",10,s):l<20?r.formatDistance("lessThanXSeconds",20,s):l<40?r.formatDistance("halfAMinute",0,s):l<60?r.formatDistance("lessThanXMinutes",1,s):r.formatDistance("xMinutes",1,s):0===f?r.formatDistance("lessThanXMinutes",1,s):r.formatDistance("xMinutes",f,s);if(f<45)return r.formatDistance("xMinutes",f,s);if(f<90)return r.formatDistance("aboutXHours",1,s);if(f<d){const t=Math.round(f/60);return r.formatDistance("aboutXHours",t,s)}if(f<2520)return r.formatDistance("xDays",1,s);if(f<o){const t=Math.round(f/d);return r.formatDistance("xDays",t,s)}if(f<2*o)return p=Math.round(f/o),r.formatDistance("aboutXMonths",p,s);if(p=S(c,u),p<12){const t=Math.round(f/o);return r.formatDistance("xMonths",t,s)}{const t=p%12,e=Math.floor(p/12);return t<3?r.formatDistance("aboutXYears",e,s):t<9?r.formatDistance("overXYears",e,s):r.formatDistance("almostXYears",e+1,s)}}(t,Date.now(),e)}function J(t){var e=document.createElement("div");e.classList.add("task-checkbox-container");var n=document.createElement("input");n.setAttribute("type","checkbox"),n.classList.add("task-item-checkbox"),e.appendChild(n);var a=document.createElement("h4");a.classList.add("task-item-title"),a.textContent=t.getName();var r=document.createElement("p");r.classList.add("task-item-details"),r.textContent=t.getDetails();var i=document.createElement("p");i.classList.add("task-item-date");var o=I(t.getDueDate(),{addSuffix:!0});i.textContent="Due ".concat(o);var d=document.createElement("input");d.classList.add("task-priority-checkbox"),d.setAttribute("type","checkbox"),d.setAttribute("aria-label","Prioritize Task");var s=document.createElement("button");s.classList.add("modify-task-button"),s.setAttribute("type","button"),s.setAttribute("aria-label","Edit Task");var u=document.createElement("i");u.classList.add("fa-solid","fa-ellipsis-vertical"),s.appendChild(u);var c=document.createElement("div");c.classList.add("task-item-button-container"),c.appendChild(d),c.appendChild(s);var l=document.createElement("div");l.classList.add("task-right-side-container"),l.appendChild(i),l.appendChild(c);var m=document.createElement("li");m.classList.add("task-item"),m.appendChild(e),m.appendChild(a),console.log(t.getDetails()),""!==t.getDetails()&&m.appendChild(r),m.appendChild(l);var f=document.createElement("dialog");f.classList.add("task-edit-modal");var p=document.createElement("button");p.classList.add("task-edit-button"),p.setAttribute("type","button"),p.setAttribute("aria-label","Edit Task"),f.appendChild(p);var h=document.createElement("button");return h.classList.add("task-delete-button"),h.setAttribute("type","button"),h.setAttribute("aria-label","Delete Task"),f.appendChild(h),m}function $(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=function(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();if(e.length>0){var a=document.createDocumentFragment();return e.length>1&&t.sortTaskArray(),e.forEach((function(t){a.appendChild(J(t))})),a}}(t);return n&&e.appendChild(n),e}function Z(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}function Q(){var t=Z("#add-task-form"),e=t.querySelector("#title"),a=t.querySelector("#details"),r=t.querySelector("#due-date"),i=e.value.trim(),o=a.value.trim(),d=r.value;if(!i)return alert("Enter Task Name");if(!d)return alert("Enter Task Due Date");t.reset();var s=nt.projectName,u=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof n&&"string"!=typeof a)throw new Error("⚠️ name, details & due-date, must all be strings");var r={name:t,projectName:e,details:n,dueDate:a,priority:!1,completed:!1};return{getName:function(){return r.name},setName:function(t){r.name=t},getDetails:function(){return r.details},setDetails:function(t){r.details=t},getDueDate:function(){return r.dueDate},setDueDate:function(t){r.dueDate=t},getPriority:function(){return r.priority},setPriority:function(t){r.priority=t},getCompleted:function(){return r.completed},setCompleted:function(t){r.completed=t},setProjectName:function(t){r.project=t},getProjectName:function(){return r.projectName}}}(i,s,o,d);u.setProjectName(s),n.addTaskToProject(s,u),tt(),function(t){var e=Z("#task-list"),a=e.parentNode,r=(Z("#add-task-container"),n.getProjectObject(t));!function(t){var e=document.createDocumentFragment();t.getTaskArray().forEach((function(t){e.appendChild(J(t))}))}(r),e.remove(),a.appendChild($(r))}(s)}function V(){a.emit(N)}function R(t,e){for(var n in e)t.setAttribute(n,e[n])}var G={formState:"hidden",isAddTaskButtonListenerAttached:!1};function K(t){G.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",K)}function _(){var t,e,n=Z("#add-task-form-container"),r=G.formState;"hidden"===r?(n.setAttribute("data-hidden",!1),G.formState="visible"):"visible"===r&&(R(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,G.formState="closing",t.addEventListener("animationend",K)),function(t){var e=Z("#add-task-button");"visible"===t?e.addEventListener("click",V):"closing"===t&&e.removeEventListener("click",V)}(e=G.formState),function(t){"visible"===t?a.on(N,Q):"closing"===t&&a.off(N,Q)}(e),function(t){!function(t){var e=Z("#cancel-add-task-button");"visible"===t?e.addEventListener("click",tt):"closing"===t&&e.removeEventListener("click",tt)}(t)}(G.formState)}function tt(){a.emit(L)}function et(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var r,i=document.createElement("div");i.setAttribute("id","main-content"),i.appendChild($(t)),"project"===t.getType()&&i.appendChild(((r=document.createElement("div")).setAttribute("id","add-task-container"),r.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="Add Task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),r.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","title"),e.setAttribute("name","title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(N))}));var n=document.createElement("div");n.setAttribute("id","title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var r=document.createElement("label");r.classList.add("add-task-label"),r.setAttribute("for","details"),r.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("add-task-input"),i.setAttribute("type","text"),i.setAttribute("id","details"),i.setAttribute("name","details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(N))}));var o=document.createElement("div");o.setAttribute("id","details-container"),o.classList.add("input-container"),o.appendChild(r),o.appendChild(i);var d=document.createElement("label");d.classList.add("add-task-label"),d.setAttribute("for","due-date"),d.textContent="Due Date";var s=document.createElement("input");s.classList.add("add-task-input"),s.setAttribute("type","date"),s.setAttribute("id","due-date"),s.setAttribute("name","due-date"),s.setAttribute("required",!0),s.setAttribute("placeholder","yyyy-mm-dd"),s.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(N))}));var u=document.createElement("div");u.setAttribute("id","due-date-container"),u.classList.add("input-container"),u.appendChild(d),u.appendChild(s);var c=document.createElement("button");c.classList.add("add-task-button"),c.setAttribute("id","add-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Add Task"),c.setAttribute("name","add-task-button"),c.setAttribute("form","add-task-form"),c.textContent="Add Task";var l=document.createElement("button");l.classList.add("add-task-button"),l.setAttribute("id","cancel-add-task-button"),l.setAttribute("type","button"),l.setAttribute("aria-label","Cancel Add Task"),l.textContent="Cancel";var m=document.createElement("div");m.setAttribute("id","add-task-button-container"),m.appendChild(c),m.appendChild(l);var f=document.createElement("form");f.setAttribute("id","add-task-form"),f.appendChild(n),f.appendChild(o),f.appendChild(u),f.appendChild(m);var p=document.createElement("div");return p.setAttribute("id","add-task-form-container"),p.setAttribute("aria-label","hidden"),p.setAttribute("data-hidden",!0),p.appendChild(f),p}()),r));var o=document.createElement("div");return o.setAttribute("id","main-container"),o.appendChild(e),o.appendChild(i),o}var nt={updateObjectType:null,projectName:null};function at(t){var e=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var r=n.getProjectArray(),i=t.getAttribute("data-project-name"),o=r.find((function(t){return t.getName()===i}));return nt.updateObjectType="project",o}if(a){var d=k(t.getAttribute("data-page-name"),n.getAllTasks());return nt.updateObjectType="link",d}}(t),r=e.getName(),i=e.getType(),o=et(e);G.isAddTaskButtonListenerAttached&&(Z("#add-task-form-opener-button").removeEventListener("click",tt),G.isAddTaskButtonListenerAttached=!1,a.off(L,_));var d,s=Z("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(s),s.appendChild(o),"project"===i&&(nt.projectName=r,function(t){var e=Z("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",tt),G.isAddTaskButtonListenerAttached=!0)}(d=i),function(t){"project"===t&&a.on(L,_)}(d)),function(t){t.addEventListener("transitionend",gt,{once:!0})}(t)}function rt(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(Z(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page")}(e),function(t){a.emit(j,t)}(e))}function it(){var t;!0===pt.open?a.on(j,at):!1===pt.open&&a.off(j,at),t=Z(".zig-zag-nav"),!0===pt.open?t.addEventListener("click",rt):!1===pt.open&&t.removeEventListener("click",rt)}function ot(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function dt(){var t=Z("#add-project-form"),e=t.querySelector("#project-name-input").value.trim();if(!e)return alert("Enter Project Name");t.reset();var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{getName:function(){return e.name},setName:function(t){e.name=t},getType:function(){return e.type},addTask:function(t){e.tasks.push(t)},sortTaskArray:function(){e.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return g(s(n),s(a))}))},getTaskArray:function(){return e.tasks}}}(e);n.addProject(a);var r=Z("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=ot(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,r),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(r),mt(),ut.projectFormState="hidden"}function st(){a.emit(T)}var ut={projectFormState:"hidden"};function ct(t){ut.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",ct)}function lt(){var t,e,n=Z("#add-project-form"),r=ut.projectFormState;if("hidden"===r)R(n,{"data-hidden":"false","aria-label":"visible"}),ut.projectFormState="visible";else if("visible"===r){R(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,ut.projectFormState="closing",t.addEventListener("animationend",ct),Z("#project-name-input").value=""}(function(t){var e=Z("#add-project-button");"visible"===t?e.addEventListener("click",st):"closing"===t&&e.removeEventListener("click",st)})(e=ut.projectFormState),function(t){"visible"===t?a.on(T,dt):"closing"===t&&a.off(T,dt)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",mt):"closing"===t&&e.removeEventListener("click",mt)}(t)}(ut.projectFormState)}function mt(){a.emit(D)}function ft(){var t=document.getElementById("new-project-button");!0===pt.open?t.addEventListener("click",mt):!1===pt.open&&t.removeEventListener("click",mt),function(t){!0===t.open?a.on(D,lt):!1===t.open&&a.off(D,lt)}(pt)}var pt={open:!1,animating:!1};function ht(){pt.open=!1,pt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",ht),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),ft(),it()}function bt(){pt.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",ht)}function vt(){pt.open=!0,pt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),it(),ft()}function gt(){var t=Z(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),a.emit(w);else{if(!0===pt.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),a.emit(E)}}var yt,At,kt,Ct=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),Ct.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",C),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var r=document.createElement("div");return r.classList.add("header-right"),r.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var r=document.createElement("i");return r.classList.add("fa-solid","fa-moon"),r.setAttribute("id","moon"),n.appendChild(a),n.appendChild(r),t.appendChild(e),t.appendChild(n),t}()),r.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",gt),e}()),t.appendChild(e),t.appendChild(r),content.appendChild(t),t}()),Ct.appendChild(function(t,e,n,r,i){var o=document.createElement("nav");o.classList.add("zig-zag-nav"),o.setAttribute("id","nav-primary-aria"),o.setAttribute("aria-label","Main Navigation"),o.setAttribute("aria-hidden",!0),o.setAttribute("data-visibility",!1);var d=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=s,o.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var r=t[s].listElements,i=document.createDocumentFragment();r.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var r=document.createElement("li");r.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),r.appendChild(a),i.appendChild(r)})),a.appendChild(i),e.appendChild(n),e.appendChild(a),o.appendChild(e)};for(var s in t)d();return a.on(E,vt),a.on(w,bt),o}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(yt=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),yt.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(T))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var r=document.createElement("div");r.setAttribute("id","project-input-container"),r.appendChild(ot()),r.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var o=document.createElement("form");o.setAttribute("id","add-project-form"),o.setAttribute("aria-label","hidden"),o.setAttribute("data-hidden",!0),o.appendChild(r),o.appendChild(i);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var s=document.createElement("div");return s.setAttribute("id","add-project-container"),s.appendChild(d),s.appendChild(o),s}(),yt.lastChild),yt.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),Ct.appendChild((At=et(k("all tasks",n.getAllTasks())),(kt=document.createElement("main")).appendChild(At),kt)),document.querySelectorAll(".task-item-details").forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(r){var i=e.scrollLeft+.5*a;i>=n?a=-1:i<=0&&(a=1),e.scrollLeft=i,requestAnimationFrame(t)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,