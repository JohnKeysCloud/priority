(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!e;)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{addTaskToProject:function(t,n){e.find((function(e){return e.getName()===t})).addTask(n)},getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return e.find((function(e){return e.getName()===t}))}});Math.pow(10,8);const a=6e4,i=36e5;function r(t,e){const n=e?.additionalDigits??2,r=function(t){const e={},n=t.split(d.dateTimeDelimiter);let a;if(n.length>2)return e;if(/:/.test(n[0])?a=n[0]:(e.date=n[0],a=n[1],d.timeZoneDelimiter.test(e.date)&&(e.date=t.split(d.timeZoneDelimiter)[0],a=t.substr(e.date.length,t.length))),a){const t=d.timezone.exec(a);t?(e.time=a.replace(t[1],""),e.timezone=t[1]):e.time=a}return e}(t);let v;if(r.date){const t=function(t,e){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),a=t.match(n);if(!a)return{year:NaN,restDateString:""};const i=a[1]?parseInt(a[1]):null,r=a[2]?parseInt(a[2]):null;return{year:null===r?i:100*r,restDateString:t.slice((a[1]||a[2]).length)}}(r.date,n);v=function(t,e){if(null===e)return new Date(NaN);const n=t.match(o);if(!n)return new Date(NaN);const a=!!n[4],i=l(n[1]),r=l(n[2])-1,d=l(n[3]),s=l(n[4]),c=l(n[5])-1;if(a)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,s,c)?function(t,e,n){const a=new Date(0);a.setUTCFullYear(t,0,4);const i=7*(e-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+i),a}(e,s,c):new Date(NaN);{const t=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(m[e]||(p(t)?29:28))}(e,r,d)&&function(t,e){return e>=1&&e<=(p(t)?366:365)}(e,i)?(t.setUTCFullYear(e,r,Math.max(i,d)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!v||isNaN(v.getTime()))return new Date(NaN);const f=v.getTime();let b,h=0;if(r.time&&(h=function(t){const e=t.match(s);if(!e)return NaN;const n=u(e[1]),r=u(e[2]),d=u(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,r,d)?n*i+r*a+1e3*d:NaN}(r.time),isNaN(h)))return new Date(NaN);if(!r.timezone){const t=new Date(f+h),e=new Date(0);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return b=function(t){if("Z"===t)return 0;const e=t.match(c);if(!e)return 0;const n="+"===e[1]?-1:1,r=parseInt(e[2]),d=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,d)?n*(r*i+d*a):NaN}(r.timezone),isNaN(b)?new Date(NaN):new Date(f+h+b)}const d={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},o=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,s=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,c=/^([+-])(\d{2})(?::?(\d{2}))?$/;function l(t){return t?parseInt(t):1}function u(t){return t&&parseFloat(t.replace(",","."))||0}const m=[31,null,31,30,31,30,31,31,30,31,30,31];function p(t){return t%400==0||t%4==0&&t%100!=0}function v(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function f(t,e){const n=v(t),a=v(e),i=n.getTime()-a.getTime();return i<0?-1:i>0?1:i}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function g(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){var a,i,r;a=t,i=e,r=n[e],(i=function(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==b(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===b(e)?e:String(e)}(i))in a?Object.defineProperty(a,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):a[i]=r})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},sortTaskArray:function(){n.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return f(r(n),r(a))}))},getTaskArray:function(){return n.tasks}}}const k=t.p+"f0f19e6f57687481453e.webp";var A="showNav",y="hideNav",E="toggleAddProjectForm",C="toggelAddTaskForm",L="toggleEditTaskForm",j="addNewProject",D="addNewTask",N="handleMain";function T(t){var e,a=t.target,i=a.tagName.toLowerCase();if("button"===i||"input"===i){var r=a.closest(".task-item");if(r){var d=(e=r.querySelector(".task-item-title").textContent.toLowerCase(),n.getAllTasks().find((function(t){return t.getName()===e}))),o={"task-item-checkbox":function(){return e=d,void(!0===(n=(t=a).checked)?(e.setCompleted(!0),t.setAttribute("data-checked","true")):!1===n&&(e.setCompleted(!1),t.setAttribute("data-checked","false")));var t,e,n},"task-priority-star-button":function(){return e=d,n=(t=a).getAttribute("data-checked"),function(t,e){"false"===e?t.setAttribute("data-checked","true"):"true"===e&&t.setAttribute("data-checked","false")}(t,n),void("false"===n?e.setPriority(!0):"true"===n&&e.setPriority(!1));var t,e,n},"modify-task-button":function(){return W(d)}}[a.className];o&&o()}}}function w(t,e){for(var n in e)t.setAttribute(n,e[n])}function S(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();if(e.length>0){var a=document.createDocumentFragment();return e.length>1&&t.sortTaskArray(),e.forEach((function(t){a.appendChild(function(t){var e=t.getName().toLowerCase(),n=t.getDetails(),a=t.getDueDate(),i=t.getCompleted(),r=t.getPriority(),d=document.createElement("div");d.classList.add("task-checkbox-container");var o=document.createElement("input");o.setAttribute("type","checkbox"),o.setAttribute("data-checked",i?"true":"false"),o.checked=!!i,o.classList.add("task-item-checkbox"),d.appendChild(o);var s=document.createElement("h4");s.classList.add("task-item-title"),s.textContent=e;var c=document.createElement("p");c.classList.add("task-item-details"),c.textContent=n;var l,u=document.createElement("p");u.classList.add("task-item-date"),u.textContent="Due ".concat((l={year:"numeric",month:"short",day:"numeric"},new Date(a).toLocaleDateString("en-us",l)));var m=document.createElement("span");m.classList.add("task-priority-star-icon","material-symbols-outlined"),m.textContent="star";var p=document.createElement("button");p.classList.add("task-priority-star-button"),w(p,{"aria-label":"Prioritize Task",type:"button","data-checked":r?"true":"false"}),p.appendChild(m);var v=document.createElement("button");v.classList.add("modify-task-button"),v.setAttribute("type","button"),v.setAttribute("aria-label","Edit Task");var f=document.createElement("i");f.classList.add("fa-solid","fa-ellipsis-vertical"),v.appendChild(f);var b=document.createElement("div");b.classList.add("task-item-button-container"),b.appendChild(p),b.appendChild(v);var h=document.createElement("div");h.classList.add("task-right-side-container"),h.appendChild(u),h.appendChild(b);var g=document.createElement("li");return g.classList.add("task-item"),g.appendChild(d),g.appendChild(s),""!==n.trim()&&g.appendChild(c),g.appendChild(h),g}(t))})),a}}function x(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=S(t);return n&&e.appendChild(n),e}function P(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}function q(){var t=P("#edit-task-form"),e=t.querySelector("#edit-task-title"),a=t.querySelector("#edit-task-details"),i=t.querySelector("#edit-task-due-date"),r=e.value.trim().toLowerCase(),d=a.value.trim(),o=i.value;return r?o?o<(new Date).toISOString().slice(0,10)?alert("Enter Valid Due Date"):(t.reset(),M.setName(r),M.setDetails(d),M.setDueDate(o),W(),void("project"===tt.linkType?H(tt.projectName):"link"===tt.linkType&&function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:activeLink,e=P("#main-content"),a=e.querySelector("#task-list"),i=x(g(t,n.getAllTasks()));a.remove(),e.appendChild(i),Y(i)&&Z(i)}(_))):alert("Enter Task Due Date"):alert("Enter Task Name")}function O(t){if(t.target.classList.contains("edit-task-button")){var e=t.target.getAttribute("id"),n="cancel-edit-task-button"===e;"save-edit-task-button"===e?q():n&&W()}}function F(t){t.close(),w(t,{"data-hidden":"hidden","aria-label":"hidden"})}var z,M,U={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}},I=!1;function B(t){var e=P(".edit-task-button-container");"hidden"===t?e.removeEventListener("click",O):"visible"===t&&e.addEventListener("click",O)}function $(t){var e,n,a,i=P("#edit-task-modal"),r=i.getAttribute("data-hidden");"hidden"===r?(z="visible",function(t){var e=P("#edit-task-modal"),n=e.querySelector("#edit-task-title"),a=e.querySelector("#edit-task-details"),i=e.querySelector("#edit-task-due-date"),r=t.getName(),d=t.getDetails(),o=t.getDueDate();n.value=r,a.value=d,i.value=o}(t),(a=i).showModal(),w(a,{"data-hidden":"visible","aria-label":"visible"}),B(z)):"visible"===r&&(z="closing",n=F,(e=i).setAttribute("data-hidden","closing"),e.addEventListener("animationend",(function t(){n(e),e.removeEventListener("animationend",t),z="hidden"})),B(z)),M=t}function W(t){U.emit(L,t)}function Z(t){var e,n;e=P("#content"),n=function(){var t=document.createElement("h2");t.setAttribute("id","edit-task-heading"),t.textContent="Edit Task";var e=document.createElement("dialog");return w(e,{id:"edit-task-modal","aria-label":"hidden","data-hidden":"hidden"}),e.appendChild(t),e.appendChild(function(){var t=document.createElement("label");t.classList.add("edit-task-label"),t.setAttribute("for","edit-task-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("edit-task-input"),e.setAttribute("type","text"),e.setAttribute("id","edit-task-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),q())}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("edit-task-label"),a.setAttribute("for","edit-task-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("edit-task-input"),i.setAttribute("type","text"),i.setAttribute("id","edit-task-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),q())}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("edit-task-label"),d.setAttribute("for","edit-task-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("edit-task-input"),o.setAttribute("type","date"),o.setAttribute("id","edit-task-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),q())}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("edit-task-button"),c.setAttribute("id","save-edit-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Edit Task"),c.setAttribute("form","edit-task-form"),c.textContent="save";var l=document.createElement("button");l.classList.add("edit-task-button"),l.setAttribute("id","cancel-edit-task-button"),l.setAttribute("type","button"),l.setAttribute("aria-label","Cancel Edit Task"),l.textContent="cancel";var u=document.createElement("div");u.classList.add("edit-task-button-container"),u.appendChild(c),u.appendChild(l);var m=document.createElement("form");m.setAttribute("id","edit-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(u);var p=document.createElement("div");return p.classList.add("edit-task-form-container"),p.appendChild(m),p}()),e}(),e.appendChild(n),function(t){t.addEventListener("click",T)}(t),function(t){var e,n;(e=t.querySelectorAll(".task-item-details"),n=[],e.forEach((function(t){t.clientWidth<t.scrollWidth&&n.push(t)})),n).forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(i){var r=e.scrollLeft+.5*a;r>=n?a=-1:r<=0&&(a=1),e.scrollLeft=r,requestAnimationFrame(t)}()}))}(t),I||(U.on(L,$),I=!0)}function Y(t){var e=t.firstChild;return!(e&&e.hasAttribute("id","placeholder-container")||!e)}function H(t){var e=P("#task-list"),a=e.parentNode,i=n.getProjectObject(t);e.remove();var r=x(i);a.appendChild(r),Y(r)&&Z(r)}function R(){var t=P("#add-task-form"),e=t.querySelector("#task-add-title"),a=t.querySelector("#task-add-details"),i=t.querySelector("#task-add-due-date"),r=e.value.trim().toLowerCase(),d=a.value.trim(),o=i.value;if(!r)return alert("Enter Task Name");if(!o)return alert("Enter Task Due Date");if(o<(new Date).toISOString().slice(0,10))return alert("Enter Valid Due Date");t.reset();var s=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof a&&"string"!=typeof n)throw new Error("⚠️ name, details & due-date, must all be strings");var i={name:t,projectName:e,dueDate:n,details:a,priority:!1,completed:!1};return{getName:function(){return i.name},setName:function(t){i.name=t},getDetails:function(){return i.details},setDetails:function(t){i.details=t},getDueDate:function(){return i.dueDate},setDueDate:function(t){i.dueDate=t},getPriority:function(){return i.priority},setPriority:function(t){i.priority=t},getCompleted:function(){return i.completed},setCompleted:function(t){i.completed=t},setProjectName:function(t){i.project=t},getProjectName:function(){return i.projectName}}}(r,c,o,d);s.setProjectName(c);var c=tt.projectName.toLowerCase();n.addTaskToProject(c,s),Q(),H(c)}function V(){U.emit(D)}var G={formState:"hidden",isAddTaskButtonListenerAttached:!1};function J(t){G.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",J)}function K(){var t,e,n=P(".add-task-form-container"),a=G.formState;"hidden"===a?(w(n,{"data-hidden":"false","aria-label":"visible"}),G.formState="visible"):"visible"===a&&(w(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,G.formState="closing",t.addEventListener("animationend",J)),function(t){var e=P("#add-task-button");"visible"===t?e.addEventListener("click",V):"closing"===t&&e.removeEventListener("click",V)}(e=G.formState),function(t){"visible"===t?U.on(D,R):"closing"===t&&U.off(D,R)}(e),function(t){!function(t){var e=P("#cancel-add-task-button");"visible"===t?e.addEventListener("click",Q):"closing"===t&&e.removeEventListener("click",Q)}(t)}(G.formState)}function Q(){U.emit(C)}function X(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var a=x(t),i=document.createElement("div");i.setAttribute("id","main-content"),i.appendChild(a);var r,d=document.createElement("div"),o=t.getType();return d.appendChild(e),"project"===o&&d.appendChild(((r=document.createElement("div")).setAttribute("id","add-task-container"),r.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="add task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),r.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","task-add-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","task-add-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),U.emit(D))}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("add-task-label"),a.setAttribute("for","task-add-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("add-task-input"),i.setAttribute("type","text"),i.setAttribute("id","task-add-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),U.emit(D))}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("add-task-label"),d.setAttribute("for","task-add-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("add-task-input"),o.setAttribute("type","date"),o.setAttribute("id","task-add-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),U.emit(D))}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("add-task-button"),c.setAttribute("id","add-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Add Task"),c.setAttribute("name","add-task-button"),c.setAttribute("form","add-task-form"),c.textContent="add";var l=document.createElement("button");l.classList.add("add-task-button"),l.setAttribute("id","cancel-add-task-button"),l.setAttribute("type","button"),l.setAttribute("aria-label","Cancel Add Task"),l.textContent="cancel";var u=document.createElement("div");u.classList.add("add-task-button-container"),u.appendChild(c),u.appendChild(l);var m=document.createElement("form");m.setAttribute("id","add-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(u);var p=document.createElement("div");return p.classList.add("add-task-form-container"),p.setAttribute("aria-label","hidden"),p.setAttribute("data-hidden",!0),p.appendChild(m),p}()),r)),d.setAttribute("id","main-container"),d.appendChild(i),d}var _,tt={linkType:null,projectName:null};function et(t){var e=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var i=n.getProjectArray(),r=t.getAttribute("data-project-name"),d=i.find((function(t){return t.getName()===r}));return tt.linkType="project",d}if(a){var o=g(t.getAttribute("data-page-name"),n.getAllTasks());return tt.linkType="link",o}}(t),a=e.getName(),i=e.getType(),r=X(e),d=r.querySelector("#task-list");G.isAddTaskButtonListenerAttached&&(P("#add-task-form-opener-button").removeEventListener("click",Q),G.isAddTaskButtonListenerAttached=!1,U.off(C,K));var o,s=P("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(s),s.appendChild(r),"project"===i&&(tt.projectName=a,function(t){var e=P("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",Q),G.isAddTaskButtonListenerAttached=!0)}(o=i),function(t){"project"===t&&U.on(C,K)}(o)),Y(d)&&Z(d),function(t){t.addEventListener("transitionend",bt,{once:!0})}(t)}function nt(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(P(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page"),_=t.textContent.toLowerCase()}(e),function(t){U.emit(N,t)}(e))}function at(){var t;!0===mt.open?U.on(N,et):!1===mt.open&&U.off(N,et),t=P(".zig-zag-nav"),!0===mt.open?t.addEventListener("click",nt):!1===mt.open&&t.removeEventListener("click",nt)}function it(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function rt(){var t=P("#add-project-form"),e=t.querySelector("#project-name-input").value.trim().toLowerCase();if(!e)return alert("Enter Project Name");t.reset();var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{getName:function(){return e.name},setName:function(t){e.name=t},getType:function(){return e.type},addTask:function(t){e.tasks.push(t)},sortTaskArray:function(){e.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return f(r(n),r(a))}))},getTaskArray:function(){return e.tasks}}}(e);n.addProject(a);var i=P("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=it(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,i),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(i),lt(),ot.projectFormState="hidden"}function dt(){U.emit(j)}var ot={projectFormState:"hidden"};function st(t){ot.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",st)}function ct(){var t,e,n=P("#add-project-form"),a=ot.projectFormState;if("hidden"===a)w(n,{"data-hidden":"false","aria-label":"visible"}),ot.projectFormState="visible";else if("visible"===a){w(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,ot.projectFormState="closing",t.addEventListener("animationend",st),P("#project-name-input").value=""}(function(t){var e=P("#add-project-button");"visible"===t?e.addEventListener("click",dt):"closing"===t&&e.removeEventListener("click",dt)})(e=ot.projectFormState),function(t){"visible"===t?U.on(j,rt):"closing"===t&&U.off(j,rt)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",lt):"closing"===t&&e.removeEventListener("click",lt)}(t)}(ot.projectFormState)}function lt(){U.emit(E)}function ut(){var t=document.getElementById("new-project-button");!0===mt.open?t.addEventListener("click",lt):!1===mt.open&&t.removeEventListener("click",lt),function(t){!0===t.open?U.on(E,ct):!1===t.open&&U.off(E,ct)}(mt)}var mt={open:!1,animating:!1};function pt(){mt.open=!1,mt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",pt),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),ut(),at()}function vt(){mt.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",pt)}function ft(){mt.open=!0,mt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),at(),ut()}function bt(){var t=P(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),U.emit(y);else{if(!0===mt.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),U.emit(A)}}var ht,gt,kt,At=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=document.createElement("link");for(var i in a.setAttribute("href",t),a.setAttribute("rel",e),n)a.setAttribute(i,n[i]);document.head.appendChild(a)}("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200","stylesheet"),At.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",k),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var i=document.createElement("div");return i.classList.add("header-right"),i.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var i=document.createElement("i");return i.classList.add("fa-solid","fa-moon"),i.setAttribute("id","moon"),n.appendChild(a),n.appendChild(i),t.appendChild(e),t.appendChild(n),t}()),i.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",bt),e}()),t.appendChild(e),t.appendChild(i),content.appendChild(t),t}()),At.appendChild(function(t,e,n,a,i){var r=document.createElement("nav");r.classList.add("zig-zag-nav"),r.setAttribute("id","nav-primary-aria"),r.setAttribute("aria-label","Main Navigation"),r.setAttribute("aria-hidden",!0),r.setAttribute("data-visibility",!1);var d=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=o,r.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var i=t[o].listElements,d=document.createDocumentFragment();i.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var i=document.createElement("li");i.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),i.appendChild(a),d.appendChild(i)})),a.appendChild(d),e.appendChild(n),e.appendChild(a),r.appendChild(e)};for(var o in t)d();return U.on(A,ft),U.on(y,vt),r}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(ht=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),ht.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),U.emit(j))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var a=document.createElement("div");a.setAttribute("id","project-input-container"),a.appendChild(it()),a.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var r=document.createElement("form");r.setAttribute("id","add-project-form"),r.setAttribute("aria-label","hidden"),r.setAttribute("data-hidden",!0),r.appendChild(a),r.appendChild(i);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var o=document.createElement("div");return o.setAttribute("id","add-project-container"),o.appendChild(d),o.appendChild(r),o}(),ht.lastChild),ht.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),At.appendChild((gt=X(g("all tasks",n.getAllTasks())),(kt=document.createElement("main")).appendChild(gt),kt))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQWlCNVAsWUFBYyxjQUUvQixJQUFNeVQsRUFBc0JsZSxTQUFTaU0sY0FBYyxPQUtuRCxPQUpBaVMsRUFBb0JsVCxhQUFhLEtBQU0seUJBQ3ZDa1QsRUFBb0I3UixZQUFZZ08sR0FDaEM2RCxFQUFvQjdSLFlBQVl3TixHQUV6QnFFLENBQ1QsQ1YxRElDLEdBQ0F2RCxHQUF3QndELFdBR0h4RCxHQUF3QnBRLGNBQWMsV0FDOUNRLGFBQWEsS0FBTSxvQldmVmhMLFNBQVNnVCxpQkFBaUIsa0VBRWxDdkcsU0FBUSxTQUFDK1EsR0FDd0IsY0FBM0NBLEVBQVFyUyxhQUFhLG1CQUN1QixVQUEzQ3FTLEVBQVFyUyxhQUFhLG1CQUNzQixnQkFBM0NxUyxFQUFRclMsYUFBYSxrQkFFeEJxUyxFQUFReFMsYUFBYSxzQkFBdUIsUUFDUSxlQUEzQ3dTLEVBQVFyUyxhQUFhLG1CQUM5QnFTLEVBQVF4UyxhQUFhLHNCQUF1QixTQUVoRCxJWndERjhQLEdBQVF6TyxhRTlEQXlKLEdBQXVCSixFRjhEQW5OLEVBQWtCLFlBQWE1SCxFQUFLbUIsaUJFN0QzRCtZLEdBQU83YSxTQUFTaU0sY0FBYyxTQUMvQkksWUFBWXlKLElBRVYrRSxJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJpb3JpdHkvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9wcmlvcml0eS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9kYXRhLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2NvbnN0YW50cy5tanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvcGFyc2VJU08ubWpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL3RvRGF0ZS5tanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvY29tcGFyZUFzYy5tanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvbG9naWMuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvZXZlbnROYW1lcy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtdGFzay1pdGVtLWludGVyYWN0YWJsZXMuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtdGFzay1saXN0LmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtdGFzay1saXN0LXBsYWNlaG9sZGVyLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtdGFzay1pdGVtLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9mb3JtYXQtZGF0ZS5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS1lZGl0LXRhc2stbW9kYWwtYnV0dG9ucy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9wcm9qZWN0LWRlcGVuZGVudC11dGlsaXRpZXMvcmVmcmVzaC10YXNrLWxpc3QtZnJvbS1saW5rLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9lbmhhbmNlZC1tb2RhbC1oYW5kbGluZy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy91dGlsaXRpZXMvcHVic3ViLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZXJzL2hhbmRsZS10YXNrLWl0ZW1zLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtZWRpdC10YXNrLW1vZGFsLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtZWRpdC10YXNrLWZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL3Njcm9sbC1lbGVtZW50LWNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLXRhc2stbGlzdC5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtdGFzay1hZGQtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL2hhbmRsZXJzL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtdGFzay1jYW5jZWwtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtbWFpbi1jb250ZW50LWNvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9tYXJrdXAvY3JlYXRlLWFkZC10YXNrLWNvbnRhaW5lci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9tYXJrdXAvY3JlYXRlLWFkZC10YXNrLWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9tYXJrdXAvY3JlYXRlLWFkZC10YXNrLWZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLW1haW4uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLW5hdi1saW5rcy5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9yZW1vdmUtYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uLWxpc3RlbmVyLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvbGlzdEljb24vY3JlYXRlLWxpc3QtaWNvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtcHJvamVjdC1hZGQtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21hcmt1cC9jcmVhdGUtcHJvamVjdC1pdGVtLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy90b2dnbGUtc2Nyb2xsLXZpc2liaWxpdHkuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvaGFuZGxlcnMvaGFuZGxlLW5ldy1wcm9qZWN0LWJ1dHRvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy91dGlsaXRpZXMvY2xlYXItdGV4dC1pbnB1dC5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9oYW5kbGVycy9oYW5kbGUtcHJvamVjdC1jYW5jZWwtYnV0dG9uLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvemlnLXphZy1uYXYvaGFuZGxlLXppZy16YWctbmF2LmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvbmF2LXRvZ2dsZS9oYW5kbGUtbmF2LXRvZ2dsZS1idXR0b24uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvYXBwLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2pzL21vZGlmaWVycy9tb2RpZnktc2Vjb25kLW5hdi1jb250YWluZXIuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvbWFya3VwL2NyZWF0ZS1tYWluLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL3V0aWxpdGllcy9hZGQtc2NyaXB0LXRvLWhlYWQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvc2NyaXB0LWluamVjdGlvbnMvaW5qZWN0LWZvbnQtYXdlc29tZS1zY3JpcHQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvdXRpbGl0aWVzL2FkZC1saW5rLXRvLWhlYWQuanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvc2NyaXB0LWluamVjdGlvbnMvaW5qZWN0LXN0YXItbWF0ZXJpYWwtaWNvbi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9tYXJrdXAvY3JlYXRlLWhlYWRlci5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9jb21wb25lbnRzL3RoZW1lLXRvZ2dsZS90aGVtZS10b2dnbGUubWFya3VwLmpzIiwid2VicGFjazovL3ByaW9yaXR5Ly4vc3JjL2NvbXBvbmVudHMvbmF2LXRvZ2dsZS9uYXYtdG9nZ2xlLW1hcmt1cC5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9jb21wb25lbnRzL3ppZy16YWctbmF2L2NyZWF0ZS16aWctemFnLW5hdi5qcyIsIndlYnBhY2s6Ly9wcmlvcml0eS8uL3NyYy9qcy9tYXJrdXAvY3JlYXRlLWFkZC1wcm9qZWN0LWZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJpb3JpdHkvLi9zcmMvanMvbW9kaWZpZXJzL21vZGlmeS1nZW5lcmljLW5hdi1saW5rcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICFzY3JpcHRVcmwpIHNjcmlwdFVybCA9IHNjcmlwdHNbaS0tXS5zcmM7XG5cdFx0fVxuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJmdW5jdGlvbiBwcm9qZWN0c0VuY2Fwc3VsYXRpb24oKSB7XG4gIGNvbnN0IGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheSA9IFtdO1xuXG4gIHJldHVybiB7XG4gICAgYWRkVGFza1RvUHJvamVjdDogKHByb2plY3ROYW1lLCB0YXNrKSA9PiB7XG4gICAgICBjb25zdCBwcm9qZWN0ID0gZW5jYXBzdWxhdGVkUHJvamVjdEFycmF5LmZpbmQoXG4gICAgICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LmdldE5hbWUoKSA9PT0gcHJvamVjdE5hbWVcbiAgICAgICk7XG4gICAgICBwcm9qZWN0LmFkZFRhc2sodGFzayk7XG4gICAgfSxcbiAgICBnZXRQcm9qZWN0QXJyYXk6ICgpID0+IHtcbiAgICAgIHJldHVybiBbLi4uZW5jYXBzdWxhdGVkUHJvamVjdEFycmF5XTtcbiAgICB9LFxuICAgIGFycmFuZ2VQcm9qZWN0QXJyYXk6IChjYWxsYmFjaykgPT4ge1xuICAgICAgcmV0dXJuIFsuLi5lbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXldLmZpbHRlcihjYWxsYmFjayk7XG4gICAgfSxcbiAgICBnZXRQcm9qZWN0QXJyYXlMZW5ndGg6ICgpID0+IHtcbiAgICAgIHJldHVybiBlbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXkubGVuZ3RoO1xuICAgIH0sXG4gICAgYWRkUHJvamVjdDogKHByb2plY3QpID0+IHtcbiAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5wdXNoKHByb2plY3QpO1xuICAgIH0sXG4gICAgZGVsZXRlUHJvamVjdDogKHByb2plY3QpID0+IHtcbiAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5zcGxpY2UoXG4gICAgICAgIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5pbmRleE9mKHByb2plY3QpLFxuICAgICAgICAxXG4gICAgICApO1xuICAgIH0sXG4gICAgZ2V0QWxsVGFza3M6ICgpID0+IHtcbiAgICAgIHJldHVybiBlbmNhcHN1bGF0ZWRQcm9qZWN0QXJyYXkuZmxhdE1hcCgocHJvamVjdCkgPT5cbiAgICAgICAgcHJvamVjdC5nZXRUYXNrQXJyYXkoKVxuICAgICAgKTtcbiAgICB9LFxuICAgIGdldFByb2plY3RPYmplY3Q6IChwcm9qZWN0TmFtZSkgPT4ge1xuICAgICAgcmV0dXJuIGVuY2Fwc3VsYXRlZFByb2plY3RBcnJheS5maW5kKFxuICAgICAgICAocHJvamVjdCkgPT4gcHJvamVjdC5nZXROYW1lKCkgPT09IHByb2plY3ROYW1lXG4gICAgICApO1xuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBkYXRhID0gcHJvamVjdHNFbmNhcHN1bGF0aW9uKCk7XG4iLCIvKipcbiAqIEBtb2R1bGUgY29uc3RhbnRzXG4gKiBAc3VtbWFyeSBVc2VmdWwgY29uc3RhbnRzXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbGxlY3Rpb24gb2YgdXNlZnVsIGRhdGUgY29uc3RhbnRzLlxuICpcbiAqIFRoZSBjb25zdGFudHMgY291bGQgYmUgaW1wb3J0ZWQgZnJvbSBgZGF0ZS1mbnMvY29uc3RhbnRzYDpcbiAqXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgbWF4VGltZSwgbWluVGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBmdW5jdGlvbiBpc0FsbG93ZWRUaW1lKHRpbWUpIHtcbiAqICAgcmV0dXJuIHRpbWUgPD0gbWF4VGltZSAmJiB0aW1lID49IG1pblRpbWU7XG4gKiB9XG4gKiBgYGBcbiAqL1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgZGF5c0luV2Vla1xuICogQHN1bW1hcnkgRGF5cyBpbiAxIHdlZWsuXG4gKi9cbmV4cG9ydCBjb25zdCBkYXlzSW5XZWVrID0gNztcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIGRheXNJblllYXJcbiAqIEBzdW1tYXJ5IERheXMgaW4gMSB5ZWFyLlxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogSG93IG1hbnkgZGF5cyBpbiBhIHllYXIuXG4gKlxuICogT25lIHllYXJzIGVxdWFscyAzNjUuMjQyNSBkYXlzIGFjY29yZGluZyB0byB0aGUgZm9ybXVsYTpcbiAqXG4gKiA+IExlYXAgeWVhciBvY2N1cmVzIGV2ZXJ5IDQgeWVhcnMsIGV4Y2VwdCBmb3IgeWVhcnMgdGhhdCBhcmUgZGl2aXNhYmxlIGJ5IDEwMCBhbmQgbm90IGRpdmlzYWJsZSBieSA0MDAuXG4gKiA+IDEgbWVhbiB5ZWFyID0gKDM2NSsxLzQtMS8xMDArMS80MDApIGRheXMgPSAzNjUuMjQyNSBkYXlzXG4gKi9cbmV4cG9ydCBjb25zdCBkYXlzSW5ZZWFyID0gMzY1LjI0MjU7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtYXhUaW1lXG4gKiBAc3VtbWFyeSBNYXhpbXVtIGFsbG93ZWQgdGltZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogaW1wb3J0IHsgbWF4VGltZSB9IGZyb20gXCIuL2NvbnN0YW50cy9kYXRlLWZucy9jb25zdGFudHNcIjtcbiAqXG4gKiBjb25zdCBpc1ZhbGlkID0gODY0MDAwMDAwMDAwMDAwMSA8PSBtYXhUaW1lO1xuICogLy89PiBmYWxzZVxuICpcbiAqIG5ldyBEYXRlKDg2NDAwMDAwMDAwMDAwMDEpO1xuICogLy89PiBJbnZhbGlkIERhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1heFRpbWUgPSBNYXRoLnBvdygxMCwgOCkgKiAyNCAqIDYwICogNjAgKiAxMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWluVGltZVxuICogQHN1bW1hcnkgTWluaW11bSBhbGxvd2VkIHRpbWUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGltcG9ydCB7IG1pblRpbWUgfSBmcm9tIFwiLi9jb25zdGFudHMvZGF0ZS1mbnMvY29uc3RhbnRzXCI7XG4gKlxuICogY29uc3QgaXNWYWxpZCA9IC04NjQwMDAwMDAwMDAwMDAxID49IG1pblRpbWU7XG4gKiAvLz0+IGZhbHNlXG4gKlxuICogbmV3IERhdGUoLTg2NDAwMDAwMDAwMDAwMDEpXG4gKiAvLz0+IEludmFsaWQgRGF0ZVxuICovXG5leHBvcnQgY29uc3QgbWluVGltZSA9IC1tYXhUaW1lO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5XZWVrXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSB3ZWVrLlxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5XZWVrID0gNjA0ODAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5EYXlcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIGRheS5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbGxpc2Vjb25kc0luRGF5ID0gODY0MDAwMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaWxsaXNlY29uZHNJbk1pbnV0ZVxuICogQHN1bW1hcnkgTWlsbGlzZWNvbmRzIGluIDEgbWludXRlXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDYwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5Ib3VyXG4gKiBAc3VtbWFyeSBNaWxsaXNlY29uZHMgaW4gMSBob3VyXG4gKi9cbmV4cG9ydCBjb25zdCBtaWxsaXNlY29uZHNJbkhvdXIgPSAzNjAwMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5TZWNvbmRcbiAqIEBzdW1tYXJ5IE1pbGxpc2Vjb25kcyBpbiAxIHNlY29uZFxuICovXG5leHBvcnQgY29uc3QgbWlsbGlzZWNvbmRzSW5TZWNvbmQgPSAxMDAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luWWVhclxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIHllYXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5ZZWFyID0gNTI1NjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luTW9udGhcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBtb250aC5cbiAqL1xuZXhwb3J0IGNvbnN0IG1pbnV0ZXNJbk1vbnRoID0gNDMyMDA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtaW51dGVzSW5EYXlcbiAqIEBzdW1tYXJ5IE1pbnV0ZXMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5EYXkgPSAxNDQwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbWludXRlc0luSG91clxuICogQHN1bW1hcnkgTWludXRlcyBpbiAxIGhvdXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtaW51dGVzSW5Ib3VyID0gNjA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBtb250aHNJblF1YXJ0ZXJcbiAqIEBzdW1tYXJ5IE1vbnRocyBpbiAxIHF1YXJ0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBtb250aHNJblF1YXJ0ZXIgPSAzO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgbW9udGhzSW5ZZWFyXG4gKiBAc3VtbWFyeSBNb250aHMgaW4gMSB5ZWFyLlxuICovXG5leHBvcnQgY29uc3QgbW9udGhzSW5ZZWFyID0gMTI7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBxdWFydGVyc0luWWVhclxuICogQHN1bW1hcnkgUXVhcnRlcnMgaW4gMSB5ZWFyXG4gKi9cbmV4cG9ydCBjb25zdCBxdWFydGVyc0luWWVhciA9IDQ7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5Ib3VyXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgaG91ci5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbkhvdXIgPSAzNjAwO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luTWludXRlXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgbWludXRlLlxuICovXG5leHBvcnQgY29uc3Qgc2Vjb25kc0luTWludXRlID0gNjA7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5EYXlcbiAqIEBzdW1tYXJ5IFNlY29uZHMgaW4gMSBkYXkuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5EYXkgPSBzZWNvbmRzSW5Ib3VyICogMjQ7XG5cbi8qKlxuICogQGNvbnN0YW50XG4gKiBAbmFtZSBzZWNvbmRzSW5XZWVrXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgd2Vlay5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbldlZWsgPSBzZWNvbmRzSW5EYXkgKiA3O1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luWWVhclxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHllYXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5ZZWFyID0gc2Vjb25kc0luRGF5ICogZGF5c0luWWVhcjtcblxuLyoqXG4gKiBAY29uc3RhbnRcbiAqIEBuYW1lIHNlY29uZHNJbk1vbnRoXG4gKiBAc3VtbWFyeSBTZWNvbmRzIGluIDEgbW9udGhcbiAqL1xuZXhwb3J0IGNvbnN0IHNlY29uZHNJbk1vbnRoID0gc2Vjb25kc0luWWVhciAvIDEyO1xuXG4vKipcbiAqIEBjb25zdGFudFxuICogQG5hbWUgc2Vjb25kc0luUXVhcnRlclxuICogQHN1bW1hcnkgU2Vjb25kcyBpbiAxIHF1YXJ0ZXIuXG4gKi9cbmV4cG9ydCBjb25zdCBzZWNvbmRzSW5RdWFydGVyID0gc2Vjb25kc0luTW9udGggKiAzO1xuIiwiaW1wb3J0IHsgbWlsbGlzZWNvbmRzSW5Ib3VyLCBtaWxsaXNlY29uZHNJbk1pbnV0ZSB9IGZyb20gXCIuL2NvbnN0YW50cy5tanNcIjtcblxuLyoqXG4gKiBUaGUge0BsaW5rIHBhcnNlSVNPfSBmdW5jdGlvbiBvcHRpb25zLlxuICovXG5cbi8qKlxuICogQG5hbWUgcGFyc2VJU09cbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUGFyc2UgSVNPIHN0cmluZ1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUGFyc2UgdGhlIGdpdmVuIHN0cmluZyBpbiBJU08gODYwMSBmb3JtYXQgYW5kIHJldHVybiBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEZ1bmN0aW9uIGFjY2VwdHMgY29tcGxldGUgSVNPIDg2MDEgZm9ybWF0cyBhcyB3ZWxsIGFzIHBhcnRpYWwgaW1wbGVtZW50YXRpb25zLlxuICogSVNPIDg2MDE6IGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDFcbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXNuJ3QgYSBzdHJpbmcsIHRoZSBmdW5jdGlvbiBjYW5ub3QgcGFyc2UgdGhlIHN0cmluZyBvclxuICogdGhlIHZhbHVlcyBhcmUgaW52YWxpZCwgaXQgcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGFyZ3VtZW50IC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEBwYXJhbSBvcHRpb25zIC0gQW4gb2JqZWN0IHdpdGggb3B0aW9uc1xuICpcbiAqIEByZXR1cm5zIFRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgc3RyaW5nICcyMDE0LTAyLTExVDExOjMwOjMwJyB0byBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gcGFyc2VJU08oJzIwMTQtMDItMTFUMTE6MzA6MzAnKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCBzdHJpbmcgJyswMjAxNDEwMScgdG8gZGF0ZSxcbiAqIC8vIGlmIHRoZSBhZGRpdGlvbmFsIG51bWJlciBvZiBkaWdpdHMgaW4gdGhlIGV4dGVuZGVkIHllYXIgZm9ybWF0IGlzIDE6XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZUlTTygnKzAyMDE0MTAxJywgeyBhZGRpdGlvbmFsRGlnaXRzOiAxIH0pXG4gKiAvLz0+IEZyaSBBcHIgMTEgMjAxNCAwMDowMDowMFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJU08oYXJndW1lbnQsIG9wdGlvbnMpIHtcbiAgY29uc3QgYWRkaXRpb25hbERpZ2l0cyA9IG9wdGlvbnM/LmFkZGl0aW9uYWxEaWdpdHMgPz8gMjtcbiAgY29uc3QgZGF0ZVN0cmluZ3MgPSBzcGxpdERhdGVTdHJpbmcoYXJndW1lbnQpO1xuXG4gIGxldCBkYXRlO1xuICBpZiAoZGF0ZVN0cmluZ3MuZGF0ZSkge1xuICAgIGNvbnN0IHBhcnNlWWVhclJlc3VsdCA9IHBhcnNlWWVhcihkYXRlU3RyaW5ncy5kYXRlLCBhZGRpdGlvbmFsRGlnaXRzKTtcbiAgICBkYXRlID0gcGFyc2VEYXRlKHBhcnNlWWVhclJlc3VsdC5yZXN0RGF0ZVN0cmluZywgcGFyc2VZZWFyUmVzdWx0LnllYXIpO1xuICB9XG5cbiAgaWYgKCFkYXRlIHx8IGlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgY29uc3QgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gIGxldCB0aW1lID0gMDtcbiAgbGV0IG9mZnNldDtcblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZSkge1xuICAgIHRpbWUgPSBwYXJzZVRpbWUoZGF0ZVN0cmluZ3MudGltZSk7XG4gICAgaWYgKGlzTmFOKHRpbWUpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZXpvbmUpIHtcbiAgICBvZmZzZXQgPSBwYXJzZVRpbWV6b25lKGRhdGVTdHJpbmdzLnRpbWV6b25lKTtcbiAgICBpZiAoaXNOYU4ob2Zmc2V0KSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnN0IGRpcnR5RGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUpO1xuICAgIC8vIEpTIHBhcnNlZCBzdHJpbmcgYXNzdW1pbmcgaXQncyBpbiBVVEMgdGltZXpvbmVcbiAgICAvLyBidXQgd2UgbmVlZCBpdCB0byBiZSBwYXJzZWQgaW4gb3VyIHRpbWV6b25lXG4gICAgLy8gc28gd2UgdXNlIHV0YyB2YWx1ZXMgdG8gYnVpbGQgZGF0ZSBpbiBvdXIgdGltZXpvbmUuXG4gICAgLy8gWWVhciB2YWx1ZXMgZnJvbSAwIHRvIDk5IG1hcCB0byB0aGUgeWVhcnMgMTkwMCB0byAxOTk5XG4gICAgLy8gc28gc2V0IHllYXIgZXhwbGljaXRseSB3aXRoIHNldEZ1bGxZZWFyLlxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBEYXRlKDApO1xuICAgIHJlc3VsdC5zZXRGdWxsWWVhcihcbiAgICAgIGRpcnR5RGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgZGlydHlEYXRlLmdldFVUQ01vbnRoKCksXG4gICAgICBkaXJ0eURhdGUuZ2V0VVRDRGF0ZSgpLFxuICAgICk7XG4gICAgcmVzdWx0LnNldEhvdXJzKFxuICAgICAgZGlydHlEYXRlLmdldFVUQ0hvdXJzKCksXG4gICAgICBkaXJ0eURhdGUuZ2V0VVRDTWludXRlcygpLFxuICAgICAgZGlydHlEYXRlLmdldFVUQ1NlY29uZHMoKSxcbiAgICAgIGRpcnR5RGF0ZS5nZXRVVENNaWxsaXNlY29uZHMoKSxcbiAgICApO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICByZXR1cm4gbmV3IERhdGUodGltZXN0YW1wICsgdGltZSArIG9mZnNldCk7XG59XG5cbmNvbnN0IHBhdHRlcm5zID0ge1xuICBkYXRlVGltZURlbGltaXRlcjogL1tUIF0vLFxuICB0aW1lWm9uZURlbGltaXRlcjogL1taIF0vaSxcbiAgdGltZXpvbmU6IC8oW1orLV0uKikkLyxcbn07XG5cbmNvbnN0IGRhdGVSZWdleCA9XG4gIC9eLT8oPzooXFxkezN9KXwoXFxkezJ9KSg/Oi0/KFxcZHsyfSkpP3xXKFxcZHsyfSkoPzotPyhcXGR7MX0pKT98KSQvO1xuY29uc3QgdGltZVJlZ2V4ID1cbiAgL14oXFxkezJ9KD86Wy4sXVxcZCopPykoPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/KD86Oj8oXFxkezJ9KD86Wy4sXVxcZCopPykpPyQvO1xuY29uc3QgdGltZXpvbmVSZWdleCA9IC9eKFsrLV0pKFxcZHsyfSkoPzo6PyhcXGR7Mn0pKT8kLztcblxuZnVuY3Rpb24gc3BsaXREYXRlU3RyaW5nKGRhdGVTdHJpbmcpIHtcbiAgY29uc3QgZGF0ZVN0cmluZ3MgPSB7fTtcbiAgY29uc3QgYXJyYXkgPSBkYXRlU3RyaW5nLnNwbGl0KHBhdHRlcm5zLmRhdGVUaW1lRGVsaW1pdGVyKTtcbiAgbGV0IHRpbWVTdHJpbmc7XG5cbiAgLy8gVGhlIHJlZ2V4IG1hdGNoIHNob3VsZCBvbmx5IHJldHVybiBhdCBtYXhpbXVtIHR3byBhcnJheSBlbGVtZW50cy5cbiAgLy8gW2RhdGVdLCBbdGltZV0sIG9yIFtkYXRlLCB0aW1lXS5cbiAgaWYgKGFycmF5Lmxlbmd0aCA+IDIpIHtcbiAgICByZXR1cm4gZGF0ZVN0cmluZ3M7XG4gIH1cblxuICBpZiAoLzovLnRlc3QoYXJyYXlbMF0pKSB7XG4gICAgdGltZVN0cmluZyA9IGFycmF5WzBdO1xuICB9IGVsc2Uge1xuICAgIGRhdGVTdHJpbmdzLmRhdGUgPSBhcnJheVswXTtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMV07XG4gICAgaWYgKHBhdHRlcm5zLnRpbWVab25lRGVsaW1pdGVyLnRlc3QoZGF0ZVN0cmluZ3MuZGF0ZSkpIHtcbiAgICAgIGRhdGVTdHJpbmdzLmRhdGUgPSBkYXRlU3RyaW5nLnNwbGl0KHBhdHRlcm5zLnRpbWVab25lRGVsaW1pdGVyKVswXTtcbiAgICAgIHRpbWVTdHJpbmcgPSBkYXRlU3RyaW5nLnN1YnN0cihcbiAgICAgICAgZGF0ZVN0cmluZ3MuZGF0ZS5sZW5ndGgsXG4gICAgICAgIGRhdGVTdHJpbmcubGVuZ3RoLFxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBpZiAodGltZVN0cmluZykge1xuICAgIGNvbnN0IHRva2VuID0gcGF0dGVybnMudGltZXpvbmUuZXhlYyh0aW1lU3RyaW5nKTtcbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nLnJlcGxhY2UodG9rZW5bMV0sIFwiXCIpO1xuICAgICAgZGF0ZVN0cmluZ3MudGltZXpvbmUgPSB0b2tlblsxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGF0ZVN0cmluZ3MudGltZSA9IHRpbWVTdHJpbmc7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRhdGVTdHJpbmdzO1xufVxuXG5mdW5jdGlvbiBwYXJzZVllYXIoZGF0ZVN0cmluZywgYWRkaXRpb25hbERpZ2l0cykge1xuICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgXCJeKD86KFxcXFxkezR9fFsrLV1cXFxcZHtcIiArXG4gICAgICAoNCArIGFkZGl0aW9uYWxEaWdpdHMpICtcbiAgICAgIFwifSl8KFxcXFxkezJ9fFsrLV1cXFxcZHtcIiArXG4gICAgICAoMiArIGFkZGl0aW9uYWxEaWdpdHMpICtcbiAgICAgIFwifSkkKVwiLFxuICApO1xuXG4gIGNvbnN0IGNhcHR1cmVzID0gZGF0ZVN0cmluZy5tYXRjaChyZWdleCk7XG4gIC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB5ZWFyXG4gIGlmICghY2FwdHVyZXMpIHJldHVybiB7IHllYXI6IE5hTiwgcmVzdERhdGVTdHJpbmc6IFwiXCIgfTtcblxuICBjb25zdCB5ZWFyID0gY2FwdHVyZXNbMV0gPyBwYXJzZUludChjYXB0dXJlc1sxXSkgOiBudWxsO1xuICBjb25zdCBjZW50dXJ5ID0gY2FwdHVyZXNbMl0gPyBwYXJzZUludChjYXB0dXJlc1syXSkgOiBudWxsO1xuXG4gIC8vIGVpdGhlciB5ZWFyIG9yIGNlbnR1cnkgaXMgbnVsbCwgbm90IGJvdGhcbiAgcmV0dXJuIHtcbiAgICB5ZWFyOiBjZW50dXJ5ID09PSBudWxsID8geWVhciA6IGNlbnR1cnkgKiAxMDAsXG4gICAgcmVzdERhdGVTdHJpbmc6IGRhdGVTdHJpbmcuc2xpY2UoKGNhcHR1cmVzWzFdIHx8IGNhcHR1cmVzWzJdKS5sZW5ndGgpLFxuICB9O1xufVxuXG5mdW5jdGlvbiBwYXJzZURhdGUoZGF0ZVN0cmluZywgeWVhcikge1xuICAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgeWVhclxuICBpZiAoeWVhciA9PT0gbnVsbCkgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG5cbiAgY29uc3QgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKGRhdGVSZWdleCk7XG4gIC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCBzdHJpbmdcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG5cbiAgY29uc3QgaXNXZWVrRGF0ZSA9ICEhY2FwdHVyZXNbNF07XG4gIGNvbnN0IGRheU9mWWVhciA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMV0pO1xuICBjb25zdCBtb250aCA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMl0pIC0gMTtcbiAgY29uc3QgZGF5ID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1szXSk7XG4gIGNvbnN0IHdlZWsgPSBwYXJzZURhdGVVbml0KGNhcHR1cmVzWzRdKTtcbiAgY29uc3QgZGF5T2ZXZWVrID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1s1XSkgLSAxO1xuXG4gIGlmIChpc1dlZWtEYXRlKSB7XG4gICAgaWYgKCF2YWxpZGF0ZVdlZWtEYXRlKHllYXIsIHdlZWssIGRheU9mV2VlaykpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgICByZXR1cm4gZGF5T2ZJU09XZWVrWWVhcih5ZWFyLCB3ZWVrLCBkYXlPZldlZWspO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgICBpZiAoXG4gICAgICAhdmFsaWRhdGVEYXRlKHllYXIsIG1vbnRoLCBkYXkpIHx8XG4gICAgICAhdmFsaWRhdGVEYXlPZlllYXJEYXRlKHllYXIsIGRheU9mWWVhcilcbiAgICApIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKHllYXIsIG1vbnRoLCBNYXRoLm1heChkYXlPZlllYXIsIGRheSkpO1xuICAgIHJldHVybiBkYXRlO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF0ZVVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID8gcGFyc2VJbnQodmFsdWUpIDogMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VUaW1lKHRpbWVTdHJpbmcpIHtcbiAgY29uc3QgY2FwdHVyZXMgPSB0aW1lU3RyaW5nLm1hdGNoKHRpbWVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiBOYU47IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCB0aW1lXG5cbiAgY29uc3QgaG91cnMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzFdKTtcbiAgY29uc3QgbWludXRlcyA9IHBhcnNlVGltZVVuaXQoY2FwdHVyZXNbMl0pO1xuICBjb25zdCBzZWNvbmRzID0gcGFyc2VUaW1lVW5pdChjYXB0dXJlc1szXSk7XG5cbiAgaWYgKCF2YWxpZGF0ZVRpbWUoaG91cnMsIG1pbnV0ZXMsIHNlY29uZHMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgaG91cnMgKiBtaWxsaXNlY29uZHNJbkhvdXIgKyBtaW51dGVzICogbWlsbGlzZWNvbmRzSW5NaW51dGUgKyBzZWNvbmRzICogMTAwMFxuICApO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWVVbml0KHZhbHVlKSB7XG4gIHJldHVybiAodmFsdWUgJiYgcGFyc2VGbG9hdCh2YWx1ZS5yZXBsYWNlKFwiLFwiLCBcIi5cIikpKSB8fCAwO1xufVxuXG5mdW5jdGlvbiBwYXJzZVRpbWV6b25lKHRpbWV6b25lU3RyaW5nKSB7XG4gIGlmICh0aW1lem9uZVN0cmluZyA9PT0gXCJaXCIpIHJldHVybiAwO1xuXG4gIGNvbnN0IGNhcHR1cmVzID0gdGltZXpvbmVTdHJpbmcubWF0Y2godGltZXpvbmVSZWdleCk7XG4gIGlmICghY2FwdHVyZXMpIHJldHVybiAwO1xuXG4gIGNvbnN0IHNpZ24gPSBjYXB0dXJlc1sxXSA9PT0gXCIrXCIgPyAtMSA6IDE7XG4gIGNvbnN0IGhvdXJzID0gcGFyc2VJbnQoY2FwdHVyZXNbMl0pO1xuICBjb25zdCBtaW51dGVzID0gKGNhcHR1cmVzWzNdICYmIHBhcnNlSW50KGNhcHR1cmVzWzNdKSkgfHwgMDtcblxuICBpZiAoIXZhbGlkYXRlVGltZXpvbmUoaG91cnMsIG1pbnV0ZXMpKSB7XG4gICAgcmV0dXJuIE5hTjtcbiAgfVxuXG4gIHJldHVybiBzaWduICogKGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlKTtcbn1cblxuZnVuY3Rpb24gZGF5T2ZJU09XZWVrWWVhcihpc29XZWVrWWVhciwgd2VlaywgZGF5KSB7XG4gIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihpc29XZWVrWWVhciwgMCwgNCk7XG4gIGNvbnN0IGZvdXJ0aE9mSmFudWFyeURheSA9IGRhdGUuZ2V0VVRDRGF5KCkgfHwgNztcbiAgY29uc3QgZGlmZiA9ICh3ZWVrIC0gMSkgKiA3ICsgZGF5ICsgMSAtIGZvdXJ0aE9mSmFudWFyeURheTtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgZGlmZik7XG4gIHJldHVybiBkYXRlO1xufVxuXG4vLyBWYWxpZGF0aW9uIGZ1bmN0aW9uc1xuXG4vLyBGZWJydWFyeSBpcyBudWxsIHRvIGhhbmRsZSB0aGUgbGVhcCB5ZWFyICh1c2luZyB8fClcbmNvbnN0IGRheXNJbk1vbnRocyA9IFszMSwgbnVsbCwgMzEsIDMwLCAzMSwgMzAsIDMxLCAzMSwgMzAsIDMxLCAzMCwgMzFdO1xuXG5mdW5jdGlvbiBpc0xlYXBZZWFySW5kZXgoeWVhcikge1xuICByZXR1cm4geWVhciAlIDQwMCA9PT0gMCB8fCAoeWVhciAlIDQgPT09IDAgJiYgeWVhciAlIDEwMCAhPT0gMCk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF0ZSkge1xuICByZXR1cm4gKFxuICAgIG1vbnRoID49IDAgJiZcbiAgICBtb250aCA8PSAxMSAmJlxuICAgIGRhdGUgPj0gMSAmJlxuICAgIGRhdGUgPD0gKGRheXNJbk1vbnRoc1ttb250aF0gfHwgKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDI5IDogMjgpKVxuICApO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSB7XG4gIHJldHVybiBkYXlPZlllYXIgPj0gMSAmJiBkYXlPZlllYXIgPD0gKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDM2NiA6IDM2NSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlV2Vla0RhdGUoX3llYXIsIHdlZWssIGRheSkge1xuICByZXR1cm4gd2VlayA+PSAxICYmIHdlZWsgPD0gNTMgJiYgZGF5ID49IDAgJiYgZGF5IDw9IDY7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICBpZiAoaG91cnMgPT09IDI0KSB7XG4gICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgJiYgc2Vjb25kcyA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgc2Vjb25kcyA+PSAwICYmXG4gICAgc2Vjb25kcyA8IDYwICYmXG4gICAgbWludXRlcyA+PSAwICYmXG4gICAgbWludXRlcyA8IDYwICYmXG4gICAgaG91cnMgPj0gMCAmJlxuICAgIGhvdXJzIDwgMjVcbiAgKTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVUaW1lem9uZShfaG91cnMsIG1pbnV0ZXMpIHtcbiAgcmV0dXJuIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDw9IDU5O1xufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHBhcnNlSVNPO1xuIiwiLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHR5cGVQYXJhbSBEYXRlVHlwZSAtIFRoZSBgRGF0ZWAgdHlwZSwgdGhlIGZ1bmN0aW9uIG9wZXJhdGVzIG9uLiBHZXRzIGluZmVycmVkIGZyb20gcGFzc2VkIGFyZ3VtZW50cy4gQWxsb3dzIHRvIHVzZSBleHRlbnNpb25zIGxpa2UgW2BVVENEYXRlYF0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL3V0YykuXG4gKlxuICogQHBhcmFtIGFyZ3VtZW50IC0gVGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIGRhdGUgaW4gdGhlIGxvY2FsIHRpbWUgem9uZVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDbG9uZSB0aGUgZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZShuZXcgRGF0ZSgyMDE0LCAxLCAxMSwgMTEsIDMwLCAzMCkpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHRoZSB0aW1lc3RhbXAgdG8gZGF0ZTpcbiAqIGNvbnN0IHJlc3VsdCA9IHRvRGF0ZSgxMzkyMDk4NDMwMDAwKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvRGF0ZShhcmd1bWVudCkge1xuICBjb25zdCBhcmdTdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJndW1lbnQpO1xuXG4gIC8vIENsb25lIHRoZSBkYXRlXG4gIGlmIChcbiAgICBhcmd1bWVudCBpbnN0YW5jZW9mIERhdGUgfHxcbiAgICAodHlwZW9mIGFyZ3VtZW50ID09PSBcIm9iamVjdFwiICYmIGFyZ1N0ciA9PT0gXCJbb2JqZWN0IERhdGVdXCIpXG4gICkge1xuICAgIC8vIFByZXZlbnQgdGhlIGRhdGUgdG8gbG9zZSB0aGUgbWlsbGlzZWNvbmRzIHdoZW4gcGFzc2VkIHRvIG5ldyBEYXRlKCkgaW4gSUUxMFxuICAgIHJldHVybiBuZXcgYXJndW1lbnQuY29uc3RydWN0b3IoK2FyZ3VtZW50KTtcbiAgfSBlbHNlIGlmIChcbiAgICB0eXBlb2YgYXJndW1lbnQgPT09IFwibnVtYmVyXCIgfHxcbiAgICBhcmdTdHIgPT09IFwiW29iamVjdCBOdW1iZXJdXCIgfHxcbiAgICB0eXBlb2YgYXJndW1lbnQgPT09IFwic3RyaW5nXCIgfHxcbiAgICBhcmdTdHIgPT09IFwiW29iamVjdCBTdHJpbmddXCJcbiAgKSB7XG4gICAgLy8gVE9ETzogQ2FuIHdlIGdldCByaWQgb2YgYXM/XG4gICAgcmV0dXJuIG5ldyBEYXRlKGFyZ3VtZW50KTtcbiAgfSBlbHNlIHtcbiAgICAvLyBUT0RPOiBDYW4gd2UgZ2V0IHJpZCBvZiBhcz9cbiAgICByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgfVxufVxuXG4vLyBGYWxsYmFjayBmb3IgbW9kdWxhcml6ZWQgaW1wb3J0czpcbmV4cG9ydCBkZWZhdWx0IHRvRGF0ZTtcbiIsImltcG9ydCB7IHRvRGF0ZSB9IGZyb20gXCIuL3RvRGF0ZS5tanNcIjtcblxuLyoqXG4gKiBAbmFtZSBjb21wYXJlQXNjXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IENvbXBhcmUgdGhlIHR3byBkYXRlcyBhbmQgcmV0dXJuIC0xLCAwIG9yIDEuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDb21wYXJlIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybiAxIGlmIHRoZSBmaXJzdCBkYXRlIGlzIGFmdGVyIHRoZSBzZWNvbmQsXG4gKiAtMSBpZiB0aGUgZmlyc3QgZGF0ZSBpcyBiZWZvcmUgdGhlIHNlY29uZCBvciAwIGlmIGRhdGVzIGFyZSBlcXVhbC5cbiAqXG4gKiBAdHlwZVBhcmFtIERhdGVUeXBlIC0gVGhlIGBEYXRlYCB0eXBlLCB0aGUgZnVuY3Rpb24gb3BlcmF0ZXMgb24uIEdldHMgaW5mZXJyZWQgZnJvbSBwYXNzZWQgYXJndW1lbnRzLiBBbGxvd3MgdG8gdXNlIGV4dGVuc2lvbnMgbGlrZSBbYFVUQ0RhdGVgXShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvdXRjKS5cbiAqXG4gKiBAcGFyYW0gZGF0ZUxlZnQgLSBUaGUgZmlyc3QgZGF0ZSB0byBjb21wYXJlXG4gKiBAcGFyYW0gZGF0ZVJpZ2h0IC0gVGhlIHNlY29uZCBkYXRlIHRvIGNvbXBhcmVcbiAqXG4gKiBAcmV0dXJucyBUaGUgcmVzdWx0IG9mIHRoZSBjb21wYXJpc29uXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbXBhcmUgMTEgRmVicnVhcnkgMTk4NyBhbmQgMTAgSnVseSAxOTg5OlxuICogY29uc3QgcmVzdWx0ID0gY29tcGFyZUFzYyhuZXcgRGF0ZSgxOTg3LCAxLCAxMSksIG5ldyBEYXRlKDE5ODksIDYsIDEwKSlcbiAqIC8vPT4gLTFcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU29ydCB0aGUgYXJyYXkgb2YgZGF0ZXM6XG4gKiBjb25zdCByZXN1bHQgPSBbXG4gKiAgIG5ldyBEYXRlKDE5OTUsIDYsIDIpLFxuICogICBuZXcgRGF0ZSgxOTg3LCAxLCAxMSksXG4gKiAgIG5ldyBEYXRlKDE5ODksIDYsIDEwKVxuICogXS5zb3J0KGNvbXBhcmVBc2MpXG4gKiAvLz0+IFtcbiAqIC8vICAgV2VkIEZlYiAxMSAxOTg3IDAwOjAwOjAwLFxuICogLy8gICBNb24gSnVsIDEwIDE5ODkgMDA6MDA6MDAsXG4gKiAvLyAgIFN1biBKdWwgMDIgMTk5NSAwMDowMDowMFxuICogLy8gXVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZUFzYyhkYXRlTGVmdCwgZGF0ZVJpZ2h0KSB7XG4gIGNvbnN0IF9kYXRlTGVmdCA9IHRvRGF0ZShkYXRlTGVmdCk7XG4gIGNvbnN0IF9kYXRlUmlnaHQgPSB0b0RhdGUoZGF0ZVJpZ2h0KTtcblxuICBjb25zdCBkaWZmID0gX2RhdGVMZWZ0LmdldFRpbWUoKSAtIF9kYXRlUmlnaHQuZ2V0VGltZSgpO1xuXG4gIGlmIChkaWZmIDwgMCkge1xuICAgIHJldHVybiAtMTtcbiAgfSBlbHNlIGlmIChkaWZmID4gMCkge1xuICAgIHJldHVybiAxO1xuICAgIC8vIFJldHVybiAwIGlmIGRpZmYgaXMgMDsgcmV0dXJuIE5hTiBpZiBkaWZmIGlzIE5hTlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBkaWZmO1xuICB9XG59XG5cbi8vIEZhbGxiYWNrIGZvciBtb2R1bGFyaXplZCBpbXBvcnRzOlxuZXhwb3J0IGRlZmF1bHQgY29tcGFyZUFzYztcbiIsIi8vICogREVQRU5ERU5DSUVTXG5pbXBvcnQgeyBwYXJzZUlTTywgY29tcGFyZUFzYyB9IGZyb20gJ2RhdGUtZm5zJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBsaW5rT2JqZWN0RmFjdG9yeShuYW1lLCBkYXRhKSB7XG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHRhc2tzOiBkYXRhLCAvLyA/IGFsbCB0YXNrcyAoYXJyYXkpLFxuICAgIHR5cGU6ICdsaW5rJyxcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGdldE5hbWU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5uYW1lO1xuICAgIH0sXG4gICAgZ2V0VHlwZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLnR5cGU7XG4gICAgfSxcbiAgICBnZXRTaGFsbG93Q29weTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHsgLi4uc3RhdGUgfTtcbiAgICB9LFxuICAgIHNvcnRUYXNrQXJyYXk6ICgpID0+IHtcbiAgICAgIGNvbnN0IHRhc2tBcnJheSA9IHN0YXRlLnRhc2tzO1xuXG4gICAgICB0YXNrQXJyYXkuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAvLyAqIGNhbGxiYWNrIGlzIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgZGF0ZSBzdHJpbmdcblxuICAgICAgICBjb25zdCBkYXRlU3RyaW5nQSA9IGEuZ2V0RHVlRGF0ZSgpO1xuICAgICAgICBjb25zdCBkYXRlU3RyaW5nQiA9IGIuZ2V0RHVlRGF0ZSgpO1xuXG4gICAgICAgIC8vICogcGFyc2VJU08gY29udmVydHMgdGhlIGRhdGUgc3RyaW5nIGludG8gYSBEYXRlIG9iamVjdFxuICAgICAgICBjb25zdCBkYXRlQSA9IHBhcnNlSVNPKGRhdGVTdHJpbmdBKTtcbiAgICAgICAgY29uc3QgZGF0ZUIgPSBwYXJzZUlTTyhkYXRlU3RyaW5nQik7XG5cbiAgICAgICAgLy8gKiBjb21wYXJlQXNjIGNvbXBhcmVzIHRoZSB0d28gZGF0ZXMgYW5kIHJldHVybnMgYSBudW1iZXJcbiAgICAgICAgcmV0dXJuIGNvbXBhcmVBc2MoZGF0ZUEsIGRhdGVCKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VGFza0FycmF5OiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUudGFza3M7XG4gICAgfSxcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvamVjdEZhY3RvcnkobmFtZSkge1xuICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCduYW1lIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHRhc2tzOiBbXSxcbiAgICB0eXBlOiAncHJvamVjdCcsXG4gIH07XG5cbiAgcmV0dXJuIHtcbiAgICBnZXROYW1lOiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUubmFtZTtcbiAgICB9LFxuICAgIHNldE5hbWU6IChuYW1lKSA9PiB7XG4gICAgICBzdGF0ZS5uYW1lID0gbmFtZTtcbiAgICB9LFxuICAgIGdldFR5cGU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS50eXBlO1xuICAgIH0sXG4gICAgYWRkVGFzazogZnVuY3Rpb24gKHRhc2spIHtcbiAgICAgIHN0YXRlLnRhc2tzLnB1c2godGFzayk7XG4gICAgfSxcbiAgICBzb3J0VGFza0FycmF5OiAoKSA9PiB7XG4gICAgICBjb25zdCB0YXNrQXJyYXkgPSBzdGF0ZS50YXNrcztcblxuICAgICAgdGFza0FycmF5LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgLy8gKiBjYWxsYmFjayBpcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGRhdGUgc3RyaW5nXG5cbiAgICAgICAgY29uc3QgZGF0ZVN0cmluZ0EgPSBhLmdldER1ZURhdGUoKTtcbiAgICAgICAgY29uc3QgZGF0ZVN0cmluZ0IgPSBiLmdldER1ZURhdGUoKTtcblxuICAgICAgICAvLyAqIHBhcnNlSVNPIGNvbnZlcnRzIHRoZSBkYXRlIHN0cmluZyBpbnRvIGEgRGF0ZSBvYmplY3RcbiAgICAgICAgY29uc3QgZGF0ZUEgPSBwYXJzZUlTTyhkYXRlU3RyaW5nQSk7XG4gICAgICAgIGNvbnN0IGRhdGVCID0gcGFyc2VJU08oZGF0ZVN0cmluZ0IpO1xuXG4gICAgICAgIC8vICogY29tcGFyZUFzYyBjb21wYXJlcyB0aGUgdHdvIGRhdGVzIGFuZCByZXR1cm5zIGEgbnVtYmVyXG4gICAgICAgIHJldHVybiBjb21wYXJlQXNjKGRhdGVBLCBkYXRlQik7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldFRhc2tBcnJheTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLnRhc2tzO1xuICAgIH0sXG4gIH07XG59XG5cbi8vIFRPRE86OiBjb21iaW5lIGxpbmsgb2JqZWN0IGZhY3RvcnkgYW5kIHByb2plY3QgZmFjdG9yeSBtYXliZT9cblxuZnVuY3Rpb24gdGFza0ZhY3RvcnkobmFtZSwgcHJvamVjdE5hbWUsIGR1ZURhdGUsIGRldGFpbHMpIHtcbiAgaWYgKFxuICAgIHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJyAmJlxuICAgIHR5cGVvZiBkZXRhaWxzICE9PSAnc3RyaW5nJyAmJlxuICAgIHR5cGVvZiBkdWVEYXRlICE9PSAnc3RyaW5nJ1xuICApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ+KaoO+4jyBuYW1lLCBkZXRhaWxzICYgZHVlLWRhdGUsIG11c3QgYWxsIGJlIHN0cmluZ3MnKTtcbiAgfVxuXG4gIGxldCBzdGF0ZSA9IHtcbiAgICBuYW1lOiBuYW1lLFxuICAgIHByb2plY3ROYW1lOiBwcm9qZWN0TmFtZSxcbiAgICBkdWVEYXRlOiBkdWVEYXRlLFxuICAgIGRldGFpbHM6IGRldGFpbHMsXG4gICAgcHJpb3JpdHk6IGZhbHNlLFxuICAgIGNvbXBsZXRlZDogZmFsc2UsXG4gIH07XG4gIHJldHVybiB7XG4gICAgZ2V0TmFtZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIHN0YXRlLm5hbWU7XG4gICAgfSxcbiAgICBzZXROYW1lOiAobmFtZSkgPT4ge1xuICAgICAgc3RhdGUubmFtZSA9IG5hbWU7XG4gICAgfSxcbiAgICBnZXREZXRhaWxzOiAoKSA9PiB7XG4gICAgICByZXR1cm4gc3RhdGUuZGV0YWlscztcbiAgICB9LFxuICAgIHNldERldGFpbHM6IChkZXRhaWxzKSA9PiB7XG4gICAgICBzdGF0ZS5kZXRhaWxzID0gZGV0YWlscztcbiAgICB9LFxuICAgIGdldER1ZURhdGU6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5kdWVEYXRlO1xuICAgIH0sXG4gICAgc2V0RHVlRGF0ZTogKGR1ZURhdGUpID0+IHtcbiAgICAgIHN0YXRlLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgIH0sXG4gICAgZ2V0UHJpb3JpdHk6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5wcmlvcml0eTtcbiAgICB9LFxuICAgIHNldFByaW9yaXR5OiAocHJpb3JpdHkpID0+IHtcbiAgICAgIHN0YXRlLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgfSxcbiAgICBnZXRDb21wbGV0ZWQ6ICgpID0+IHtcbiAgICAgIHJldHVybiBzdGF0ZS5jb21wbGV0ZWQ7XG4gICAgfSxcbiAgICBzZXRDb21wbGV0ZWQ6IChib29sZWFuKSA9PiB7XG4gICAgICBzdGF0ZS5jb21wbGV0ZWQgPSBib29sZWFuO1xuICAgIH0sXG4gICAgc2V0UHJvamVjdE5hbWU6IGZ1bmN0aW9uIChwcm9qZWN0TmFtZSkge1xuICAgICAgc3RhdGUucHJvamVjdCA9IHByb2plY3ROYW1lO1xuICAgIH0sXG4gICAgZ2V0UHJvamVjdE5hbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBzdGF0ZS5wcm9qZWN0TmFtZTtcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgeyBwcm9qZWN0RmFjdG9yeSwgdGFza0ZhY3RvcnksIGxpbmtPYmplY3RGYWN0b3J5IH07XG4iLCJleHBvcnQgY29uc3QgU0hPV19OQVZfRVZFTlQgPSAnc2hvd05hdic7XG5leHBvcnQgY29uc3QgSElERV9OQVZfRVZFTlQgPSAnaGlkZU5hdic7XG5cbmV4cG9ydCBjb25zdCBUT0dHTEVfQUREX1BST0pFQ1RfRk9STSA9ICd0b2dnbGVBZGRQcm9qZWN0Rm9ybSc7XG5leHBvcnQgY29uc3QgVE9HR0xFX0FERF9UQVNLX0ZPUk0gPSAndG9nZ2VsQWRkVGFza0Zvcm0nO1xuZXhwb3J0IGNvbnN0IFRPR0dMRV9FRElUX1RBU0tfRk9STSA9ICd0b2dnbGVFZGl0VGFza0Zvcm0nO1xuXG5leHBvcnQgY29uc3QgQUREX05FV19QUk9KRUNUID0gJ2FkZE5ld1Byb2plY3QnO1xuZXhwb3J0IGNvbnN0IEFERF9ORVdfVEFTSyA9ICdhZGROZXdUYXNrJztcblxuZXhwb3J0IGNvbnN0IEhBTkRMRV9NQUlOID0gJ2hhbmRsZU1haW4nOyIsIi8vICogREFUQVxuaW1wb3J0IHsgZGF0YSB9IGZyb20gJy4uL2RhdGEnO1xuXG4vLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0RWRpdFRhc2tGb3JtVmlzaWJpbGl0eVRvZ2dsZSB9IGZyb20gJy4vaGFuZGxlLXRhc2staXRlbXMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHRvZ2dsZVN0YXJJY29uKHByaW9yaXR5QnV0dG9uLCBpc1ByaW9yaXR5KSB7XG4gIGlmIChpc1ByaW9yaXR5ID09PSAnZmFsc2UnKSB7XG4gICAgcHJpb3JpdHlCdXR0b24uc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAndHJ1ZScpO1xuICB9IGVsc2UgaWYgKGlzUHJpb3JpdHkgPT09ICd0cnVlJykge1xuICAgIHByaW9yaXR5QnV0dG9uLnNldEF0dHJpYnV0ZSgnZGF0YS1jaGVja2VkJywgJ2ZhbHNlJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza1ByaW9yaXR5KHByaW9yaXR5QnV0dG9uLCB0YXNrT2JqZWN0KSB7XG4gIGNvbnN0IGlzUHJpb3JpdHkgPSBwcmlvcml0eUJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2RhdGEtY2hlY2tlZCcpO1xuXG4gIHRvZ2dsZVN0YXJJY29uKHByaW9yaXR5QnV0dG9uLCBpc1ByaW9yaXR5KTtcblxuICBpZiAoaXNQcmlvcml0eSA9PT0gJ2ZhbHNlJykge1xuICAgIHRhc2tPYmplY3Quc2V0UHJpb3JpdHkodHJ1ZSk7XG4gIH0gZWxzZSBpZiAoaXNQcmlvcml0eSA9PT0gJ3RydWUnKSB7XG4gICAgdGFza09iamVjdC5zZXRQcmlvcml0eShmYWxzZSk7XG4gIH1cbn1cblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBnZXRUYXNrT2JqZWN0KHRhc2tOYW1lKSB7XG4gIGNvbnN0IGFsbFRhc2tzID0gZGF0YS5nZXRBbGxUYXNrcygpO1xuICBjb25zdCB0YXNrT2JqZWN0ID0gYWxsVGFza3MuZmluZCgodGFzaykgPT4gdGFzay5nZXROYW1lKCkgPT09IHRhc2tOYW1lKTtcblxuICByZXR1cm4gdGFza09iamVjdDtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza0NvbXBsZXRpb24oY2hlY2tib3gsIHRhc2tPYmplY3QpIHtcbiAgY29uc3QgaXNDaGVja2VkID0gY2hlY2tib3guY2hlY2tlZDtcblxuICBpZiAoaXNDaGVja2VkID09PSB0cnVlKSB7XG4gICAgdGFza09iamVjdC5zZXRDb21wbGV0ZWQodHJ1ZSk7XG4gICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAndHJ1ZScpO1xuICB9IGVsc2UgaWYgKGlzQ2hlY2tlZCA9PT0gZmFsc2UpIHtcbiAgICB0YXNrT2JqZWN0LnNldENvbXBsZXRlZChmYWxzZSk7XG4gICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCAnZmFsc2UnKTtcbiAgfVxufVxuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGhhbmRsZVRhc2tJdGVtSW50ZXJhY3RhYmxlcyhldmVudCkge1xuICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gIGNvbnN0IHRhcmdldFRhZ05hbWUgPSB0YXJnZXQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICh0YXJnZXRUYWdOYW1lICE9PSAnYnV0dG9uJyAmJiB0YXJnZXRUYWdOYW1lICE9PSAnaW5wdXQnKSByZXR1cm47XG5cbiAgY29uc3QgdGFza0l0ZW0gPSB0YXJnZXQuY2xvc2VzdCgnLnRhc2staXRlbScpO1xuICBpZiAoIXRhc2tJdGVtKSByZXR1cm47XG5cbiAgY29uc3QgdGFza05hbWUgPSB0YXNrSXRlbVxuICAgIC5xdWVyeVNlbGVjdG9yKCcudGFzay1pdGVtLXRpdGxlJylcbiAgICAudGV4dENvbnRlbnQudG9Mb3dlckNhc2UoKTtcbiAgXG4gIGNvbnN0IGNvcnJlc3BvbmRpbmdUYXNrT2JqZWN0ID0gZ2V0VGFza09iamVjdCh0YXNrTmFtZSk7XG5cbiAgY29uc3QgaGFuZGxlcnMgPSB7XG4gICAgJ3Rhc2staXRlbS1jaGVja2JveCc6ICgpID0+IHRvZ2dsZVRhc2tDb21wbGV0aW9uKHRhcmdldCwgY29ycmVzcG9uZGluZ1Rhc2tPYmplY3QpLFxuICAgICd0YXNrLXByaW9yaXR5LXN0YXItYnV0dG9uJzogKCkgPT4gdG9nZ2xlVGFza1ByaW9yaXR5KHRhcmdldCwgY29ycmVzcG9uZGluZ1Rhc2tPYmplY3QpLFxuICAgICdtb2RpZnktdGFzay1idXR0b24nOiAoKSA9PiBlbWl0RWRpdFRhc2tGb3JtVmlzaWJpbGl0eVRvZ2dsZShjb3JyZXNwb25kaW5nVGFza09iamVjdCksXG4gIH07XG5cbiAgY29uc3QgaGFuZGxlciA9IGhhbmRsZXJzW3RhcmdldC5jbGFzc05hbWVdO1xuICBpZiAoaGFuZGxlcikgaGFuZGxlcigpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVUYXNrSXRlbUludGVyYWN0YWJsZXMsIGVtaXRFZGl0VGFza0Zvcm1WaXNpYmlsaXR5VG9nZ2xlLCBnZXRUYXNrT2JqZWN0IH07IiwiZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhlbGVtZW50LCBhdHRyaWJ1dGVzKSB7XG4gIGZvciAoY29uc3Qga2V5IGluIGF0dHJpYnV0ZXMpIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgc2V0QXR0cmlidXRlcyB9OyIsIi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVUYXNrSXRlbSB9IGZyb20gJy4vY3JlYXRlLXRhc2staXRlbS5qcyc7XG5pbXBvcnQgeyBjcmVhdGVUYXNrTGlzdFBsYWNlaG9sZGVyIH0gZnJvbSAnLi9jcmVhdGUtdGFzay1saXN0LXBsYWNlaG9sZGVyLmpzJ1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBnZXRUYXNrTGlzdENvbnRlbnQobWFpblVwZGF0ZU9iamVjdCkge1xuY29uc3QgdGFza0FycmF5ID0gbWFpblVwZGF0ZU9iamVjdC5nZXRUYXNrQXJyYXkoKTtcbiAgY29uc3QgbWFpblVwZGF0ZU9iamVjdFR5cGUgPSBtYWluVXBkYXRlT2JqZWN0LmdldFR5cGUoKTsgXG4gIFxuICBpZiAodGFza0FycmF5Lmxlbmd0aCA9PT0gMCAmJiBtYWluVXBkYXRlT2JqZWN0VHlwZSA9PT0gJ2xpbmsnKSB7XG4gICAgY29uc3QgdGFza0xpc3RQbGFjZWhvbGRlciA9IGNyZWF0ZVRhc2tMaXN0UGxhY2Vob2xkZXIoKTtcblxuICAgIHJldHVybiB0YXNrTGlzdFBsYWNlaG9sZGVyXG5cbiAgfSBlbHNlIGlmICh0YXNrQXJyYXkubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IHRhc2tMaXN0RnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG5cbiAgICBpZiAodGFza0FycmF5Lmxlbmd0aCA+IDEpIG1haW5VcGRhdGVPYmplY3Quc29ydFRhc2tBcnJheSgpO1xuICAgIFxuICAgIHRhc2tBcnJheS5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICB0YXNrTGlzdEZyYWdtZW50LmFwcGVuZENoaWxkKGNyZWF0ZVRhc2tJdGVtKHRhc2spKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB0YXNrTGlzdEZyYWdtZW50O1xuICB9IGVsc2Uge1xuICAgIHJldHVyblxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVRhc2tMaXN0KG1haW5VcGRhdGVPYmplY3QpIHtcbiAgY29uc3QgdGFza0xpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICB0YXNrTGlzdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2stbGlzdCcpO1xuXG4gIGNvbnN0IHRhc2tMaXN0Q29udGVudCA9IGdldFRhc2tMaXN0Q29udGVudChtYWluVXBkYXRlT2JqZWN0KTtcblxuICBpZiAodGFza0xpc3RDb250ZW50KSB7XG4gICAgdGFza0xpc3QuYXBwZW5kQ2hpbGQodGFza0xpc3RDb250ZW50KTtcbiAgfVxuXG4gIHJldHVybiB0YXNrTGlzdDtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGFza0xpc3QgfTsiLCJmdW5jdGlvbiBjcmVhdGVUYXNrTGlzdFBsYWNlaG9sZGVyKCkge1xuICBjb25zdCBwbGFjZWhvbGRlclRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIHBsYWNlaG9sZGVyVGV4dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3BsYWNlaG9sZGVyLXRleHQnKTtcbiAgcGxhY2Vob2xkZXJUZXh0LmNsYXNzTGlzdC5hZGQoJ2h2ci13b2JibGUtdmVydGljYWwnKTtcbiAgcGxhY2Vob2xkZXJUZXh0LnRleHRDb250ZW50ID0gJ2NyZWF0ZSBhIHByb2plY3QgaW4gdGhlIGFib3ZlIG1lbnUnO1xuXG4gIGNvbnN0IHBsYWNlaG9sZGVyQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgcGxhY2Vob2xkZXJDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdwbGFjZWhvbGRlci1jb250YWluZXInKTtcbiAgcGxhY2Vob2xkZXJDb250YWluZXIuYXBwZW5kQ2hpbGQocGxhY2Vob2xkZXJUZXh0KTtcblxuICByZXR1cm4gcGxhY2Vob2xkZXJDb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVRhc2tMaXN0UGxhY2Vob2xkZXIgfTtcbiIsIi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9mb3JtYXQtZGF0ZVwiO1xuaW1wb3J0IHsgc2V0QXR0cmlidXRlcyB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXNcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVUYXNrSXRlbSh0YXNrT2JqZWN0KSB7XG4gIGNvbnN0IHRhc2tUaXRsZSA9ICh0YXNrT2JqZWN0LmdldE5hbWUoKSkudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgdGFza0RldGFpbHMgPSB0YXNrT2JqZWN0LmdldERldGFpbHMoKTtcbiAgY29uc3QgdGFza0R1ZURhdGUgPSB0YXNrT2JqZWN0LmdldER1ZURhdGUoKTtcbiAgY29uc3QgaXNUYXNrQ29tcGxldGUgPSB0YXNrT2JqZWN0LmdldENvbXBsZXRlZCgpO1xuICBjb25zdCBpc1Rhc2tQcmlvcml0eSA9IHRhc2tPYmplY3QuZ2V0UHJpb3JpdHkoKTtcblxuICBjb25zdCB0YXNrQ2hlY2tCb3hDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza0NoZWNrQm94Q29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Rhc2stY2hlY2tib3gtY29udGFpbmVyJyk7XG5cbiAgY29uc3QgdGFza0l0ZW1DaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIHRhc2tJdGVtQ2hlY2tib3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG4gIHRhc2tJdGVtQ2hlY2tib3guc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCBpc1Rhc2tDb21wbGV0ZSA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICBpc1Rhc2tDb21wbGV0ZSA/IHRhc2tJdGVtQ2hlY2tib3guY2hlY2tlZCA9IHRydWUgOiB0YXNrSXRlbUNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcblxuICB0YXNrSXRlbUNoZWNrYm94LmNsYXNzTGlzdC5hZGQoJ3Rhc2staXRlbS1jaGVja2JveCcpO1xuICB0YXNrQ2hlY2tCb3hDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0l0ZW1DaGVja2JveCk7XG5cbiAgY29uc3QgdGFza0l0ZW1UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XG4gIHRhc2tJdGVtVGl0bGUuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLXRpdGxlJyk7XG4gIHRhc2tJdGVtVGl0bGUudGV4dENvbnRlbnQgPSB0YXNrVGl0bGU7XG5cbiAgY29uc3QgdGFza0l0ZW1EZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICB0YXNrSXRlbURldGFpbHMuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLWRldGFpbHMnKTtcbiAgdGFza0l0ZW1EZXRhaWxzLnRleHRDb250ZW50ID0gdGFza0RldGFpbHM7XG5cbiAgY29uc3QgdGFza0l0ZW1EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICB0YXNrSXRlbURhdGUuY2xhc3NMaXN0LmFkZCgndGFzay1pdGVtLWRhdGUnKTtcbiAgdGFza0l0ZW1EYXRlLnRleHRDb250ZW50ID0gYER1ZSAke2Zvcm1hdERhdGUodGFza0R1ZURhdGUpfWA7XG5cbiAgY29uc3QgdGFza1ByaW9yaXR5U3Rhckljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHRhc2tQcmlvcml0eVN0YXJJY29uLmNsYXNzTGlzdC5hZGQoJ3Rhc2stcHJpb3JpdHktc3Rhci1pY29uJywgJ21hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWQnKTtcbiAgdGFza1ByaW9yaXR5U3Rhckljb24udGV4dENvbnRlbnQgPSAnc3Rhcic7XG5cbiAgY29uc3QgdGFza1ByaW9yaXR5U3RhckJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICB0YXNrUHJpb3JpdHlTdGFyQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3Rhc2stcHJpb3JpdHktc3Rhci1idXR0b24nKTsgXG4gIHNldEF0dHJpYnV0ZXModGFza1ByaW9yaXR5U3RhckJ1dHRvbiwge1xuICAgICdhcmlhLWxhYmVsJzogJ1ByaW9yaXRpemUgVGFzaycsXG4gICAgJ3R5cGUnOiAnYnV0dG9uJyxcbiAgICAnZGF0YS1jaGVja2VkJzogaXNUYXNrUHJpb3JpdHkgPyAndHJ1ZScgOiAnZmFsc2UnLFxuICB9KTtcbiAgdGFza1ByaW9yaXR5U3RhckJ1dHRvbi5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHlTdGFySWNvbik7XG5cbiAgY29uc3QgbW9kaWZ5VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBtb2RpZnlUYXNrQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21vZGlmeS10YXNrLWJ1dHRvbicpO1xuICBtb2RpZnlUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgbW9kaWZ5VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnRWRpdCBUYXNrJyk7XG5cbiAgY29uc3QgbW9kaWZ5VGFza0J1dHRvbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XG4gIG1vZGlmeVRhc2tCdXR0b25JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLWVsbGlwc2lzLXZlcnRpY2FsJyk7XG4gIG1vZGlmeVRhc2tCdXR0b24uYXBwZW5kQ2hpbGQobW9kaWZ5VGFza0J1dHRvbkljb24pO1xuXG4gIGNvbnN0IHRhc2tCdXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza0J1dHRvbkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrLWl0ZW0tYnV0dG9uLWNvbnRhaW5lcicpO1xuICB0YXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tQcmlvcml0eVN0YXJCdXR0b24pO1xuICB0YXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vZGlmeVRhc2tCdXR0b24pO1xuXG4gIGNvbnN0IHRhc2tSaWdodFNpZGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdGFza1JpZ2h0U2lkZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd0YXNrLXJpZ2h0LXNpZGUtY29udGFpbmVyJyk7XG4gIHRhc2tSaWdodFNpZGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza0l0ZW1EYXRlKTtcbiAgdGFza1JpZ2h0U2lkZUNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrQnV0dG9uQ29udGFpbmVyKTtcblxuICBjb25zdCB0YXNrSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIHRhc2tJdGVtLmNsYXNzTGlzdC5hZGQoJ3Rhc2staXRlbScpO1xuICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrQ2hlY2tCb3hDb250YWluZXIpO1xuICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrSXRlbVRpdGxlKTtcbiAgaWYgKHRhc2tEZXRhaWxzLnRyaW0oKSAhPT0gJycpIHtcbiAgICB0YXNrSXRlbS5hcHBlbmRDaGlsZCh0YXNrSXRlbURldGFpbHMpO1xuICB9XG4gIHRhc2tJdGVtLmFwcGVuZENoaWxkKHRhc2tSaWdodFNpZGVDb250YWluZXIpO1xuXG4gIHJldHVybiB0YXNrSXRlbTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGFza0l0ZW0gfTtcbiIsImZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZVN0cmluZywgb3B0aW9ucykge1xuICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xuICBsZXQgZGF0ZU9wdGlvbnM7XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBkYXRlT3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cbiAgZWxzZSB7XG4gICAgZGF0ZU9wdGlvbnMgPSB7XG4gICAgICB5ZWFyOiAnbnVtZXJpYycsXG4gICAgICBtb250aDogJ3Nob3J0JyxcbiAgICAgIGRheTogJ251bWVyaWMnXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygnZW4tdXMnLCBkYXRlT3B0aW9ucyk7XG59XG5cbmV4cG9ydCB7IGZvcm1hdERhdGUgfSIsImZ1bmN0aW9uIGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShzZWxlY3Rvcikge1xuICBjb25zdCB0YXJnZXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gIFxuICBpZiAoIXRhcmdldEVsZW1lbnQpIHtcbiAgICBjb25zb2xlLmVycm9yKGBFbGVtZW50IG5vdCBmb3VuZCBmb3Igc2VsZWN0b3I6ICR7c2VsZWN0b3J9YCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldEVsZW1lbnRcbn1cblxuZXhwb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH07IiwiLy8gKiBFTUlUVEVSU1xuaW1wb3J0IHsgZW1pdEVkaXRUYXNrRm9ybVZpc2liaWxpdHlUb2dnbGUgfSBmcm9tIFwiLi9oYW5kbGUtdGFzay1pdGVtLWludGVyYWN0YWJsZXNcIjtcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IG1haW5TdGF0ZSB9IGZyb20gJy4vaGFuZGxlLW1haW4nO1xuaW1wb3J0IHsgdGFza1RvRWRpdE9iamVjdCB9IGZyb20gJy4vaGFuZGxlLXRhc2staXRlbXMnO1xuXG4vLyAqIEhBTkRMRVJTXG5pbXBvcnQgeyBoYW5kbGVUYXNrTGlzdCB9IGZyb20gJy4vaGFuZGxlLXRhc2stbGlzdCc7XG5cbi8vICogUFJPSkVDVCBERVBFREVOREVOVCBVVElMSVRJRVNcbmltcG9ydCB7IHJlZnJlc2hUYXNrTGlzdEZyb21MaW5rIH0gZnJvbSAnLi4vcHJvamVjdC1kZXBlbmRlbnQtdXRpbGl0aWVzL3JlZnJlc2gtdGFzay1saXN0LWZyb20tbGluayc7XG5cbi8vICogU1RBVEVTXG5pbXBvcnQgeyBhY3RpdmVMaW5rIH0gZnJvbSAnLi9oYW5kbGUtbmF2LWxpbmtzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGhhbmRsZVNhdmVFZGl0VGFza0J1dHRvbigpIHtcbiAgY29uc3QgZWRpdFRhc2tGb3JtID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjZWRpdC10YXNrLWZvcm0nKTtcblxuICBjb25zdCB0YXNrTmFtZUlucHV0ID0gZWRpdFRhc2tGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNlZGl0LXRhc2stdGl0bGUnKTtcbiAgY29uc3QgdGFza0RldGFpbHNJbnB1dCA9IGVkaXRUYXNrRm9ybS5xdWVyeVNlbGVjdG9yKCcjZWRpdC10YXNrLWRldGFpbHMnKTtcbiAgY29uc3QgdGFza0R1ZURhdGVJbnB1dCA9IGVkaXRUYXNrRm9ybS5xdWVyeVNlbGVjdG9yKCcjZWRpdC10YXNrLWR1ZS1kYXRlJyk7XG4gIFxuICBjb25zdCB0YXNrTmFtZSA9IHRhc2tOYW1lSW5wdXQudmFsdWUudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gIGNvbnN0IHRhc2tEZXRhaWxzID0gdGFza0RldGFpbHNJbnB1dC52YWx1ZS50cmltKCk7XG4gIGNvbnN0IHRhc2tEdWVEYXRlID0gdGFza0R1ZURhdGVJbnB1dC52YWx1ZTtcblxuICBpZiAoIXRhc2tOYW1lKSByZXR1cm4gYWxlcnQoJ0VudGVyIFRhc2sgTmFtZScpO1xuICBpZiAoIXRhc2tEdWVEYXRlKSByZXR1cm4gYWxlcnQoJ0VudGVyIFRhc2sgRHVlIERhdGUnKTtcbiAgaWYgKHRhc2tEdWVEYXRlIDwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKSkgcmV0dXJuIGFsZXJ0KCdFbnRlciBWYWxpZCBEdWUgRGF0ZScpO1xuXG4gIGVkaXRUYXNrRm9ybS5yZXNldCgpO1xuXG4gIHRhc2tUb0VkaXRPYmplY3Quc2V0TmFtZSh0YXNrTmFtZSk7XG4gIHRhc2tUb0VkaXRPYmplY3Quc2V0RGV0YWlscyh0YXNrRGV0YWlscyk7XG4gIHRhc2tUb0VkaXRPYmplY3Quc2V0RHVlRGF0ZSh0YXNrRHVlRGF0ZSk7XG5cbiAgZW1pdEVkaXRUYXNrRm9ybVZpc2liaWxpdHlUb2dnbGUoKTtcblxuICBpZiAobWFpblN0YXRlLmxpbmtUeXBlID09PSAncHJvamVjdCcpIHtcbiAgICBoYW5kbGVUYXNrTGlzdChtYWluU3RhdGUucHJvamVjdE5hbWUpO1xuICB9IGVsc2UgaWYgKG1haW5TdGF0ZS5saW5rVHlwZSA9PT0gJ2xpbmsnKSB7XG4gICAgcmVmcmVzaFRhc2tMaXN0RnJvbUxpbmsoYWN0aXZlTGluayk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRWRpdFRhc2tNb2RhbEJ1dHRvbnMoZXZlbnQpIHtcbiAgaWYgKCFldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdlZGl0LXRhc2stYnV0dG9uJykpIHJldHVybjtcblxuICBjb25zdCB0YXJnZXRJZCA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gIGNvbnN0IGlzU2F2ZUJ1dHRvbiA9IHRhcmdldElkID09PSAnc2F2ZS1lZGl0LXRhc2stYnV0dG9uJztcbiAgY29uc3QgaXNDYW5jZWxCdXR0b24gPSB0YXJnZXRJZCA9PT0gJ2NhbmNlbC1lZGl0LXRhc2stYnV0dG9uJztcblxuICBpZiAoaXNTYXZlQnV0dG9uKSB7XG4gICAgaGFuZGxlU2F2ZUVkaXRUYXNrQnV0dG9uKCk7XG4gIH0gZWxzZSBpZiAoaXNDYW5jZWxCdXR0b24pIHtcbiAgICBlbWl0RWRpdFRhc2tGb3JtVmlzaWJpbGl0eVRvZ2dsZSgpO1xuICB9XG59XG5cbmV4cG9ydCB7IGhhbmRsZUVkaXRUYXNrTW9kYWxCdXR0b25zLCBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24gfTsiLCIvLyAqIERBVEFcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuLi9kYXRhJztcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlVGFza0l0ZW1zIH0gZnJvbSAnLi4vaGFuZGxlcnMvaGFuZGxlLXRhc2staXRlbXMnO1xuXG4vLyAqIExPR0lDXG5pbXBvcnQgeyBsaW5rT2JqZWN0RmFjdG9yeSB9IGZyb20gJy4uL2xvZ2ljJztcblxuLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZVRhc2tMaXN0IH0gZnJvbSAnLi4vbWFya3VwL2NyZWF0ZS10YXNrLWxpc3QnO1xuXG4vLyAqIFBST0pFQ1QgREVQRU5ERU5UIFVUSUxJVElFU1xuaW1wb3J0IHsgY2hlY2tUYXNrTGlzdFBvcHVsYXRpb24gfSBmcm9tICcuLi9oYW5kbGVycy9oYW5kbGUtdGFzay1saXN0JztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHJlZnJlc2hUYXNrTGlzdEZyb21MaW5rKGxpbmtOYW1lID0gYWN0aXZlTGluaykge1xuICBjb25zdCBtYWluQ29udGVudCA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnI21haW4tY29udGVudCcpO1xuICBjb25zdCB0YXNrTGlzdCA9IG1haW5Db250ZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrLWxpc3QnKTtcbiAgY29uc3QgcGFnZU5hbWUgPSBsaW5rTmFtZTtcbiAgY29uc3QgbGlua09iamVjdCA9IGxpbmtPYmplY3RGYWN0b3J5KHBhZ2VOYW1lLCBkYXRhLmdldEFsbFRhc2tzKCkpO1xuICBjb25zdCBuZXdUYXNrTGlzdCA9IGNyZWF0ZVRhc2tMaXN0KGxpbmtPYmplY3QpO1xuXG4gIHRhc2tMaXN0LnJlbW92ZSgpO1xuICBtYWluQ29udGVudC5hcHBlbmRDaGlsZChuZXdUYXNrTGlzdCk7XG5cbiAgY29uc3QgdGFza0xpc3RIYXNUYXNrSXRlbXMgPSBjaGVja1Rhc2tMaXN0UG9wdWxhdGlvbihuZXdUYXNrTGlzdCk7XG4gIGlmICh0YXNrTGlzdEhhc1Rhc2tJdGVtcykge1xuICAgIGhhbmRsZVRhc2tJdGVtcyhuZXdUYXNrTGlzdCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgcmVmcmVzaFRhc2tMaXN0RnJvbUxpbmsgfTsiLCIvLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgc2V0QXR0cmlidXRlcyB9IGZyb20gJy4vc2V0LWF0dHJpYnV0ZXMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHNob3dNb2RhbEVuaGFuY2VkKG1vZGFsKSB7XG4gIG1vZGFsLnNob3dNb2RhbCgpO1xuICBzZXRBdHRyaWJ1dGVzKG1vZGFsLCB7XG4gICAgJ2RhdGEtaGlkZGVuJzogJ3Zpc2libGUnLFxuICAgICdhcmlhLWxhYmVsJzogJ3Zpc2libGUnLFxuICB9KTtcbn1cblxuZnVuY3Rpb24gY2xvc2VNb2RhbEVuaGFuY2VkKGVsZW1lbnQpIHtcbiAgZWxlbWVudC5jbG9zZSgpO1xuICBzZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIHtcbiAgICAnZGF0YS1oaWRkZW4nOiAnaGlkZGVuJyxcbiAgICAnYXJpYS1sYWJlbCc6ICdoaWRkZW4nLFxuICB9KTtcbn1cblxuZXhwb3J0IHsgc2hvd01vZGFsRW5oYW5jZWQsIGNsb3NlTW9kYWxFbmhhbmNlZCB9OyIsIi8vICogZXZlbnRzIChwdWJsaXNoIHN1YnNjcmliZSAvIG1lZGlhdG9yKSBwYXR0ZXJuXG5sZXQgZXZlbnRzID0ge1xuICBldmVudHM6IHt9LFxuICBvbjogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZm4pIHtcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXSB8fCBbXTtcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLnB1c2goZm4pO1xuICB9LFxuICBvZmY6IGZ1bmN0aW9uIChldmVudE5hbWUsIGZuKSB7XG4gICAgaWYgKHRoaXMuZXZlbnRzW2V2ZW50TmFtZV0pIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5ldmVudHNbZXZlbnROYW1lXS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5ldmVudHNbZXZlbnROYW1lXVtpXSA9PT0gZm4pIHtcbiAgICAgICAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLnNwbGljZShpLCAxKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgZW1pdDogZnVuY3Rpb24gKGV2ZW50TmFtZSwgZGF0YSkge1xuICAgIGlmICh0aGlzLmV2ZW50c1tldmVudE5hbWVdKSB7XG4gICAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIGZuKGRhdGEpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxufTtcblxuLy8gISB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCB3aXRoIG9uOlxuICAvLyAqIGV2ZW50IG5hbWVcbi8vICogICBmdW5jdGlvbiB0byBydW5cbi8vICogICBhZGQgZnVuY3Rpb24gdG8gZXZlbnRzIG9iamVjdFxuLy8gKiAgIGV2ZW50cyA9IHtcbi8vICogICAgIGV2ZW50czoge1xuLy8gKiAgICAgICBldmVudE5hbWU6IFtmbl0sXG4vLyAqICAgICB9LFxuLy8gKiAgIH1cbi8vICpcbi8vICogd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgd2l0aCBlbWl0OlxuLy8gKiAgIGV2ZW50cyA9IHtcbi8vICogICAgIGV2ZW50czoge1xuLy8gKiAgICAgICBldmVudE5hbWU6IFtmbl0sXG4vLyAqICAgICB9LFxuLy8gKiAgIH1cbi8vICogICBldmVudHMuZXZlbnRzLmV2ZW50TmFtZS5mb3JFYWNoKGZuID0+IGZuKGRhdGEpKTtcbi8vICpcbi8vICogd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgd2l0aCBvZmY6XG4vLyAqICAgZXZlbnRzID0ge1xuLy8gKiAgICAgZXZlbnRzOiB7XG4vLyAqICAgICAgIGV2ZW50TmFtZTogW2ZuXSxcbi8vICogICAgIH0sXG4vLyAqICAgfVxuLy8gKiAgIGV2ZW50cy5ldmVudHMuZXZlbnROYW1lLmZvckVhY2goZm4gPT4ge1xuLy8gKiAgICAgaWYgKGZuID09PSBmbikge1xuLy8gKiAgICAgICBldmVudHMuZXZlbnRzLmV2ZW50TmFtZS5zcGxpY2UoaSwgMSk7XG4vLyAqICAgICB9XG4vLyAqICAgfSk7XG4vLyAqXG4vLyAqICAgZnVuY3Rpb24gdG8gcmVtb3ZlXG4vLyAqICAgcmVtb3ZlIGZ1bmN0aW9uIGZyb20gZXZlbnRzIG9iamVjdFxuLy8gKiAgIGV2ZW50cyA9IHtcbi8vICogICAgIGV2ZW50czoge1xuLy8gKiAgICAgICBldmVudE5hbWU6IFtdLFxuLy8gKiAgICAgfSxcbi8vICogICB9XG4vLyAqXG5cbmV4cG9ydCB7IGV2ZW50cyB9OyIsIi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IFRPR0dMRV9FRElUX1RBU0tfRk9STSB9IGZyb20gXCIuLi9ldmVudE5hbWVzXCI7XG5cbi8vICogSEFORExFUlNcbmltcG9ydCB7IGhhbmRsZUVkaXRUYXNrTW9kYWxCdXR0b25zIH0gZnJvbSAnLi9oYW5kbGUtZWRpdC10YXNrLW1vZGFsLWJ1dHRvbnMnO1xuaW1wb3J0IHsgaGFuZGxlVGFza0l0ZW1JbnRlcmFjdGFibGVzIH0gZnJvbSAnLi9oYW5kbGUtdGFzay1pdGVtLWludGVyYWN0YWJsZXMnO1xuXG4vLyAqIE1BUktVUFxuaW1wb3J0IHsgY3JlYXRlRWRpdFRhc2tNb2RhbCB9IGZyb20gJy4uL21hcmt1cC9jcmVhdGUtZWRpdC10YXNrLW1vZGFsJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlXCI7XG5pbXBvcnQgeyBjbG9zZU1vZGFsRW5oYW5jZWQsIHNob3dNb2RhbEVuaGFuY2VkIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2VuaGFuY2VkLW1vZGFsLWhhbmRsaW5nJztcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvcHVic3ViXCI7XG5pbXBvcnQgeyBzY3JvbGxFbGVtZW50Q29udGVudCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvc2Nyb2xsLWVsZW1lbnQtY29udGVudFwiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFRPRE86IGNyZWF0ZSBzdGF0ZSBvYmplY3QgZm9yIHRoaXMgbW9kdWxlIHVzaW5nOlxubGV0IG1vZGFsU3RhdGU7XG5sZXQgaXNFZGl0VGFza0Zvcm1FdmVudFB1Ymxpc2hlZCA9IGZhbHNlO1xubGV0IHRhc2tUb0VkaXRPYmplY3Q7XG5cbmZ1bmN0aW9uIHRvZ2dsZU1vZGFsQnV0dG9uQ29udGFpbmVyRXZlbnRMaXN0ZW5lcnMobW9kYWxTdGF0ZSkge1xuICBjb25zdCBlZGl0VGFza0J1dHRvbkNvbnRhaW5lciA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShcbiAgICAnLmVkaXQtdGFzay1idXR0b24tY29udGFpbmVyJ1xuICApO1xuXG4gIGlmIChtb2RhbFN0YXRlID09PSAnaGlkZGVuJykge1xuICAgIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRWRpdFRhc2tNb2RhbEJ1dHRvbnMpO1xuICB9IGVsc2UgaWYgKG1vZGFsU3RhdGUgPT09ICd2aXNpYmxlJykge1xuICAgIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRWRpdFRhc2tNb2RhbEJ1dHRvbnMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGVQcmVEaXNwbGF5Tm9uZShlbGVtZW50LCBjYWxsYmFjaykge1xuICBjb25zdCBvbkFuaW1hdGlvbkVuZCA9ICgpID0+IHtcbiAgICBjYWxsYmFjayhlbGVtZW50KTtcblxuICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgb25BbmltYXRpb25FbmQpO1xuXG4gICAgbW9kYWxTdGF0ZSA9ICdoaWRkZW4nO1xuICB9O1xuXG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWhpZGRlbicsICdjbG9zaW5nJyk7XG4gIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgb25BbmltYXRpb25FbmQpO1xufVxuXG5mdW5jdGlvbiBzZXRNb2RhbFBsYWNlaG9sZGVycyhjb3JyZXNwb25kaW5nVGFza09iamVjdCkge1xuICBjb25zdCBlZGl0VGFza01vZGFsID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjZWRpdC10YXNrLW1vZGFsJyk7XG5cbiAgY29uc3QgdGFza05hbWVJbnB1dCA9IGVkaXRUYXNrTW9kYWwucXVlcnlTZWxlY3RvcignI2VkaXQtdGFzay10aXRsZScpO1xuICBjb25zdCB0YXNrRGV0YWlsc0lucHV0ID0gZWRpdFRhc2tNb2RhbC5xdWVyeVNlbGVjdG9yKCcjZWRpdC10YXNrLWRldGFpbHMnKTtcbiAgY29uc3QgdGFza0R1ZURhdGVJbnB1dCA9IGVkaXRUYXNrTW9kYWwucXVlcnlTZWxlY3RvcignI2VkaXQtdGFzay1kdWUtZGF0ZScpO1xuXG4gIGNvbnN0IHRhc2tOYW1lID0gY29ycmVzcG9uZGluZ1Rhc2tPYmplY3QuZ2V0TmFtZSgpO1xuICBjb25zdCB0YXNrRGV0YWlscyA9IGNvcnJlc3BvbmRpbmdUYXNrT2JqZWN0LmdldERldGFpbHMoKTtcbiAgY29uc3QgdGFza0R1ZURhdGUgPSBjb3JyZXNwb25kaW5nVGFza09iamVjdC5nZXREdWVEYXRlKCk7XG5cbiAgdGFza05hbWVJbnB1dC52YWx1ZSA9IHRhc2tOYW1lO1xuICB0YXNrRGV0YWlsc0lucHV0LnZhbHVlID0gdGFza0RldGFpbHM7XG4gIHRhc2tEdWVEYXRlSW5wdXQudmFsdWUgPSB0YXNrRHVlRGF0ZTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlRWRpdFRhc2tGb3JtVmlzaWJpbGl0eShjb3JyZXNwb25kaW5nVGFza09iamVjdCkge1xuICBjb25zdCBlZGl0VGFza01vZGFsID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjZWRpdC10YXNrLW1vZGFsJyk7XG4gIGNvbnN0IHRhc2tNb2RhbFZpc2liaWxpdHlPbkNhbGwgPSBlZGl0VGFza01vZGFsLmdldEF0dHJpYnV0ZSgnZGF0YS1oaWRkZW4nKTtcblxuICBpZiAodGFza01vZGFsVmlzaWJpbGl0eU9uQ2FsbCA9PT0gJ2hpZGRlbicpIHtcbiAgICBtb2RhbFN0YXRlID0gJ3Zpc2libGUnO1xuXG4gICAgc2V0TW9kYWxQbGFjZWhvbGRlcnMoY29ycmVzcG9uZGluZ1Rhc2tPYmplY3QpO1xuICAgIHNob3dNb2RhbEVuaGFuY2VkKGVkaXRUYXNrTW9kYWwpO1xuICAgIHRvZ2dsZU1vZGFsQnV0dG9uQ29udGFpbmVyRXZlbnRMaXN0ZW5lcnMobW9kYWxTdGF0ZSk7XG4gIH0gZWxzZSBpZiAodGFza01vZGFsVmlzaWJpbGl0eU9uQ2FsbCA9PT0gJ3Zpc2libGUnKSB7XG4gICAgbW9kYWxTdGF0ZSA9ICdjbG9zaW5nJztcblxuICAgIGFuaW1hdGVQcmVEaXNwbGF5Tm9uZShlZGl0VGFza01vZGFsLCBjbG9zZU1vZGFsRW5oYW5jZWQpO1xuXG4gICAgdG9nZ2xlTW9kYWxCdXR0b25Db250YWluZXJFdmVudExpc3RlbmVycyhtb2RhbFN0YXRlKTtcbiAgfVxuXG4gIHRhc2tUb0VkaXRPYmplY3QgPSBjb3JyZXNwb25kaW5nVGFza09iamVjdDtcbn1cblxuZnVuY3Rpb24gZW1pdEVkaXRUYXNrRm9ybVZpc2liaWxpdHlUb2dnbGUoZGF0YSkge1xuICBldmVudHMuZW1pdChUT0dHTEVfRURJVF9UQVNLX0ZPUk0sIGRhdGEpO1xufVxuXG5mdW5jdGlvbiBwdWJsaXNoRWRpdFRhc2tFdmVudCgpIHtcbiAgZXZlbnRzLm9uKFRPR0dMRV9FRElUX1RBU0tfRk9STSwgdG9nZ2xlRWRpdFRhc2tGb3JtVmlzaWJpbGl0eSk7XG4gIGlzRWRpdFRhc2tGb3JtRXZlbnRQdWJsaXNoZWQgPSB0cnVlO1xuXG4gIHJldHVybiBpc0VkaXRUYXNrRm9ybUV2ZW50UHVibGlzaGVkXG59XG5cbmZ1bmN0aW9uIGdldENvbnRhaW5lcnNXaXRoT3ZlcmZsb3coY29udGFpbmVycykge1xuICBjb25zdCBjb250YWluZXJzV2l0aE92ZXJmbG93ID0gW107XG5cbiAgY29udGFpbmVycy5mb3JFYWNoKChjb250YWluZXIpID0+IHtcbiAgICBjb25zdCBjb250YWluZXJXaWR0aCA9IGNvbnRhaW5lci5jbGllbnRXaWR0aDtcbiAgICBjb25zdCBjb250YWluZXJTY3JvbGxXaWR0aCA9IGNvbnRhaW5lci5zY3JvbGxXaWR0aDtcblxuICAgIGlmIChjb250YWluZXJXaWR0aCA8IGNvbnRhaW5lclNjcm9sbFdpZHRoKSB7XG4gICAgICBjb250YWluZXJzV2l0aE92ZXJmbG93LnB1c2goY29udGFpbmVyKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjb250YWluZXJzV2l0aE92ZXJmbG93O1xufVxuXG5mdW5jdGlvbiBlbmFibGVUYXNrRGV0YWlsT3ZlckZsb3dTY3JvbGxBbmltYXRpb25zKHRhc2tMaXN0RWxlbWVudCkge1xuICBjb25zdCB0YXNrRGV0YWlsQ29udGFpbmVycyA9XG4gICAgdGFza0xpc3RFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrLWl0ZW0tZGV0YWlscycpO1xuXG4gIGNvbnN0IGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3cgPVxuICAgIGdldENvbnRhaW5lcnNXaXRoT3ZlcmZsb3codGFza0RldGFpbENvbnRhaW5lcnMpO1xuXG4gIGNvbnRhaW5lcnNXaXRoT3ZlcmZsb3cuZm9yRWFjaCgoY29udGFpbmVyKSA9PiB7XG4gICAgc2Nyb2xsRWxlbWVudENvbnRlbnQoY29udGFpbmVyLCAnYmFja3dhcmQnLCAwLjUpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gYWRkVGFza0xpc3RFdmVudExpc3RlbmVyKHRhc2tMaXN0RWxlbWVudCkge1xuICB0YXNrTGlzdEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVUYXNrSXRlbUludGVyYWN0YWJsZXMpO1xufVxuXG5mdW5jdGlvbiBhcHBlbmRUYXNrRWRpdE1vZGFsVG9ET00oKSB7XG4gIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjY29udGVudCcpO1xuICBjb25zdCBlZGl0VGFza01vZGFsID0gY3JlYXRlRWRpdFRhc2tNb2RhbCgpO1xuICBjb250ZW50RWxlbWVudC5hcHBlbmRDaGlsZChlZGl0VGFza01vZGFsKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlVGFza0l0ZW1zKHRhc2tMaXN0RWxlbWVudCkge1xuICAvLyA/IHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGlmIHRhc2tMaXN0RWxlbWVudCBoYXMgdGFza0l0ZW0gY2hpbGRyZW4gKGZyb20gaGFuZGxlLXRhc2stbGlzdC5qcykuXG4gIGFwcGVuZFRhc2tFZGl0TW9kYWxUb0RPTSgpO1xuICBhZGRUYXNrTGlzdEV2ZW50TGlzdGVuZXIodGFza0xpc3RFbGVtZW50KTtcbiAgZW5hYmxlVGFza0RldGFpbE92ZXJGbG93U2Nyb2xsQW5pbWF0aW9ucyh0YXNrTGlzdEVsZW1lbnQpO1xuXG4gIGlmIChpc0VkaXRUYXNrRm9ybUV2ZW50UHVibGlzaGVkKSByZXR1cm47XG4gIHB1Ymxpc2hFZGl0VGFza0V2ZW50KCk7XG59XG5cbmV4cG9ydCB7IGhhbmRsZVRhc2tJdGVtcywgaXNFZGl0VGFza0Zvcm1FdmVudFB1Ymxpc2hlZCwgIGVtaXRFZGl0VGFza0Zvcm1WaXNpYmlsaXR5VG9nZ2xlLCB0YXNrVG9FZGl0T2JqZWN0IH07IiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUVkaXRUYXNrRm9ybSB9IGZyb20gJy4vY3JlYXRlLWVkaXQtdGFzay1mb3JtLmpzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvc2V0LWF0dHJpYnV0ZXMuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZUVkaXRUYXNrTW9kYWwoKSB7XG4gIGNvbnN0IGVkaXRUYXNrSGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gIGVkaXRUYXNrSGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1oZWFkaW5nJyk7XG4gIGVkaXRUYXNrSGVhZGluZy50ZXh0Q29udGVudCA9ICdFZGl0IFRhc2snO1xuXG4gIGNvbnN0IGVkaXRUYXNrTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaWFsb2cnKTtcbiAgc2V0QXR0cmlidXRlcyhlZGl0VGFza01vZGFsLCB7XG4gICAgJ2lkJzogJ2VkaXQtdGFzay1tb2RhbCcsXG4gICAgJ2FyaWEtbGFiZWwnOiAnaGlkZGVuJyxcbiAgICAnZGF0YS1oaWRkZW4nOiAnaGlkZGVuJyxcbiAgfSk7XG4gIGVkaXRUYXNrTW9kYWwuYXBwZW5kQ2hpbGQoZWRpdFRhc2tIZWFkaW5nKTtcbiAgZWRpdFRhc2tNb2RhbC5hcHBlbmRDaGlsZChjcmVhdGVFZGl0VGFza0Zvcm0oKSk7XG5cbiAgcmV0dXJuIGVkaXRUYXNrTW9kYWw7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUVkaXRUYXNrTW9kYWwgfTsiLCJpbXBvcnQgeyBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24gfSBmcm9tICcuLi9oYW5kbGVycy9oYW5kbGUtZWRpdC10YXNrLW1vZGFsLWJ1dHRvbnMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBUT0RPOiByZW1vdmUgdGhlIGV2ZW50IGxpc3RlbmVycyBmcm9tIHRoaXMgbWFya3VwIG1vZHVsZVxuXG5mdW5jdGlvbiBjcmVhdGVFZGl0VGFza0Zvcm0oKSB7XG4gIGNvbnN0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICB0aXRsZUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2VkaXQtdGFzay1sYWJlbCcpO1xuICB0aXRsZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2VkaXQtdGFzay10aXRsZScpO1xuICB0aXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1RpdGxlJztcblxuICBjb25zdCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgdGl0bGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2staW5wdXQnKTtcbiAgdGl0bGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCAnZWRpdC10YXNrLXRpdGxlJyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdyZXF1aXJlZCcsICd0cnVlJyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsICd3aGF0IGFyZSB0aGUgdmliZXM/Jyk7XG4gIHRpdGxlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24oKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IHRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRpdGxlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RpdGxlLWNvbnRhaW5lcicpO1xuICB0aXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnB1dC1jb250YWluZXInKTtcbiAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGVMYWJlbCk7XG4gIHRpdGxlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xuXG4gIGNvbnN0IGRldGFpbHNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGRldGFpbHNMYWJlbC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2stbGFiZWwnKTtcbiAgZGV0YWlsc0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2VkaXQtdGFzay1kZXRhaWxzJyk7XG4gIGRldGFpbHNMYWJlbC50ZXh0Q29udGVudCA9ICdEZXRhaWxzIChvcHRpb25hbCknO1xuXG4gIGNvbnN0IGRldGFpbHNJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGRldGFpbHNJbnB1dC5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2staW5wdXQnKTtcbiAgZGV0YWlsc0lucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gIGRldGFpbHNJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1kZXRhaWxzJyk7XG4gIGRldGFpbHNJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ3RlbGwgbWUgbW9yZScpO1xuICBkZXRhaWxzSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24oKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGRldGFpbHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZGV0YWlsc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdkZXRhaWxzLWNvbnRhaW5lcicpO1xuICBkZXRhaWxzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2lucHV0LWNvbnRhaW5lcicpO1xuICBkZXRhaWxzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRldGFpbHNMYWJlbCk7XG4gIGRldGFpbHNDb250YWluZXIuYXBwZW5kQ2hpbGQoZGV0YWlsc0lucHV0KTtcblxuICBjb25zdCBkdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICBkdWVEYXRlTGFiZWwuY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWxhYmVsJyk7XG4gIGR1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdlZGl0LXRhc2stZHVlLWRhdGUnKTtcbiAgZHVlRGF0ZUxhYmVsLnRleHRDb250ZW50ID0gJ0R1ZSBEYXRlJztcblxuICBjb25zdCBkdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBkdWVEYXRlSW5wdXQuY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWlucHV0Jyk7XG4gIGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICdlZGl0LXRhc2stZHVlLWRhdGUnKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCB0cnVlKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAneXl5eS1tbS1kZCcpO1xuICBkdWVEYXRlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24oKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGR1ZURhdGVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdkdWUtZGF0ZS1jb250YWluZXInKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnB1dC1jb250YWluZXInKTtcbiAgZHVlRGF0ZUNvbnRhaW5lci5hcHBlbmRDaGlsZChkdWVEYXRlTGFiZWwpO1xuICBkdWVEYXRlQ29udGFpbmVyLmFwcGVuZENoaWxkKGR1ZURhdGVJbnB1dCk7XG5cbiAgY29uc3Qgc2F2ZUVkaXRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIHNhdmVFZGl0VGFza0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2stYnV0dG9uJyk7XG4gIHNhdmVFZGl0VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3NhdmUtZWRpdC10YXNrLWJ1dHRvbicpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0VkaXQgVGFzaycpO1xuICBzYXZlRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdmb3JtJywgJ2VkaXQtdGFzay1mb3JtJyk7XG4gIHNhdmVFZGl0VGFza0J1dHRvbi50ZXh0Q29udGVudCA9ICdzYXZlJztcblxuICBjb25zdCBjYW5jZWxFZGl0VGFza0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBjYW5jZWxFZGl0VGFza0J1dHRvbi5jbGFzc0xpc3QuYWRkKCdlZGl0LXRhc2stYnV0dG9uJyk7XG4gIGNhbmNlbEVkaXRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnY2FuY2VsLWVkaXQtdGFzay1idXR0b24nKTtcbiAgY2FuY2VsRWRpdFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBjYW5jZWxFZGl0VGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQ2FuY2VsIEVkaXQgVGFzaycpO1xuICBjYW5jZWxFZGl0VGFza0J1dHRvbi50ZXh0Q29udGVudCA9ICdjYW5jZWwnO1xuXG4gIGNvbnN0IGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2VkaXQtdGFzay1idXR0b24tY29udGFpbmVyJyk7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHNhdmVFZGl0VGFza0J1dHRvbik7XG4gIGVkaXRUYXNrQnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEVkaXRUYXNrQnV0dG9uKTtcblxuICBjb25zdCBlZGl0VGFza0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIGVkaXRUYXNrRm9ybS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2VkaXQtdGFzay1mb3JtJyk7XG4gIGVkaXRUYXNrRm9ybS5hcHBlbmRDaGlsZCh0aXRsZUNvbnRhaW5lcik7XG4gIGVkaXRUYXNrRm9ybS5hcHBlbmRDaGlsZChkZXRhaWxzQ29udGFpbmVyKTtcbiAgZWRpdFRhc2tGb3JtLmFwcGVuZENoaWxkKGR1ZURhdGVDb250YWluZXIpO1xuICBlZGl0VGFza0Zvcm0uYXBwZW5kQ2hpbGQoZWRpdFRhc2tCdXR0b25Db250YWluZXIpO1xuXG4gIGNvbnN0IGVkaXRUYXNrRm9ybUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBlZGl0VGFza0Zvcm1Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnZWRpdC10YXNrLWZvcm0tY29udGFpbmVyJyk7XG4gIGVkaXRUYXNrRm9ybUNvbnRhaW5lci5hcHBlbmRDaGlsZChlZGl0VGFza0Zvcm0pO1xuXG4gIHJldHVybiBlZGl0VGFza0Zvcm1Db250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUVkaXRUYXNrRm9ybSB9O1xuIiwiXG5mdW5jdGlvbiBzY3JvbGxFbGVtZW50Q29udGVudChjb250YWluZXJFbGVtZW50LCBkaXJlY3Rpb24sIHNwZWVkKSB7XG4gIGxldCBlbGVtZW50TWluaW11bVdpZHRoID0gY29udGFpbmVyRWxlbWVudC5zY3JvbGxXaWR0aDtcbiAgLy8gPyBlcXVhbCB0byB0aGUgbWluaW11bSB3aWR0aCB0aGUgZWxlbWVudCByZXF1aXJlcyBpbiBvcmRlciB0byBmaXQgYWxsXG4gIC8vID8gdGhlIGNvbnRlbnQgaW4gdGhlIHZpZXdwb3J0IHdpdGhvdXQgdXNpbmcgYSBob3Jpem9udGFsIHNjcm9sbGJhciBpbiBwaXhlbHNcbiAgLy8gPyBtb3JlIGluZm86IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9FbGVtZW50L3Njcm9sbFdpZHRoXG5cbiAgbGV0IGVsZW1lbnRBY3R1YWxXaWR0aCA9IGNvbnRhaW5lckVsZW1lbnQuY2xpZW50V2lkdGhcbiAgLy8gPyB6ZXJvIGZvciBpbmxpbmUgZWxlbWVudHMgYW5kIGVsZW1lbnRzIHdpdGggbm8gY3NzLCBvdGhlcndpc2UgaXQncyB0aGUgaW5uZXJcbiAgLy8gPyB3aWR0aCBvZiBhbiBlbGVtZW50IGluIHBpeGVsc1xuICAvLyA/IG1vcmUgaW5mbzogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0VsZW1lbnQvY2xpZW50V2lkdGggXG5cbiAgbGV0IG1heFNjcm9sbCA9IGVsZW1lbnRNaW5pbXVtV2lkdGggLSBlbGVtZW50QWN0dWFsV2lkdGg7XG4gIC8vID8gdGhlIG1pbWltdW0gd2lkdGggdG8gZml0IGFsbCBjb250bmV0IHZzIHRoZSBhY3R1YWwgd2lkdGggb2YgdGhlIGVsZW1lbnQgdGVsbCB1cyB0aGVcbiAgLy8gPyB0aGUgdG90YWwgc2Nyb2xsYWJsZSBkaXN0YW5jZVxuICBcbiAgbGV0IHNjcm9sbERpcmVjdGlvbiA9XG4gICAgZGlyZWN0aW9uID09PSAnZm9yd2FyZCdcbiAgICAgID8gMVxuICAgICAgOiBkaXJlY3Rpb24gPT09ICdiYWNrd2FyZCdcbiAgICAgICAgPyAtMVxuICAgICAgICA6IGNvbnNvbGUuZXJyb3IoYERpcmVjdGlvbiBwYXJhbWV0ZXIgQWNjZXB0cyBcImZvcndhcmQgb3IgXCJiYWNrd2FyZFwiIFxcbiBZb3UgZW50ZXJlZDogXCIke2RpcmVjdGlvbn1cImApO1xuXG4gIGZ1bmN0aW9uIHNjcm9sbEVsZW1lbnRDb250ZW50KHRpbWVzdGFtcCkge1xuICAgIGxldCBjdXJyZW50U2Nyb2xsUG9zaXRpb24gPSBjb250YWluZXJFbGVtZW50LnNjcm9sbExlZnQ7XG4gICAgLy8gPyBjdXJyZW50U2Nyb2xsUG9zaXRpb24gaXMgdGhlIGN1cnJlbnQgZGlzdGFuY2UgaW4gcGl4ZWxzXG4gICAgLy8gPyB0aGF0IGFuIGVsZW1lbnRzIGNvbnRlbnQgaXMgc2Nyb2xsZWQgZnJvbSBhbiB0aGUgZWxlbWVudHNcbiAgICAvLyA/IGxlZnQgZWRnZVxuXG4gICAgbGV0IG5ld0Rpc3RhbmNlVG9DcmVhdGUgPSBzcGVlZCAqIHNjcm9sbERpcmVjdGlvbjtcbiAgICAvLyA/IG5ld0Rpc3RhbmNlVG9DcmVhdGUgY2FsY3VsYXRlcyB0aGUgbnVtYmVyIG9mIHBpeGVscyB0b1xuICAgIC8vID8gc2Nyb2xsIGluIHRoZSBjdXJyZW50IGZyYW1lXG5cbiAgICBsZXQgY3VycmVudFNjcm9sbCA9IGN1cnJlbnRTY3JvbGxQb3NpdGlvbiArIG5ld0Rpc3RhbmNlVG9DcmVhdGU7XG4gICAgLy8gPyB0aGUgZnVsbCBkaXN0YW5jZSBhd2F5IGZyb20gdGhlIGVsZW1lbnRzIGxlZnQgZWRnZSB0aGF0XG4gICAgLy8gPyB0aGUgZWxlbWVudHMgY29udGVudCB3aWxsIGJlIGZvciB0aGUgY3VycmVudCBmcmFtZVxuXG4gICAgLy8gKiBSZXZlcnNlIGRpcmVjdGlvbiBhdCB0aGUgZW5kc1xuICAgIGlmIChjdXJyZW50U2Nyb2xsID49IG1heFNjcm9sbCkgeyBcbiAgICAgIC8vID8gZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvbyBpcyBtb3JlIHJlbGlhYmxlIGhlcmUgdGhhbiBcbiAgICAgIC8vID8gZXF1YWxpdHkgaXQgZW5zdXJlcyB0aGF0IHRoZSBjb25kaXRpb24gaXMgbWV0IGV2ZW4gaWZcbiAgICAgIC8vID8gdGhlIGV4YWN0IHZhbHVlIGlzIHNraXBwZWQgb3ZlclxuICAgICAgLy8gPyBpdCBhbHNvIGFjY291bnRzIGZvciBlZGdlIGNhc2VzIHdoZXJlIGNvbnRlbnQgbWlnaHQgYmVcbiAgICAgIC8vID8gc2Nyb2xsZWQgc2xpZ2h0bHkgbW9yZSB0aGFuICdtYXhTY3JvbGwnIGR1ZSB0b1xuICAgICAgLy8gPyB1c2VyIGludGVyYWN0aW9uIG9yIGJyb3dzZXIgYmVoYXZpb3JcbiAgICAgIHNjcm9sbERpcmVjdGlvbiA9IC0xOyAvLyAqIENoYW5nZSBkaXJlY3Rpb24gdG8gYmFja3dhcmRcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRTY3JvbGwgPD0gMCkge1xuICAgICAgLy8gPyBzYW1lIGNvbmNlcHQgaGVyZSBhcyBhYm92ZVxuICAgICAgc2Nyb2xsRGlyZWN0aW9uID0gMTsgLy8gKiBDaGFuZ2UgZGlyZWN0aW9uIHRvIGZvcndhcmRcbiAgICB9XG5cbiAgICBjb250YWluZXJFbGVtZW50LnNjcm9sbExlZnQgPSBjdXJyZW50U2Nyb2xsO1xuXG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHNjcm9sbEVsZW1lbnRDb250ZW50KTtcbiAgfVxuXG4gIHNjcm9sbEVsZW1lbnRDb250ZW50KCk7IC8vIFN0YXJ0IHRoZSBzY3JvbGxpbmdcbn1cblxuZXhwb3J0IHsgc2Nyb2xsRWxlbWVudENvbnRlbnQgfTsiLCIvLyAqIERBVEFcbmltcG9ydCB7IGRhdGEgfSBmcm9tICcuLi9kYXRhLmpzJztcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlVGFza0l0ZW1zIH0gZnJvbSAnLi9oYW5kbGUtdGFzay1pdGVtcy5qcyc7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVUYXNrTGlzdCB9IGZyb20gJy4uL21hcmt1cC9jcmVhdGUtdGFzay1saXN0LmpzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNoZWNrVGFza0xpc3RQb3B1bGF0aW9uKHRhc2tMaXN0RWxlbWVudCkge1xuICBjb25zdCB0YXNrTGlzdEZpcnN0Q2hpbGQgPSB0YXNrTGlzdEVsZW1lbnQuZmlyc3RDaGlsZDsgLy8gPyB0YXNrTGlzdENoaWxkcmVuWzBdIHx8IG51bGxcbiAgY29uc3QgcGxhY2Vob2xkZXJFeGlzdHMgPVxuICAgIHRhc2tMaXN0Rmlyc3RDaGlsZCAmJlxuICAgIHRhc2tMaXN0Rmlyc3RDaGlsZC5oYXNBdHRyaWJ1dGUoJ2lkJywgJ3BsYWNlaG9sZGVyLWNvbnRhaW5lcicpO1xuXG4gIGlmIChwbGFjZWhvbGRlckV4aXN0cyB8fCAhdGFza0xpc3RGaXJzdENoaWxkKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVRhc2tMaXN0KHByb2plY3ROYW1lKSB7XG4gIGNvbnN0IHRhc2tMaXN0ID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjdGFzay1saXN0Jyk7XG4gIGNvbnN0IG1haW5Db250ZW50ID0gdGFza0xpc3QucGFyZW50Tm9kZTtcbiAgY29uc3QgcHJvamVjdE9iamVjdCA9IGRhdGEuZ2V0UHJvamVjdE9iamVjdChwcm9qZWN0TmFtZSk7XG5cbiAgdGFza0xpc3QucmVtb3ZlKCk7XG5cbiAgY29uc3QgdGFza0xpc3RFbGVtZW50ID0gY3JlYXRlVGFza0xpc3QocHJvamVjdE9iamVjdCk7XG4gIG1haW5Db250ZW50LmFwcGVuZENoaWxkKHRhc2tMaXN0RWxlbWVudCk7XG5cbiAgY29uc3QgdGFza0xpc3RIYXNUYXNrSXRlbXMgPSBjaGVja1Rhc2tMaXN0UG9wdWxhdGlvbih0YXNrTGlzdEVsZW1lbnQpO1xuICBpZiAodGFza0xpc3RIYXNUYXNrSXRlbXMpIHtcbiAgICBoYW5kbGVUYXNrSXRlbXModGFza0xpc3RFbGVtZW50KTtcbiAgfVxufVxuXG5leHBvcnQgeyBoYW5kbGVUYXNrTGlzdCwgY2hlY2tUYXNrTGlzdFBvcHVsYXRpb24gfTtcbiIsIi8vICogREFUQVxuaW1wb3J0IHsgZGF0YSB9IGZyb20gJy4uL2RhdGEnO1xuXG4vLyAqIEVNSVRURVJTXG5pbXBvcnQgeyBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5IH0gZnJvbSAnLi9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXInO1xuXG4vLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBBRERfTkVXX1RBU0sgfSBmcm9tICcuLi9ldmVudE5hbWVzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgdGFza0ZhY3RvcnkgfSBmcm9tICcuLi9sb2dpYyc7XG5cbi8vICogSEFORExFUlNcbmltcG9ydCB7IGhhbmRsZVRhc2tMaXN0IH0gZnJvbSAnLi9oYW5kbGUtdGFzay1saXN0JztcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IG1haW5TdGF0ZSB9IGZyb20gJy4vaGFuZGxlLW1haW4nO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZSc7XG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvcHVic3ViJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gYWRkTmV3VGFzaygpIHtcbiAgY29uc3QgdGFza0Zvcm0gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNhZGQtdGFzay1mb3JtJyk7XG5cbiAgY29uc3QgdGFza05hbWVJbnB1dCA9IHRhc2tGb3JtLnF1ZXJ5U2VsZWN0b3IoJyN0YXNrLWFkZC10aXRsZScpO1xuICBjb25zdCB0YXNrRGV0YWlsc0lucHV0ID0gdGFza0Zvcm0ucXVlcnlTZWxlY3RvcignI3Rhc2stYWRkLWRldGFpbHMnKTtcbiAgY29uc3QgdGFza0R1ZURhdGVJbnB1dCA9IHRhc2tGb3JtLnF1ZXJ5U2VsZWN0b3IoJyN0YXNrLWFkZC1kdWUtZGF0ZScpO1xuXG4gIGNvbnN0IHRhc2tOYW1lID0gdGFza05hbWVJbnB1dC52YWx1ZS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgY29uc3QgdGFza0RldGFpbHMgPSB0YXNrRGV0YWlsc0lucHV0LnZhbHVlLnRyaW0oKTtcbiAgY29uc3QgdGFza0R1ZURhdGUgPSB0YXNrRHVlRGF0ZUlucHV0LnZhbHVlO1xuICBcbiAgaWYgKCF0YXNrTmFtZSkgcmV0dXJuIGFsZXJ0KCdFbnRlciBUYXNrIE5hbWUnKTtcbiAgaWYgKCF0YXNrRHVlRGF0ZSkgcmV0dXJuIGFsZXJ0KCdFbnRlciBUYXNrIER1ZSBEYXRlJyk7XG4gIGlmICh0YXNrRHVlRGF0ZSA8IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCkpIHJldHVybiBhbGVydCgnRW50ZXIgVmFsaWQgRHVlIERhdGUnKTtcbiAgXG4gIHRhc2tGb3JtLnJlc2V0KCk7XG5cbiAgY29uc3QgdGFza09iamVjdCA9IHRhc2tGYWN0b3J5KHRhc2tOYW1lLCBwcm9qZWN0TmFtZSwgdGFza0R1ZURhdGUsIHRhc2tEZXRhaWxzKTtcbiAgdGFza09iamVjdC5zZXRQcm9qZWN0TmFtZShwcm9qZWN0TmFtZSk7XG4gIFxuICBjb25zdCBwcm9qZWN0TmFtZSA9IChtYWluU3RhdGUucHJvamVjdE5hbWUpLnRvTG93ZXJDYXNlKCk7XG4gIGRhdGEuYWRkVGFza1RvUHJvamVjdChwcm9qZWN0TmFtZSwgdGFza09iamVjdCk7XG5cbiAgZW1pdFRvZ2dsZVRhc2tGb3JtVmlzaWJpbGl0eSgpO1xuXG4gIGhhbmRsZVRhc2tMaXN0KHByb2plY3ROYW1lKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza0FkZEV2ZW50KGZvcm1TdGF0ZSkge1xuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBldmVudHMub24oQUREX05FV19UQVNLLCBhZGROZXdUYXNrKTtcbiAgfVxuICBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGV2ZW50cy5vZmYoQUREX05FV19UQVNLLCBhZGROZXdUYXNrKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBlbWl0SW5pdGlhbGl6ZVRhc2soKSB7ICBcbiAgZXZlbnRzLmVtaXQoQUREX05FV19UQVNLKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlVGFza0FkZEJ1dHRvbkxpc3RlbmVyKGZvcm1TdGF0ZSkge1xuICBjb25zdCBhZGRUYXNrQnV0dG9uID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcjYWRkLXRhc2stYnV0dG9uJyk7XG5cbiAgaWYgKGZvcm1TdGF0ZSA9PT0gJ3Zpc2libGUnKSB7XG4gICAgYWRkVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRJbml0aWFsaXplVGFzayk7XG4gIH1cbiAgZWxzZSBpZiAoZm9ybVN0YXRlID09PSAnY2xvc2luZycpIHtcbiAgICBhZGRUYXNrQnV0dG9uLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZW1pdEluaXRpYWxpemVUYXNrKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVUYXNrQWRkQnV0dG9uKGZvcm1TdGF0ZSkge1xuICB0b2dnbGVUYXNrQWRkQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKTtcbiAgdG9nZ2xlVGFza0FkZEV2ZW50KGZvcm1TdGF0ZSk7XG59XG5cbmV4cG9ydCB7IGhhbmRsZVRhc2tBZGRCdXR0b259OyIsIi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IFRPR0dMRV9BRERfVEFTS19GT1JNIH0gZnJvbSBcIi4uL2V2ZW50TmFtZXNcIjtcblxuLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlVGFza0FkZEJ1dHRvbiB9IGZyb20gXCIuL2hhbmRsZS10YXNrLWFkZC1idXR0b25cIjtcbmltcG9ydCB7IGhhbmRsZVRhc2tDYW5jZWxCdXR0b24gfSBmcm9tIFwiLi9oYW5kbGUtdGFzay1jYW5jZWwtYnV0dG9uXCI7XG5cbi8vICogVVRJVExJSUVTXG5pbXBvcnQgeyBldmVudHMgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL3B1YnN1YlwiO1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2VcIjtcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmxldCB0YXNrQ29tcG9uZW50U3RhdGUgPSB7XG4gIGZvcm1TdGF0ZTogJ2hpZGRlbicsXG4gIGlzQWRkVGFza0J1dHRvbkxpc3RlbmVyQXR0YWNoZWQ6IGZhbHNlLFxufVxuXG5mdW5jdGlvbiBzZXREaXNwbGF5Tm9uZShldmVudCkge1xuICB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlID0gJ2hpZGRlbic7XG5cbiAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGV2ZW50LnRhcmdldDtcbiAgdGFyZ2V0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJywgJ3RydWUnKTtcbiAgdGFyZ2V0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBzZXREaXNwbGF5Tm9uZSk7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGVQcmVEaXNwbGF5Tm9uZSh0YXJnZXRFbGVtZW50KSB7XG4gIHRhc2tDb21wb25lbnRTdGF0ZS5mb3JtU3RhdGUgPSAnY2xvc2luZyc7XG4gIFxuICB0YXJnZXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIHNldERpc3BsYXlOb25lKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQWRkVGFza0Zvcm0oKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtQ29udGFpbmVyID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcuYWRkLXRhc2stZm9ybS1jb250YWluZXInKTtcbiAgY29uc3QgY3VycmVudFRhc2tGb3JtU3RhdGUgPSB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlO1xuXG4gIGlmIChjdXJyZW50VGFza0Zvcm1TdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKGFkZFRhc2tGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnZmFsc2UnLFxuICAgICAgJ2FyaWEtbGFiZWwnOiAndmlzaWJsZScsXG4gICAgfSk7XG5cbiAgICB0YXNrQ29tcG9uZW50U3RhdGUuZm9ybVN0YXRlID0gJ3Zpc2libGUnO1xuICB9IGVsc2UgaWYgKGN1cnJlbnRUYXNrRm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKGFkZFRhc2tGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnY2xvc2luZycsXG4gICAgICAnYXJpYS1sYWJlbCc6ICdoaWRkZW4nLFxuICAgIH0pO1xuXG4gICAgYW5pbWF0ZVByZURpc3BsYXlOb25lKGFkZFRhc2tGb3JtQ29udGFpbmVyKTtcbiAgfVxuXG4gIGhhbmRsZVRhc2tBZGRCdXR0b24odGFza0NvbXBvbmVudFN0YXRlLmZvcm1TdGF0ZSk7XG4gIGhhbmRsZVRhc2tDYW5jZWxCdXR0b24odGFza0NvbXBvbmVudFN0YXRlLmZvcm1TdGF0ZSk7IFxufVxuXG5mdW5jdGlvbiB0b2dnbGVBZGRUYXNrQnV0dG9uRXZlbnRQdWJsaXNoaW5nKG9iamVjdFR5cGUpIHtcbiAgaWYgKG9iamVjdFR5cGUgPT09ICdwcm9qZWN0Jykge1xuICAgIGV2ZW50cy5vbihUT0dHTEVfQUREX1RBU0tfRk9STSwgdG9nZ2xlQWRkVGFza0Zvcm0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRUb2dnbGVUYXNrRm9ybVZpc2liaWxpdHkoKSB7XG4gIGV2ZW50cy5lbWl0KFRPR0dMRV9BRERfVEFTS19GT1JNKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlQWRkVGFza0J1dHRvbkNsaWNrTGlzdGVuZXIob2JqZWN0VHlwZSkge1xuICBjb25zdCBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbiA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShcbiAgICAnI2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbidcbiAgKTtcblxuICBpZiAob2JqZWN0VHlwZSA9PT0gJ3Byb2plY3QnKSB7XG4gICAgYWRkVGFza0Zvcm1PcGVuZXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgICB0YXNrQ29tcG9uZW50U3RhdGUuaXNBZGRUYXNrQnV0dG9uTGlzdGVuZXJBdHRhY2hlZCA9IHRydWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkVGFza0Zvcm1PcGVuZXJCdXR0b25MaXN0ZW5lcihvYmplY3RUeXBlKSB7XG4gIHRvZ2dsZUFkZFRhc2tCdXR0b25DbGlja0xpc3RlbmVyKG9iamVjdFR5cGUpO1xuICB0b2dnbGVBZGRUYXNrQnV0dG9uRXZlbnRQdWJsaXNoaW5nKG9iamVjdFR5cGUpO1xufVxuXG5leHBvcnQgeyBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5LCB0YXNrQ29tcG9uZW50U3RhdGUsIHRvZ2dsZUFkZFRhc2tGb3JtIH07IiwiLy8gKiBFTUlUVEVSU1xuaW1wb3J0IHsgZW1pdFRvZ2dsZVRhc2tGb3JtVmlzaWJpbGl0eSB9IGZyb20gXCIuL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lclwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2VcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gdG9nZ2xlQ2FuY2VsQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKSB7XG4gIGNvbnN0IGNhbmNlbEFkZFRhc2tCdXR0b24gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNjYW5jZWwtYWRkLXRhc2stYnV0dG9uJyk7XG5cbiAgaWYgKGZvcm1TdGF0ZSA9PT0gJ3Zpc2libGUnKSB7IFxuICAgIGNhbmNlbEFkZFRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGNhbmNlbEFkZFRhc2tCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVUYXNrQ2FuY2VsQnV0dG9uKGZvcm1TdGF0ZSkge1xuICB0b2dnbGVDYW5jZWxCdXR0b25MaXN0ZW5lcihmb3JtU3RhdGUpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVUYXNrQ2FuY2VsQnV0dG9uIH07IiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZVRhc2tMaXN0IH0gZnJvbSBcIi4vY3JlYXRlLXRhc2stbGlzdFwiO1xuaW1wb3J0IHsgY3JlYXRlQWRkVGFza0NvbnRhaW5lciB9IGZyb20gXCIuL2NyZWF0ZS1hZGQtdGFzay1jb250YWluZXJcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbkNvbnRlbnRDb250YWluZXIobWFpblVwZGF0ZU9iamVjdCkge1xuICBjb25zdCBtYWluSGVhZGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gIGNvbnN0IGhlYWRpbmdUZXh0Q29udGVudCA9IG1haW5VcGRhdGVPYmplY3QuZ2V0TmFtZSgpO1xuICBtYWluSGVhZGluZy5zZXRBdHRyaWJ1dGUoJ2lkJywgJ21haW4taGVhZGluZycpO1xuICBtYWluSGVhZGluZy50ZXh0Q29udGVudCA9IGhlYWRpbmdUZXh0Q29udGVudDtcbiAgXG4gIGNvbnN0IHRhc2tMaXN0RWxlbWVudCA9IGNyZWF0ZVRhc2tMaXN0KG1haW5VcGRhdGVPYmplY3QpO1xuXG4gIGNvbnN0IG1haW5Db250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1haW5Db250ZW50LnNldEF0dHJpYnV0ZSgnaWQnLCAnbWFpbi1jb250ZW50Jyk7XG4gIG1haW5Db250ZW50LmFwcGVuZENoaWxkKHRhc2tMaXN0RWxlbWVudCk7XG5cbiAgY29uc3QgbWFpbkNvbnRlbnRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgY29uc3Qgb2JqZWN0VHlwZSA9IG1haW5VcGRhdGVPYmplY3QuZ2V0VHlwZSgpO1xuICBtYWluQ29udGVudENvbnRhaW5lci5hcHBlbmRDaGlsZChtYWluSGVhZGluZyk7XG4gIGlmIChvYmplY3RUeXBlID09PSAncHJvamVjdCcpIHtcbiAgICBtYWluQ29udGVudENvbnRhaW5lci5hcHBlbmRDaGlsZChjcmVhdGVBZGRUYXNrQ29udGFpbmVyKCkpO1xuICB9IFxuICBtYWluQ29udGVudENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ21haW4tY29udGFpbmVyJyk7XG4gIG1haW5Db250ZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKG1haW5Db250ZW50KTtcbiAgXG4gIHJldHVybiBtYWluQ29udGVudENvbnRhaW5lclxufVxuXG5leHBvcnQgeyBjcmVhdGVNYWluQ29udGVudENvbnRhaW5lciB9ICIsIi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVBZGRUYXNrQnV0dG9uIH0gZnJvbSAnLi9jcmVhdGUtYWRkLXRhc2stYnV0dG9uLmpzJztcbmltcG9ydCB7IGNyZWF0ZUFkZFRhc2tGb3JtIH0gZnJvbSAnLi9jcmVhdGUtYWRkLXRhc2stZm9ybS5qcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2tDb250YWluZXIoKSB7XG4gIGNvbnN0IGFkZFRhc2tDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkVGFza0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZC10YXNrLWNvbnRhaW5lcicpO1xuICBhZGRUYXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKGNyZWF0ZUFkZFRhc2tCdXR0b24oKSk7XG4gIGFkZFRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkVGFza0Zvcm0oKSk7XG5cbiAgcmV0dXJuIGFkZFRhc2tDb250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFRhc2tDb250YWluZXIgfTtcbiIsImZ1bmN0aW9uIGNyZWF0ZUFkZFRhc2tCdXR0b24oKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgYWRkVGFza0Zvcm1CdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0FkZCBUYXNrJyk7XG4gIGFkZFRhc2tGb3JtQnV0dG9uLnRleHRDb250ZW50ID0gJ2FkZCB0YXNrJztcblxuICBjb25zdCBhZGRUYXNrQnV0dG9uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGFkZFRhc2tCdXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKFxuICAgICdpZCcsXG4gICAgJ2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1jb250YWluZXInXG4gICk7XG5cbiAgYWRkVGFza0J1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChhZGRUYXNrRm9ybUJ1dHRvbik7XG5cbiAgcmV0dXJuIGFkZFRhc2tCdXR0b25Db250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFRhc2tCdXR0b24gfTtcbiIsImltcG9ydCB7IGV2ZW50cyB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvcHVic3ViXCI7XG5pbXBvcnQgeyBBRERfTkVXX1RBU0sgfSBmcm9tIFwiLi4vZXZlbnROYW1lc1wiO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBUT0RPOiByZW1vdmUgdGhlIGV2ZW50IGxpc3RlbmVycyBmcm9tIHRoaXMgbWFya3VwIG1vZHVsZVxuXG5mdW5jdGlvbiBjcmVhdGVBZGRUYXNrRm9ybSgpIHtcbiAgY29uc3QgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIHRpdGxlTGFiZWwuY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2stbGFiZWwnKTtcbiAgdGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrLWFkZC10aXRsZScpO1xuICB0aXRsZUxhYmVsLnRleHRDb250ZW50ID0gJ1RpdGxlJztcblxuICBjb25zdCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgdGl0bGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1pbnB1dCcpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrLWFkZC10aXRsZScpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCAndHJ1ZScpO1xuICB0aXRsZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnd2hhdCBhcmUgdGhlIHZpYmVzPycpO1xuICB0aXRsZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZlbnRzLmVtaXQoQUREX05FV19UQVNLKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IHRpdGxlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRpdGxlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RpdGxlLWNvbnRhaW5lcicpO1xuICB0aXRsZUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnB1dC1jb250YWluZXInKTtcbiAgdGl0bGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGVMYWJlbCk7XG4gIHRpdGxlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xuXG4gIGNvbnN0IGRldGFpbHNMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIGRldGFpbHNMYWJlbC5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1sYWJlbCcpO1xuICBkZXRhaWxzTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAndGFzay1hZGQtZGV0YWlscycpO1xuICBkZXRhaWxzTGFiZWwudGV4dENvbnRlbnQgPSAnRGV0YWlscyAob3B0aW9uYWwpJztcblxuICBjb25zdCBkZXRhaWxzSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBkZXRhaWxzSW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2staW5wdXQnKTtcbiAgZGV0YWlsc0lucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gIGRldGFpbHNJbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2stYWRkLWRldGFpbHMnKTtcbiAgZGV0YWlsc0lucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAndGVsbCBtZSBtb3JlJyk7XG4gIGRldGFpbHNJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50cy5lbWl0KEFERF9ORVdfVEFTSyk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBkZXRhaWxzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRldGFpbHNDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZGV0YWlscy1jb250YWluZXInKTtcbiAgZGV0YWlsc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbnB1dC1jb250YWluZXInKTtcbiAgZGV0YWlsc0NvbnRhaW5lci5hcHBlbmRDaGlsZChkZXRhaWxzTGFiZWwpO1xuICBkZXRhaWxzQ29udGFpbmVyLmFwcGVuZENoaWxkKGRldGFpbHNJbnB1dCk7XG5cbiAgY29uc3QgZHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgZHVlRGF0ZUxhYmVsLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWxhYmVsJyk7XG4gIGR1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrLWFkZC1kdWUtZGF0ZScpO1xuICBkdWVEYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnRHVlIERhdGUnO1xuXG4gIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gIGR1ZURhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1pbnB1dCcpO1xuICBkdWVEYXRlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCAndGFzay1hZGQtZHVlLWRhdGUnKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgncmVxdWlyZWQnLCB0cnVlKTtcbiAgZHVlRGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAneXl5eS1tbS1kZCcpO1xuICBkdWVEYXRlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XG4gICAgaWYgKGUua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudHMuZW1pdChBRERfTkVXX1RBU0spO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgZHVlRGF0ZUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkdWVEYXRlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2R1ZS1kYXRlLWNvbnRhaW5lcicpO1xuICBkdWVEYXRlQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2lucHV0LWNvbnRhaW5lcicpO1xuICBkdWVEYXRlQ29udGFpbmVyLmFwcGVuZENoaWxkKGR1ZURhdGVMYWJlbCk7XG4gIGR1ZURhdGVDb250YWluZXIuYXBwZW5kQ2hpbGQoZHVlRGF0ZUlucHV0KTtcblxuICBjb25zdCBhZGRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGFkZFRhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2stYnV0dG9uJyk7XG4gIGFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdhZGQtdGFzay1idXR0b24nKTtcbiAgYWRkVGFza0J1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIGFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0FkZCBUYXNrJyk7XG4gIGFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCduYW1lJywgJ2FkZC10YXNrLWJ1dHRvbicpO1xuICBhZGRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgnZm9ybScsICdhZGQtdGFzay1mb3JtJyk7XG4gIGFkZFRhc2tCdXR0b24udGV4dENvbnRlbnQgPSAnYWRkJztcblxuICBjb25zdCBjYW5jZWxBZGRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFRhc2tCdXR0b24uY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2stYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdjYW5jZWwtYWRkLXRhc2stYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFRhc2tCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBjYW5jZWxBZGRUYXNrQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdDYW5jZWwgQWRkIFRhc2snKTtcbiAgY2FuY2VsQWRkVGFza0J1dHRvbi50ZXh0Q29udGVudCA9ICdjYW5jZWwnO1xuXG4gIGNvbnN0IGFkZFRhc2tCdXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkVGFza0J1dHRvbkNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdhZGQtdGFzay1idXR0b24tY29udGFpbmVyJyk7XG4gIGFkZFRhc2tCdXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoYWRkVGFza0J1dHRvbik7XG4gIGFkZFRhc2tCdXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoY2FuY2VsQWRkVGFza0J1dHRvbik7XG5cbiAgY29uc3QgYWRkVGFza0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gIGFkZFRhc2tGb3JtLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkLXRhc2stZm9ybScpO1xuICBhZGRUYXNrRm9ybS5hcHBlbmRDaGlsZCh0aXRsZUNvbnRhaW5lcik7XG4gIGFkZFRhc2tGb3JtLmFwcGVuZENoaWxkKGRldGFpbHNDb250YWluZXIpO1xuICBhZGRUYXNrRm9ybS5hcHBlbmRDaGlsZChkdWVEYXRlQ29udGFpbmVyKTtcbiAgYWRkVGFza0Zvcm0uYXBwZW5kQ2hpbGQoYWRkVGFza0J1dHRvbkNvbnRhaW5lcik7XG5cbiAgY29uc3QgYWRkVGFza0Zvcm1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgYWRkVGFza0Zvcm1Db250YWluZXIuY2xhc3NMaXN0LmFkZCgnYWRkLXRhc2stZm9ybS1jb250YWluZXInKTtcbiAgYWRkVGFza0Zvcm1Db250YWluZXIuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ2hpZGRlbicpO1xuICBhZGRUYXNrRm9ybUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJywgdHJ1ZSk7XG4gIGFkZFRhc2tGb3JtQ29udGFpbmVyLmFwcGVuZENoaWxkKGFkZFRhc2tGb3JtKTtcblxuICByZXR1cm4gYWRkVGFza0Zvcm1Db250YWluZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFkZFRhc2tGb3JtIH07IiwiLy8gKiBEQVRBXG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi4vZGF0YS5qcyc7XG5cbi8vICogSEFORExFUlNcbmltcG9ydCB7IGFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uTGlzdGVuZXIsIHRhc2tDb21wb25lbnRTdGF0ZSB9IGZyb20gJy4vYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uLWxpc3RlbmVyLmpzJztcbmltcG9ydCB7IGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbiB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbmF2LXRvZ2dsZS9oYW5kbGUtbmF2LXRvZ2dsZS1idXR0b24uanMnO1xuaW1wb3J0IHsgaGFuZGxlVGFza0l0ZW1zIH0gZnJvbSAnLi9oYW5kbGUtdGFzay1pdGVtcy5qcyc7XG5pbXBvcnQgeyByZW1vdmVBZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyIH0gZnJvbSAnLi9yZW1vdmUtYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uLWxpc3RlbmVyLmpzJztcblxuLy8gKiBMQVlPVVRcbmltcG9ydCB7IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyIH0gZnJvbSAnLi4vbWFya3VwL2NyZWF0ZS1tYWluLWNvbnRlbnQtY29udGFpbmVyLmpzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgbGlua09iamVjdEZhY3RvcnkgfSBmcm9tICcuLi9sb2dpYy5qcyc7XG5cbi8vICogUFJPSkVDVCBERVBFTkRFTlQgVVRJTElUSUVTXG5pbXBvcnQgeyBjaGVja1Rhc2tMaXN0UG9wdWxhdGlvbiB9IGZyb20gJy4vaGFuZGxlLXRhc2stbGlzdC5qcyc7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuY29uc3QgbWFpblN0YXRlID0ge1xuICBsaW5rVHlwZTogbnVsbCxcbiAgcHJvamVjdE5hbWU6IG51bGwsXG59XG5cbmZ1bmN0aW9uIGNsb3NlTmF2UG9zdFRyYW5zaXRpb24odGFyZ2V0RWxlbWVudCkge1xuICB0YXJnZXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVOYXZUb2dnbGVCdXR0b24sIHtcbiAgICBvbmNlOiB0cnVlLFxuICB9KTtcbiAgLy8gPyB0aGUgb25jZSBvcHRpb24gaXMgdXNlZCB0byByZW1vdmUgdGhlIGV2ZW50IGxpc3RlbmVyIGFmdGVyIGl0IGhhcyBiZWVuIGNhbGxlZCBvbmNlLlxufVxuXG5mdW5jdGlvbiBjbGVhck1haW4obWFpbkVsZW1lbnQpIHtcbiAgd2hpbGUgKG1haW5FbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICBtYWluRWxlbWVudC5yZW1vdmVDaGlsZChtYWluRWxlbWVudC5maXJzdENoaWxkKTtcbiAgfVxufVxuXG5mdW5jdGlvbiByZXNvbHZlTWFpblVwZGF0ZU9iamVjdChuZXdDdXJyZW50TmF2TGluaykge1xuICBjb25zdCBpc1Byb2plY3RMaW5rID0gbmV3Q3VycmVudE5hdkxpbmsuaGFzQXR0cmlidXRlKCdkYXRhLXByb2plY3QtbmFtZScpO1xuICBjb25zdCBpc1BhZ2VMaW5rID0gbmV3Q3VycmVudE5hdkxpbmsuaGFzQXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScpO1xuXG4gIGlmIChpc1Byb2plY3RMaW5rKSB7ICAgIFxuICAgIGNvbnN0IHByb2plY3RBcnJheSA9IGRhdGEuZ2V0UHJvamVjdEFycmF5KCk7XG4gICAgY29uc3QgcHJvamVjdFZhbHVlID0gbmV3Q3VycmVudE5hdkxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLXByb2plY3QtbmFtZScpO1xuICAgIGNvbnN0IHByb2plY3RPYmplY3QgPSBwcm9qZWN0QXJyYXkuZmluZChcbiAgICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LmdldE5hbWUoKSA9PT0gcHJvamVjdFZhbHVlXG4gICAgICApO1xuICAgIFxuICAgIG1haW5TdGF0ZS5saW5rVHlwZSA9ICdwcm9qZWN0JztcbiAgICBcbiAgICByZXR1cm4gcHJvamVjdE9iamVjdDtcbiAgICAgIFxuICAgIH0gZWxzZSBpZiAoaXNQYWdlTGluaykge1xuICAgIGNvbnN0IHBhZ2VOYW1lID0gbmV3Q3VycmVudE5hdkxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScpO1xuICAgIGNvbnN0IGxpbmtPYmplY3QgPSBsaW5rT2JqZWN0RmFjdG9yeShwYWdlTmFtZSwgZGF0YS5nZXRBbGxUYXNrcygpKTtcblxuICAgIG1haW5TdGF0ZS5saW5rVHlwZSA9ICdsaW5rJztcblxuICAgIHJldHVybiBsaW5rT2JqZWN0O1xuXG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlTWFpbih0YXJnZXRFbGVtZW50KSB7XG4gIGNvbnN0IG5ld0N1cnJlbnROYXZMaW5rID0gdGFyZ2V0RWxlbWVudDtcbiAgY29uc3QgbWFpblVwZGF0ZU9iamVjdCA9IHJlc29sdmVNYWluVXBkYXRlT2JqZWN0KG5ld0N1cnJlbnROYXZMaW5rKTtcbiAgY29uc3QgbWFpblVwZGF0ZU9iamVjdE5hbWUgPSBtYWluVXBkYXRlT2JqZWN0LmdldE5hbWUoKTtcbiAgY29uc3QgbWFpblVwZGF0ZU9iamVjdFR5cGUgPSBtYWluVXBkYXRlT2JqZWN0LmdldFR5cGUoKTtcbiAgY29uc3QgbmV3TWFpbkNvbnRhaW5lciA9IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyKG1haW5VcGRhdGVPYmplY3QpO1xuICBjb25zdCBuZXdUYXNrTGlzdCA9IG5ld01haW5Db250YWluZXIucXVlcnlTZWxlY3RvcignI3Rhc2stbGlzdCcpO1xuICBcbiAgY29uc3QgaXNBZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkF0dGFjaGVkID0gdGFza0NvbXBvbmVudFN0YXRlLmlzQWRkVGFza0J1dHRvbkxpc3RlbmVyQXR0YWNoZWQ7XG4gIGlmIChpc0FkZFRhc2tGb3JtT3BlbmVyQnV0dG9uQXR0YWNoZWQpIHtcbiAgICByZW1vdmVBZGRUYXNrRm9ybU9wZW5lckJ1dHRvbkxpc3RlbmVyKCk7XG4gIH1cblxuICBjb25zdCBtYWluRWxlbWVudCA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSgnbWFpbicpO1xuICBjbGVhck1haW4obWFpbkVsZW1lbnQpO1xuXG4gIG1haW5FbGVtZW50LmFwcGVuZENoaWxkKG5ld01haW5Db250YWluZXIpO1xuXG4gIGlmIChtYWluVXBkYXRlT2JqZWN0VHlwZSA9PT0gJ3Byb2plY3QnKSB7XG4gICAgbWFpblN0YXRlLnByb2plY3ROYW1lID0gbWFpblVwZGF0ZU9iamVjdE5hbWU7XG4gICAgYWRkVGFza0Zvcm1PcGVuZXJCdXR0b25MaXN0ZW5lcihtYWluVXBkYXRlT2JqZWN0VHlwZSk7XG4gIH1cblxuICBjb25zdCB0YXNrTGlzdEhhc1Rhc2tJdGVtcyA9IGNoZWNrVGFza0xpc3RQb3B1bGF0aW9uKG5ld1Rhc2tMaXN0KTsgLy8gPyBib29sZWFuXG4gIGlmICh0YXNrTGlzdEhhc1Rhc2tJdGVtcykge1xuICAgIGhhbmRsZVRhc2tJdGVtcyhuZXdUYXNrTGlzdCk7XG4gIH1cblxuICBjbG9zZU5hdlBvc3RUcmFuc2l0aW9uKHRhcmdldEVsZW1lbnQpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVNYWluLCBtYWluU3RhdGUgfTtcbiIsIi8vICogSEFORExFUlNcbmltcG9ydCB7IGhhbmRsZU1haW4gfSBmcm9tICcuL2hhbmRsZS1tYWluLmpzJztcblxuLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgSEFORExFX01BSU4gfSBmcm9tICcuLi9ldmVudE5hbWVzLmpzJztcblxuLy8gKiAgU1RBVEVTXG5pbXBvcnQgeyBuYXZTdGF0ZSB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvemlnLXphZy1uYXYvaGFuZGxlLXppZy16YWctbmF2LmpzJztcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UuanMnO1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL3B1YnN1Yi5qcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmxldCBhY3RpdmVMaW5rO1xuXG5mdW5jdGlvbiBlbWl0VXBkYXRlTWFpbihldmVudCkge1xuICBldmVudHMuZW1pdChIQU5ETEVfTUFJTiwgZXZlbnQpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVPbGRBcmlhQ3VycmVudChub2RlbGlzdCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKG5vZGVsaXN0W2ldLmhhc0F0dHJpYnV0ZSgnYXJpYS1jdXJyZW50JykpIHtcbiAgICAgIG5vZGVsaXN0W2ldLnJlbW92ZUF0dHJpYnV0ZSgnYXJpYS1jdXJyZW50Jyk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gc2V0QXJpYUN1cnJlbnQodGFyZ2V0RWxlbWVudCkge1xuICBjb25zdCBuYXYgPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJy56aWctemFnLW5hdicpO1xuICBjb25zdCBuYXZMaW5rcyA9IG5hdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCduYXYtbGluaycpO1xuXG4gIHJlbW92ZU9sZEFyaWFDdXJyZW50KG5hdkxpbmtzKTtcblxuICB0YXJnZXRFbGVtZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1jdXJyZW50JywgJ3BhZ2UnKTtcblxuICBhY3RpdmVMaW5rID0gdGFyZ2V0RWxlbWVudC50ZXh0Q29udGVudC50b0xvd2VyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBjaGVja0lmQ2xpY2thYmxlTmF2TGluayh0YXJnZXRFbGVtZW50KSB7XG4gIGNvbnN0IGlzVGFyZ2V0TmF2TGluayA9IHRhcmdldEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCduYXYtbGluaycpO1xuICBjb25zdCBpc1RhcmdldExpbmtBY3RpdmUgPSB0YXJnZXRFbGVtZW50Lmhhc0F0dHJpYnV0ZSgnYXJpYS1jdXJyZW50Jyk7XG4gIGNvbnN0IGlzVGFyZ2V0TGlua0NsaWNrYWJsZSA9IGlzVGFyZ2V0TmF2TGluayAmJiAhaXNUYXJnZXRMaW5rQWN0aXZlO1xuXG4gIGlmIChpc1RhcmdldExpbmtDbGlja2FibGUpIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBzZXRBY3RpdmVMaW5rKGV2ZW50KSB7XG4gIGNvbnN0IHRhcmdldEVsZW1lbnQgPSBldmVudC50YXJnZXQ7XG4gIGNvbnN0IGlzVGFyZ2V0RWxlbWVudE5hdkxpbmsgPSBjaGVja0lmQ2xpY2thYmxlTmF2TGluayh0YXJnZXRFbGVtZW50KTtcbiAgaWYgKCFpc1RhcmdldEVsZW1lbnROYXZMaW5rKSByZXR1cm47XG5cbiAgc2V0QXJpYUN1cnJlbnQodGFyZ2V0RWxlbWVudCk7XG4gIGVtaXRVcGRhdGVNYWluKHRhcmdldEVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVOYXZMaW5rTGlzdGVuZXJzKCkge1xuICBjb25zdCB6aWdaYWdOYXYgPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJy56aWctemFnLW5hdicpO1xuXG4gIGlmIChuYXZTdGF0ZS5vcGVuID09PSB0cnVlKSB7XG4gICAgemlnWmFnTmF2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2V0QWN0aXZlTGluayk7XG4gIH0gZWxzZSBpZiAobmF2U3RhdGUub3BlbiA9PT0gZmFsc2UpIHtcbiAgICB6aWdaYWdOYXYucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZXRBY3RpdmVMaW5rKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVOYXZMaW5rcygpIHtcbiAgaWYgKG5hdlN0YXRlLm9wZW4gPT09IHRydWUpIHtcbiAgICBldmVudHMub24oSEFORExFX01BSU4sIGhhbmRsZU1haW4pO1xuICB9IGVsc2UgaWYgKG5hdlN0YXRlLm9wZW4gPT09IGZhbHNlKSB7XG4gICAgZXZlbnRzLm9mZihIQU5ETEVfTUFJTiwgaGFuZGxlTWFpbik7XG4gIH1cbiAgdG9nZ2xlTmF2TGlua0xpc3RlbmVycygpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVOYXZMaW5rcywgYWN0aXZlTGluayB9OyIsIi8vICogRU1JVFRFUlNcbmltcG9ydCB7IGVtaXRUb2dnbGVUYXNrRm9ybVZpc2liaWxpdHkgfSBmcm9tIFwiLi9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXJcIjtcblxuLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgVE9HR0xFX0FERF9UQVNLX0ZPUk0gfSBmcm9tIFwiLi4vZXZlbnROYW1lc1wiO1xuXG4vLyAqIEVWRU5UU1xuaW1wb3J0IHsgdG9nZ2xlQWRkVGFza0Zvcm0gfSBmcm9tIFwiLi9hZGQtdGFzay1mb3JtLW9wZW5lci1idXR0b24tbGlzdGVuZXJcIjtcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IHRhc2tDb21wb25lbnRTdGF0ZSB9IGZyb20gXCIuL2FkZC10YXNrLWZvcm0tb3BlbmVyLWJ1dHRvbi1saXN0ZW5lclwiO1xuXG4vLyAqIFVUSUxJVElFU1xuaW1wb3J0IHsgZXZlbnRzIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllcy9wdWJzdWJcIjtcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvY2hlY2stdGFyZ2V0LWVsZW1lbnQtZXhpc3RlbmNlXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHJlbW92ZUFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uTGlzdGVuZXIoKSB7XG4gIGNvbnN0IGFkZFRhc2tGb3JtT3BlbmVyQnV0dG9uID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKFxuICAgICcjYWRkLXRhc2stZm9ybS1vcGVuZXItYnV0dG9uJ1xuICApO1xuICBhZGRUYXNrRm9ybU9wZW5lckJ1dHRvbi5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRUb2dnbGVUYXNrRm9ybVZpc2liaWxpdHkpO1xuXG4gIHRhc2tDb21wb25lbnRTdGF0ZS5pc0FkZFRhc2tCdXR0b25MaXN0ZW5lckF0dGFjaGVkID0gZmFsc2U7XG4gIGV2ZW50cy5vZmYoVE9HR0xFX0FERF9UQVNLX0ZPUk0sIHRvZ2dsZUFkZFRhc2tGb3JtKTtcbn1cblxuZXhwb3J0IHsgcmVtb3ZlQWRkVGFza0Zvcm1PcGVuZXJCdXR0b25MaXN0ZW5lciB9OyIsIi8vICogU1RZTEVTSEVFVFNcbmltcG9ydCAnLi9saXN0SWNvbi5zY3NzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlTGlzdEljb24oKSB7XG4gIGNvbnN0IGxpc3RJY29uQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGxpc3RJY29uQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2xpc3QtaWNvbi1jb250YWluZXInKTtcbiAgbGlzdEljb25Db250YWluZXIuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsIHRydWUpO1xuXG4gIGNvbnN0IGxpc3RJY29uQmFycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBsaXN0SWNvbkJhcnMuY2xhc3NMaXN0LmFkZCgnbGlzdC1pY29uLWJhcnMnKTtcblxuICBsaXN0SWNvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChsaXN0SWNvbkJhcnMpO1xuXG4gIHJldHVybiBsaXN0SWNvbkNvbnRhaW5lcjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTGlzdEljb24gfTtcblxuIiwiLy8gKiBEQVRBXG5pbXBvcnQgeyBkYXRhIH0gZnJvbSAnLi4vZGF0YS5qcyc7XG5cbi8vICogRU1JVFRFUlNcbmltcG9ydCB7IGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUgfSBmcm9tICcuL2hhbmRsZS1uZXctcHJvamVjdC1idXR0b24uanMnO1xuXG4vLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBBRERfTkVXX1BST0pFQ1QgfSBmcm9tICcuLi9ldmVudE5hbWVzLmpzJztcblxuLy8gKiBMT0dJQ1xuaW1wb3J0IHsgcHJvamVjdEZhY3RvcnkgfSBmcm9tICcuLi9sb2dpYy5qcyc7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVQcm9qZWN0SXRlbSB9IGZyb20gJy4uL21hcmt1cC9jcmVhdGUtcHJvamVjdC1pdGVtLmpzJztcblxuLy8gKiBTVEFURVNcbmltcG9ydCB7IGZvcm1Db21wb25lbnRTdGF0ZSB9IGZyb20gJy4vaGFuZGxlLW5ldy1wcm9qZWN0LWJ1dHRvbi5qcyc7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvcHVic3ViLmpzJztcbmltcG9ydCB7IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9jaGVjay10YXJnZXQtZWxlbWVudC1leGlzdGVuY2UuanMnO1xuaW1wb3J0IHsgdG9nZ2xlU2Nyb2xsQmFyVmlzaWJpbGl0eSB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy90b2dnbGUtc2Nyb2xsLXZpc2liaWxpdHkuanMnO1xuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiB1cGRhdGVQcm9qZWN0TGlzdChkYXRhLCBwcm9qZWN0TGlzdCkge1xuICBjb25zdCByZXZlcnNlZFByb2plY3RBcnJheSA9IGRhdGEuZ2V0UHJvamVjdEFycmF5KCkuc2xpY2UoKS5yZXZlcnNlKCk7XG4gIC8vID8gdG8gcHV0IHRoZSBtb3N0IHJlY2VudGx5IGFkZGVkIHByb2plY3QgYXQgdGhlIHRvcCBvZiB0aGUgbGlzdFxuICAvLyAqIHNsaWNlKCkgaXMgdXNlZCB0byBjcmVhdGUgYSBjb3B5IG9mIHRoZSBhcnJheVxuICAvLyAqIG5vdCBlbnRlcmluZyBhIHN0YXJ0IGFuZCBlbmQgaW5kZXggd2lsbCByZXR1cm4gYSBjb3B5IG9mIHRoZSBlbnRpcmUgYXJyYXlcbiAgLy8gKiByZXZlcnNlKCkgaXMgdXNlZCB0byByZXZlcnNlIHRoZSBvcmRlciBvZiB0aGUgYXJyYXlcblxuICB3aGlsZSAocHJvamVjdExpc3QuZmlyc3RDaGlsZCkge1xuICAgIHByb2plY3RMaXN0LnJlbW92ZUNoaWxkKHByb2plY3RMaXN0LmZpcnN0Q2hpbGQpO1xuICB9XG5cbiAgcmV2ZXJzZWRQcm9qZWN0QXJyYXkuZm9yRWFjaCgocHJvamVjdCkgPT4ge1xuICAgIHByb2plY3RMaXN0LmFwcGVuZENoaWxkKGNyZWF0ZVByb2plY3RJdGVtKHByb2plY3QuZ2V0TmFtZSgpKSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjaGVja0xpc3RPdmVyZmxvdyhwcm9qZWN0TGlzdCkge1xuICB0b2dnbGVTY3JvbGxCYXJWaXNpYmlsaXR5KHByb2plY3RMaXN0KTtcbn1cblxuZnVuY3Rpb24gQWRkTmV3UHJvamVjdCgpIHtcbiAgY29uc3QgcHJvamVjdEZvcm0gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNhZGQtcHJvamVjdC1mb3JtJyk7XG5cbiAgY29uc3QgcHJvamVjdE5hbWVJbnB1dCA9IHByb2plY3RGb3JtLnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LW5hbWUtaW5wdXQnKTtcbiAgY29uc3QgcHJvamVjdE5hbWUgPSBwcm9qZWN0TmFtZUlucHV0LnZhbHVlLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICghcHJvamVjdE5hbWUpIHJldHVybiBhbGVydCgnRW50ZXIgUHJvamVjdCBOYW1lJyk7XG4gIHByb2plY3RGb3JtLnJlc2V0KClcblxuICBjb25zdCBwcm9qZWN0T2JqZWN0ID0gcHJvamVjdEZhY3RvcnkocHJvamVjdE5hbWUpO1xuICBkYXRhLmFkZFByb2plY3QocHJvamVjdE9iamVjdCk7IC8vID8gaW1wb3J0ZWQgZnJvbSBkYXRhLmpzXG5cbiAgY29uc3QgcHJvamVjdExpc3QgPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNwcm9qZWN0LW5hdi1saXN0Jyk7XG4gIHVwZGF0ZVByb2plY3RMaXN0KGRhdGEsIHByb2plY3RMaXN0KTtcblxuICBjaGVja0xpc3RPdmVyZmxvdyhwcm9qZWN0TGlzdCk7XG5cbiAgZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSgpOyAvLyA/IGVtaXRzIFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNXG5cbiAgZm9ybUNvbXBvbmVudFN0YXRlLnByb2plY3RGb3JtU3RhdGUgPSAnaGlkZGVuJztcbn1cblxuZnVuY3Rpb24gdG9nZ2xlUHJvamVjdEFkZEV2ZW50KGZvcm1TdGF0ZSkge1xuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBldmVudHMub24oQUREX05FV19QUk9KRUNULCBBZGROZXdQcm9qZWN0KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIGV2ZW50cy5vZmYoQUREX05FV19QUk9KRUNULCBBZGROZXdQcm9qZWN0KTtcbiAgfVxufSBcblxuZnVuY3Rpb24gZW1pdEluaXRpYWxpemVQcm9qZWN0KCkge1xuICBldmVudHMuZW1pdChBRERfTkVXX1BST0pFQ1QpO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVQcm9qZWN0QWRkQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKSB7XG4gIGNvbnN0IHByb2plY3RBZGRCdXR0b24gPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNhZGQtcHJvamVjdC1idXR0b24nKTtcblxuICBpZiAoZm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBwcm9qZWN0QWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZW1pdEluaXRpYWxpemVQcm9qZWN0KTtcbiAgfSBlbHNlIGlmIChmb3JtU3RhdGUgPT09ICdjbG9zaW5nJykge1xuICAgIHByb2plY3RBZGRCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0SW5pdGlhbGl6ZVByb2plY3QpO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gaGFuZGxlUHJvamVjdEFkZEJ1dHRvbihmb3JtU3RhdGUpIHtcbiAgdG9nZ2xlUHJvamVjdEFkZEJ1dHRvbkxpc3RlbmVyKGZvcm1TdGF0ZSk7XG4gIHRvZ2dsZVByb2plY3RBZGRFdmVudChmb3JtU3RhdGUpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVQcm9qZWN0QWRkQnV0dG9uIH07IiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZUxpc3RJY29uIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvbGlzdEljb24vY3JlYXRlLWxpc3QtaWNvblwiOyAvLyA/ICBJTiBDT01QT05FTlRTIEZPTERFUlxuXG4vLyA+IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBjcmVhdGVQcm9qZWN0SXRlbShwcm9qZWN0TmFtZSkge1xuICBjb25zdCBwcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIHByb2plY3RCdXR0b24uY2xhc3NMaXN0LmFkZCgnbmF2LWxpbmsnKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIHByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgYFByb2plY3QgJHtwcm9qZWN0TmFtZX1gKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2RhdGEtcHJvamVjdC1uYW1lJywgcHJvamVjdE5hbWUpO1xuICBwcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG5cbiAgY29uc3QgbGlzdEljb24gPSBjcmVhdGVMaXN0SWNvbigpO1xuXG4gIGNvbnN0IHByb2plY3RMaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gIHByb2plY3RMaS5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWxpJyk7XG4gIHByb2plY3RMaS5jbGFzc0xpc3QuYWRkKCduYXYtbGknKTtcbiAgcHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCBgUHJvamVjdCAke3Byb2plY3ROYW1lfWApO1xuICBwcm9qZWN0TGkuYXBwZW5kQ2hpbGQobGlzdEljb24pO1xuICBwcm9qZWN0TGkuYXBwZW5kQ2hpbGQocHJvamVjdEJ1dHRvbik7XG5cbiAgcmV0dXJuIHByb2plY3RMaTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlUHJvamVjdEl0ZW0gfTsiLCJmdW5jdGlvbiB0b2dnbGVTY3JvbGxCYXJWaXNpYmlsaXR5KGNvbnRhaW5lcikge1xuICBpZiAoY29udGFpbmVyLnNjcm9sbFdpZHRoID4gY29udGFpbmVyLmNsaWVudFdpZHRoKSB7XG4gICAgLy8gPyBDb250ZW50IG92ZXJmbG93cywgc2hvdyBzY3JvbGxiYXJcbiAgICBjb250YWluZXIuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7XG4gIH0gZWxzZSB7XG4gICAgLy8gPyBDb250ZW50IGRvZXMgbm90IG92ZXJmbG93LCBoaWRlIHNjcm9sbGJhclxuICAgIGNvbnRhaW5lci5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICB9XG59XG5cbmV4cG9ydCB7IHRvZ2dsZVNjcm9sbEJhclZpc2liaWxpdHkgfTsiLCIvLyAqIEVWRU5UIE5BTUVTXG5pbXBvcnQgeyBUT0dHTEVfQUREX1BST0pFQ1RfRk9STSB9IGZyb20gXCIuLi9ldmVudE5hbWVzXCI7XG5cbi8vICogSEFORExFUlNcbmltcG9ydCB7IGhhbmRsZVByb2plY3RBZGRCdXR0b24gfSBmcm9tIFwiLi9oYW5kbGUtcHJvamVjdC1hZGQtYnV0dG9uXCI7XG5pbXBvcnQgeyBoYW5kbGVQcm9qZWN0Q2FuY2VsQnV0dG9uIH0gZnJvbSBcIi4vaGFuZGxlLXByb2plY3QtY2FuY2VsLWJ1dHRvblwiO1xuXG4vLyAqIFNUQVRFU1xuaW1wb3J0IHsgbmF2U3RhdGUgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy96aWctemFnLW5hdi9oYW5kbGUtemlnLXphZy1uYXZcIjtcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvcHVic3ViXCI7XG5pbXBvcnQgeyBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZVwiO1xuaW1wb3J0IHsgY2xlYXJUZXh0SW5wdXQgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2NsZWFyLXRleHQtaW5wdXRcIjtcbmltcG9ydCB7IHNldEF0dHJpYnV0ZXMgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL3NldC1hdHRyaWJ1dGVzXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmxldCBmb3JtQ29tcG9uZW50U3RhdGUgPSB7XG4gIHByb2plY3RGb3JtU3RhdGU6ICdoaWRkZW4nLFxufVxuXG5mdW5jdGlvbiBzZXREaXNwbGF5Tm9uZShldmVudCkge1xuICBmb3JtQ29tcG9uZW50U3RhdGUucHJvamVjdEZvcm1TdGF0ZSA9ICdoaWRkZW4nO1xuXG4gIGNvbnN0IHRhcmdldEVsZW1lbnQgPSBldmVudC50YXJnZXQ7XG4gIHRhcmdldEVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLWhpZGRlbicsICd0cnVlJyk7XG4gIHRhcmdldEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYW5pbWF0aW9uZW5kJywgc2V0RGlzcGxheU5vbmUpO1xufVxuXG5mdW5jdGlvbiBhbmltYXRlUHJlRGlzcGxheU5vbmUodGFyZ2V0RWxlbWVudCkge1xuICBmb3JtQ29tcG9uZW50U3RhdGUucHJvamVjdEZvcm1TdGF0ZSA9ICdjbG9zaW5nJztcblxuICB0YXJnZXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIHNldERpc3BsYXlOb25lKTsgXG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUFkZFByb2plY3RGb3JtKCkge1xuICBjb25zdCBwcm9qZWN0Rm9ybUNvbnRhaW5lciA9IGNoZWNrVGFyZ2V0RWxlbWVudEV4aXN0ZW5jZShcbiAgICAnI2FkZC1wcm9qZWN0LWZvcm0nXG4gICk7XG4gIGNvbnN0IHByb2plY3RGb3JtU3RhdGUgPSBmb3JtQ29tcG9uZW50U3RhdGUucHJvamVjdEZvcm1TdGF0ZTtcblxuICBpZiAocHJvamVjdEZvcm1TdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKHByb2plY3RGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnZmFsc2UnLFxuICAgICAgJ2FyaWEtbGFiZWwnOiAndmlzaWJsZScsXG4gICAgfSk7XG5cbiAgICBmb3JtQ29tcG9uZW50U3RhdGUucHJvamVjdEZvcm1TdGF0ZSA9ICd2aXNpYmxlJztcbiAgfSBlbHNlIGlmIChwcm9qZWN0Rm9ybVN0YXRlID09PSAndmlzaWJsZScpIHtcbiAgICBzZXRBdHRyaWJ1dGVzKHByb2plY3RGb3JtQ29udGFpbmVyLCB7XG4gICAgICAnZGF0YS1oaWRkZW4nOiAnY2xvc2luZycsXG4gICAgICAnYXJpYS1sYWJlbCc6ICdoaWRkZW4nLFxuICAgIH0pO1xuXG4gICAgYW5pbWF0ZVByZURpc3BsYXlOb25lKHByb2plY3RGb3JtQ29udGFpbmVyKTtcblxuICAgIGNvbnN0IHByb2plY3ROYW1lSW5wdXQgPSBjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UoJyNwcm9qZWN0LW5hbWUtaW5wdXQnKTtcbiAgICBjbGVhclRleHRJbnB1dChwcm9qZWN0TmFtZUlucHV0KTtcbiAgfVxuXG4gIGhhbmRsZVByb2plY3RBZGRCdXR0b24oZm9ybUNvbXBvbmVudFN0YXRlLnByb2plY3RGb3JtU3RhdGUpO1xuICBoYW5kbGVQcm9qZWN0Q2FuY2VsQnV0dG9uKGZvcm1Db21wb25lbnRTdGF0ZS5wcm9qZWN0Rm9ybVN0YXRlKTtcbn1cblxuZnVuY3Rpb24gdG9nZ2xlTmV3UHJvamVjdEJ1dHRvbkV2ZW50UHVibGlzaGluZyhuYXZTdGF0ZSkge1xuICBpZiAobmF2U3RhdGUub3BlbiA9PT0gdHJ1ZSkge1xuICAgIGV2ZW50cy5vbihUT0dHTEVfQUREX1BST0pFQ1RfRk9STSwgdG9nZ2xlQWRkUHJvamVjdEZvcm0pO1xuICB9IGVsc2UgaWYgKG5hdlN0YXRlLm9wZW4gPT09IGZhbHNlKSB7XG4gICAgZXZlbnRzLm9mZihUT0dHTEVfQUREX1BST0pFQ1RfRk9STSwgdG9nZ2xlQWRkUHJvamVjdEZvcm0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUoKSB7XG4gIGV2ZW50cy5lbWl0KFRPR0dMRV9BRERfUFJPSkVDVF9GT1JNKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlTmV3UHJvamVjdEJ1dHRvbigpIHtcbiAgY29uc3QgbmV3UHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduZXctcHJvamVjdC1idXR0b24nKTtcblxuICBpZiAobmF2U3RhdGUub3BlbiA9PT0gdHJ1ZSkge1xuICAgIG5ld1Byb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlKTtcbiAgfSBlbHNlIGlmIChuYXZTdGF0ZS5vcGVuID09PSBmYWxzZSkge1xuICAgIG5ld1Byb2plY3RCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlKTtcbiAgfVxuXG4gIHRvZ2dsZU5ld1Byb2plY3RCdXR0b25FdmVudFB1Ymxpc2hpbmcobmF2U3RhdGUpO1xufVxuXG5leHBvcnQgeyBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlLCBoYW5kbGVOZXdQcm9qZWN0QnV0dG9uLCBmb3JtQ29tcG9uZW50U3RhdGUgfTsiLCJmdW5jdGlvbiBjbGVhclRleHRJbnB1dChpbnB1dEVsZW1lbnQpIHtcbiAgaW5wdXRFbGVtZW50LnZhbHVlID0gJyc7XG59XG5cbmV4cG9ydCB7IGNsZWFyVGV4dElucHV0IH07IiwiLy8gKiBFTUlUVEVSU1xuaW1wb3J0IHsgZW1pdFByb2plY3RGb3JtVmlzaWJpbGl0eVRvZ2dsZSB9IGZyb20gXCIuL2hhbmRsZS1uZXctcHJvamVjdC1idXR0b25cIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gdG9nZ2xlQ2FuY2VsQnV0dG9uTGlzdGVuZXIoZm9ybVN0YXRlKSB7XG4gIGNvbnN0IGNhbmNlbEFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2FuY2VsLWFkZC1wcm9qZWN0LWJ1dHRvbicpO1xuXG4gICAgaWYgKGZvcm1TdGF0ZSA9PT0gJ3Zpc2libGUnKSB7IFxuICAgICAgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUpO1xuICAgIH0gZWxzZSBpZiAoZm9ybVN0YXRlID09PSAnY2xvc2luZycpIHtcbiAgICAgIGNhbmNlbEFkZFByb2plY3RCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlbWl0UHJvamVjdEZvcm1WaXNpYmlsaXR5VG9nZ2xlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVQcm9qZWN0Q2FuY2VsQnV0dG9uKGZvcm1TdGF0ZSkge1xuICB0b2dnbGVDYW5jZWxCdXR0b25MaXN0ZW5lcihmb3JtU3RhdGUpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVQcm9qZWN0Q2FuY2VsQnV0dG9uIH07IiwiLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgSElERV9OQVZfRVZFTlQsIFNIT1dfTkFWX0VWRU5UIH0gZnJvbSAnLi4vLi4vanMvZXZlbnROYW1lcy5qcyc7XG5cbi8vICogSEFOTERFUlNcbmltcG9ydCB7IGhhbmRsZU5hdkxpbmtzIH0gZnJvbSAnLi4vLi4vanMvaGFuZGxlcnMvaGFuZGxlLW5hdi1saW5rcy5qcyc7XG5pbXBvcnQgeyBoYW5kbGVOZXdQcm9qZWN0QnV0dG9uIH0gZnJvbSAnLi4vLi4vanMvaGFuZGxlcnMvaGFuZGxlLW5ldy1wcm9qZWN0LWJ1dHRvbi5qcyc7XG5cbi8vICogVVRJTElUSUVTXG5pbXBvcnQgeyBldmVudHMgfSBmcm9tICcuLi8uLi91dGlsaXRpZXMvcHVic3ViLmpzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxubGV0IG5hdlN0YXRlID0ge1xuICBvcGVuOiBmYWxzZSxcbiAgYW5pbWF0aW5nOiBmYWxzZSxcbn1cblxuZnVuY3Rpb24gaGlkZU5hdigpIHtcbiAgbmF2U3RhdGUub3BlbiA9IGZhbHNlO1xuICBuYXZTdGF0ZS5hbmltYXRpbmcgPSBmYWxzZTtcblxuICBjb25zdCB6aWdaYWdOYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuemlnLXphZy1uYXYnKTtcbiAgXG4gIHppZ1phZ05hdi5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBoaWRlTmF2KTtcbiAgXG4gIHppZ1phZ05hdi5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XG4gIHppZ1phZ05hdi5zZXRBdHRyaWJ1dGUoJ2RhdGEtdmlzaWJpbGl0eScsIGZhbHNlKTtcblxuICBoYW5kbGVOZXdQcm9qZWN0QnV0dG9uKCk7XG4gIGhhbmRsZU5hdkxpbmtzKCk7XG59XG5cbmZ1bmN0aW9uIGluaXRpYXRlSGlkZU5hdigpIHtcbiAgbmF2U3RhdGUuYW5pbWF0aW5nID0gdHJ1ZTtcblxuICBjb25zdCB6aWdaYWdOYXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuemlnLXphZy1uYXYnKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnZGF0YS12aXNpYmlsaXR5JywgJ2Nsb3NpbmcnKTtcbiAgemlnWmFnTmF2LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbmVuZCcsIGhpZGVOYXYpO1xufVxuXG5mdW5jdGlvbiBzaG93TmF2KCkge1xuICBuYXZTdGF0ZS5vcGVuID0gdHJ1ZTtcbiAgbmF2U3RhdGUuYW5pbWF0aW5nID0gZmFsc2U7XG5cbiAgY29uc3QgemlnWmFnTmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnppZy16YWctbmF2Jyk7XG4gIHppZ1phZ05hdi5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgZmFsc2UpO1xuICB6aWdaYWdOYXYuc2V0QXR0cmlidXRlKCdkYXRhLXZpc2liaWxpdHknLCB0cnVlKTtcblxuICBoYW5kbGVOYXZMaW5rcygpO1xuICBoYW5kbGVOZXdQcm9qZWN0QnV0dG9uKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5hdigpIHtcbiAgZXZlbnRzLm9uKFNIT1dfTkFWX0VWRU5ULCBzaG93TmF2KTtcbiAgZXZlbnRzLm9uKEhJREVfTkFWX0VWRU5ULCBpbml0aWF0ZUhpZGVOYXYpO1xufVxuXG5leHBvcnQgeyBoYW5kbGVOYXYsIG5hdlN0YXRlIH07IiwiLy8gKiBFVkVOVCBOQU1FU1xuaW1wb3J0IHsgSElERV9OQVZfRVZFTlQsIFNIT1dfTkFWX0VWRU5UIH0gZnJvbSAnLi4vLi4vanMvZXZlbnROYW1lcy5qcyc7XG5cbi8vICogU1RBVEVTXG5pbXBvcnQgeyBuYXZTdGF0ZSB9IGZyb20gJy4uL3ppZy16YWctbmF2L2hhbmRsZS16aWctemFnLW5hdi5qcyc7XG5cbi8vICogVVRJTElURVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gJy4uLy4uL3V0aWxpdGllcy9wdWJzdWIuanMnO1xuaW1wb3J0IHsgY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlIH0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2NoZWNrLXRhcmdldC1lbGVtZW50LWV4aXN0ZW5jZS5qcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbigpIHtcbiAgY29uc3QgdG9nZ2xlQnV0dG9uID0gY2hlY2tUYXJnZXRFbGVtZW50RXhpc3RlbmNlKCcubmF2LXRvZ2dsZS1idXR0b24nKTtcbiAgY29uc3QgdG9nZ2xlQnV0dG9uQWN0aXZhdGVkID0gdG9nZ2xlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJyk7XG5cbiAgaWYgKCF0b2dnbGVCdXR0b25BY3RpdmF0ZWQpIHtcbiAgICBpZiAobmF2U3RhdGUuYW5pbWF0aW5nID09PSB0cnVlKSByZXR1cm47XG5cbiAgICB0b2dnbGVCdXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG5cbiAgICB0b2dnbGVCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0Nsb3NlIE5hdmlnYXRpb24gTWVudScpO1xuICAgIHRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcblxuICAgIGV2ZW50cy5lbWl0KFNIT1dfTkFWX0VWRU5UKTtcbiAgfSBlbHNlIHtcbiAgICB0b2dnbGVCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG5cbiAgICB0b2dnbGVCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ09wZW4gTmF2aWdhdGlvbiBNZW51Jyk7XG4gICAgdG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcblxuICAgIGV2ZW50cy5lbWl0KEhJREVfTkFWX0VWRU5UKTtcbiAgfVxufVxuXG5leHBvcnQgeyBoYW5kbGVOYXZUb2dnbGVCdXR0b24gfTtcbiIsIi8vICogREFUQVxuaW1wb3J0IHsgZGF0YSB9IGZyb20gJy4vZGF0YS5qcyc7XG5cbi8vICogTE9HSUNcbmltcG9ydCB7IGxpbmtPYmplY3RGYWN0b3J5IH0gZnJvbSAnLi9sb2dpYy5qcyc7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVIZWFkZXIgfSBmcm9tICcuL21hcmt1cC9jcmVhdGUtaGVhZGVyLmpzJztcbmltcG9ydCB7IGNyZWF0ZU1haW4gfSBmcm9tICcuL21hcmt1cC9jcmVhdGUtbWFpbi5qcyc7XG5pbXBvcnQgeyBjcmVhdGVaaWdaYWdOYXYgfSBmcm9tICcuLi9jb21wb25lbnRzL3ppZy16YWctbmF2L2NyZWF0ZS16aWctemFnLW5hdi5qcyc7XG5cbi8vICogTU9ESUZJRVJTXG5pbXBvcnQgeyBtb2RpZnlHZW5lcmljTmF2TGlua3MgfSBmcm9tICcuL21vZGlmaWVycy9tb2RpZnktZ2VuZXJpYy1uYXYtbGlua3MuanMnO1xuaW1wb3J0IHsgbW9kaWZ5U2Vjb25kTmF2Q29udGFpbmVyIH0gZnJvbSAnLi9tb2RpZmllcnMvbW9kaWZ5LXNlY29uZC1uYXYtY29udGFpbmVyLmpzJztcbmltcG9ydCB7IGluamVjdEZvbnRBd2Vzb21lU2NyaXB0IH0gZnJvbSAnLi9zY3JpcHQtaW5qZWN0aW9ucy9pbmplY3QtZm9udC1hd2Vzb21lLXNjcmlwdC5qcyc7XG5pbXBvcnQgeyBpbmplY3RTdGFyTWF0ZXJpYWxJY29uIH0gZnJvbSAnLi9zY3JpcHQtaW5qZWN0aW9ucy9pbmplY3Qtc3Rhci1tYXRlcmlhbC1pY29uLmpzJztcblxuLy8gKiBTVFlMRVNIRUVUU1xuaW1wb3J0ICcuLi9jb21wb25lbnRzL3ppZy16YWctbmF2L3ppZy16YWctbmF2LnNjc3MnO1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cbmNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpO1xuXG4vLyAqIElOSkVDVCBmb250IGF3ZXNvbWUgc2NyaXB0XG5pbmplY3RGb250QXdlc29tZVNjcmlwdCgpO1xuaW5qZWN0U3Rhck1hdGVyaWFsSWNvbigpO1xuXG4vLyAqIENSRUFURSBoZWFkZXJcbmNvbnRlbnQuYXBwZW5kQ2hpbGQoY3JlYXRlSGVhZGVyKCkpOyAgXG5cbi8vICogQ1JFQVRFIG5hdlxuLyogXG4gIOKUjOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUkFxuICDilIIgLy8gUEFSQU06IGNyZWF0ZVppZ1phZ05hdiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4pSCXG4gIOKUgiAvLyA/IDEuIG9iamVjdE9mTGlzdHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDilIJcbiAg4pSCIC8vID8gMi4gaW5pdGlhbFBhZ2UgKHVzZWQgdG8gc2V0IHRoZSBhcmlhIC0gY3VycmVudCBhdHRyaWJ1dGUpICAgICAgICAgIOKUglxuICDilIIgLy8gPyAzLiBuYXZUeXBlIChhbmNob3IgZm9yICdhJyB0YWdzIC8gYnV0dG9uIGZvciAnYnV0dG9uIHRhZ3MpICAgICAgICAg4pSCXG4gIOKUgiAvLyA/IDQuIGlkIChzZXRzIG5hdmlnYXRpb25zIGlkIGZvciBhcmlhIGluIGNvbmp1bmN0aW9uIHdpdGggYSBuYXYgICAgICDilIJcbiAg4pSCICAgLy8gPyB0b2dnbGUgYnV0dG9uKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKUgiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOKUglxuICDilIIgLy8gPyA1LiBzcGVjaWFsTmF2TGlua0FyciBpcyBhbiBhcnJheSBvZiBwYWdlIG5hbWVzIHdpdGggdGhhdCB3aWxsICAgICAg4pSCXG4gIOKUgiAgIC8vID8gYmUgdXNlZCB0byBjcmVhdGUgYSBzcGVjaWFsIG5hdiBsaW5rcyB2aWEgYSB1bmlxdWUgY3NzIGNsYXNzICAgICDilIJcbiAg4pSU4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSYXG4gKi9cbmNvbnN0IGxpc3RPYmplY3RzID0ge1xuICBIb21lOiB7XG4gICAgbGlzdEVsZW1lbnRzOiBbXG4gICAgICBbJ0FsbCBUYXNrcycsICcjJ10sXG4gICAgICBbJ1RvZGF5JywgJyMnXSxcbiAgICAgIFsnTmV4dCA3IERheXMnLCAnIyddLFxuICAgICAgWydQcmlvcml0aWVzJywgJyMnXSxcbiAgICBdLFxuICB9LFxuICBQcm9qZWN0czoge1xuICAgIGxpc3RFbGVtZW50czogW10sXG4gIH0sXG59O1xuY29udGVudC5hcHBlbmRDaGlsZChcbiAgY3JlYXRlWmlnWmFnTmF2KGxpc3RPYmplY3RzLCAnQWxsIFRhc2tzJywgJ2J1dHRvbicsICduYXYtcHJpbWFyeS1hcmlhJylcbik7XG5cbi8vICogTU9ESUZJRVIgQ0FMTFMgKG9yZGVyIG1hdHRlcnMpXG5tb2RpZnlTZWNvbmROYXZDb250YWluZXIoKTtcbm1vZGlmeUdlbmVyaWNOYXZMaW5rcygpO1xuXG4vLyAhXG4vLyAhXG4vLyAhXG5cbmNvbnRlbnQuYXBwZW5kQ2hpbGQoY3JlYXRlTWFpbihsaW5rT2JqZWN0RmFjdG9yeSgnYWxsIHRhc2tzJywgZGF0YS5nZXRBbGxUYXNrcygpKSkpO1xuXG5cbi8vICFcbi8vICFcbi8vICEiLCIvLyAqIE1BUktVUFxuaW1wb3J0IHsgY3JlYXRlQWRkUHJvamVjdENvbnRhaW5lciB9IGZyb20gXCIuLi9tYXJrdXAvY3JlYXRlLWFkZC1wcm9qZWN0LWZvcm1cIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBtb2RpZnlTZWNvbmROYXZDb250YWluZXIoKSB7XG4gIGNvbnN0IHByb2plY3ROYXZMaXN0Q29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAnLm5hdi1saXN0LWNvbnRhaW5lcjpudGgtY2hpbGQoMiknXG4gICk7XG4gIHByb2plY3ROYXZMaXN0Q29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdC1uYXYtbGlzdC1jb250YWluZXInKTtcbiAgcHJvamVjdE5hdkxpc3RDb250YWluZXIuaW5zZXJ0QmVmb3JlKFxuICAgIGNyZWF0ZUFkZFByb2plY3RDb250YWluZXIoKSxcbiAgICBwcm9qZWN0TmF2TGlzdENvbnRhaW5lci5sYXN0Q2hpbGRcbiAgKTtcblxuICBjb25zdCBwcm9qZWN0TmF2TGlzdCA9IHByb2plY3ROYXZMaXN0Q29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5uYXYtdWwnKTtcbiAgcHJvamVjdE5hdkxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0LW5hdi1saXN0Jyk7XG59XG5cbmV4cG9ydCB7IG1vZGlmeVNlY29uZE5hdkNvbnRhaW5lciB9O1xuIiwiLy8gKiBNQVJLVVBcbmltcG9ydCB7IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyIH0gZnJvbSBcIi4vY3JlYXRlLW1haW4tY29udGVudC1jb250YWluZXJcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlTWFpbihtYWluVXBkYXRlT2JqZWN0KSB7IFxuICBjb25zdCBtYWluQ29udGVudENvbnRhaW5lciA9IGNyZWF0ZU1haW5Db250ZW50Q29udGFpbmVyKG1haW5VcGRhdGVPYmplY3QpO1xuICBjb25zdCBtYWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWFpbicpO1xuICBtYWluLmFwcGVuZENoaWxkKG1haW5Db250ZW50Q29udGFpbmVyKTtcblxuICByZXR1cm4gbWFpbjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTWFpbiB9OyIsImZ1bmN0aW9uIGFkZFNjcmlwdFRvSGVhZChzcmMsIGF0dHJpYnV0ZXMgPSB7fSkge1xuICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3NyYycsIHNyYyk7XG4gIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9qYXZhc2NyaXB0Jyk7XG5cbiAgZm9yIChsZXQgYXR0cmlidXRlIGluIGF0dHJpYnV0ZXMpIHtcbiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgYXR0cmlidXRlc1thdHRyaWJ1dGVdKTtcbiAgfVxuXG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbn1cblxuZXhwb3J0IHsgYWRkU2NyaXB0VG9IZWFkIH07IiwiLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGFkZFNjcmlwdFRvSGVhZCB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvYWRkLXNjcmlwdC10by1oZWFkXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGluamVjdEZvbnRBd2Vzb21lU2NyaXB0KCkge1xuICBjb25zdCBzb3VyY2UgPSAnaHR0cHM6Ly9raXQuZm9udGF3ZXNvbWUuY29tLzI0MTc2YWI5NzMuanMnO1xuICBjb25zdCBhdHRyaWJ1dGVzID0ge1xuICAgIGNyb3Nzb3JpZ2luOiAnYW5vbnltb3VzJyxcbiAgfTtcblxuICBhZGRTY3JpcHRUb0hlYWQoc291cmNlLCBhdHRyaWJ1dGVzKTtcblxufVxuXG5leHBvcnQgeyBpbmplY3RGb250QXdlc29tZVNjcmlwdCB9OyIsImZ1bmN0aW9uIGFkZExpbmtUb0hlYWQoaHJlZiwgcmVsLCBhdHRyaWJ1dGVzID0ge30pIHtcbiAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7XG4gIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG4gIGxpbmsuc2V0QXR0cmlidXRlKCdyZWwnLCByZWwpO1xuXG4gIGZvciAobGV0IGF0dHJpYnV0ZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgbGluay5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlLCBhdHRyaWJ1dGVzW2F0dHJpYnV0ZV0pO1xuICB9XG5cbiAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rKTtcbn1cblxuZXhwb3J0IHsgYWRkTGlua1RvSGVhZCB9O1xuIiwiLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGFkZExpbmtUb0hlYWQgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzL2FkZC1saW5rLXRvLWhlYWRcIjtcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gaW5qZWN0U3Rhck1hdGVyaWFsSWNvbigpIHtcbiAgY29uc3QgaHJlZiA9ICdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1hdGVyaWFsK1N5bWJvbHMrT3V0bGluZWQ6b3Bzeix3Z2h0LEZJTEwsR1JBREAyMC4uNDgsMTAwLi43MDAsMC4uMSwtNTAuLjIwMCc7XG4gIGNvbnN0IHJlbCA9ICdzdHlsZXNoZWV0JztcblxuICBhZGRMaW5rVG9IZWFkKGhyZWYsIHJlbCk7XG59XG5cbmV4cG9ydCB7IGluamVjdFN0YXJNYXRlcmlhbEljb24gfTsiLCIvLyAqIEFTU0VUU1xuaW1wb3J0IHByaW9yaXR5TG9nbyBmcm9tICcuLi8uLi9hc3NldHMvaW1hZ2VzL3ByaW9yaXR5LWxvZ28ud2VicCc7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL25hdi10b2dnbGUvbmF2LXRvZ2dsZS1tYXJrdXAnO1xuaW1wb3J0IHsgY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24gfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3RoZW1lLXRvZ2dsZS90aGVtZS10b2dnbGUubWFya3VwJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlSGVhZGVyKCkge1xuICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTtcblxuICBjb25zdCBoZWFkZXJMZWZ0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGhlYWRlckxlZnQuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLWxlZnQnKTtcblxuICBjb25zdCBoZWFkZXJMb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gIGhlYWRlckxvZ28uY2xhc3NMaXN0LmFkZCgnaGVhZGVyLWxvZ28nKTtcbiAgaGVhZGVyTG9nby5zZXRBdHRyaWJ1dGUoJ3NyYycsIHByaW9yaXR5TG9nbyk7XG4gIGhlYWRlckxvZ28uc2V0QXR0cmlidXRlKCdhbHQnLCAnUHJpb3JpdHkgTG9nbycpO1xuXG4gIGNvbnN0IGhlYWRlclRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgaGVhZGVyVGl0bGUuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLXRpdGxlJyk7XG4gIGhlYWRlclRpdGxlLnRleHRDb250ZW50ID0gJzxwcntpb31yaXR5Pic7XG5cbiAgaGVhZGVyTGVmdC5hcHBlbmRDaGlsZChoZWFkZXJMb2dvKTtcbiAgaGVhZGVyTGVmdC5hcHBlbmRDaGlsZChoZWFkZXJUaXRsZSk7XG5cbiAgY29uc3QgaGVhZGVyUmlnaHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgaGVhZGVyUmlnaHQuY2xhc3NMaXN0LmFkZCgnaGVhZGVyLXJpZ2h0Jyk7XG5cbiAgaGVhZGVyUmlnaHQuYXBwZW5kQ2hpbGQoY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24oKSk7XG4gIGhlYWRlclJpZ2h0LmFwcGVuZENoaWxkKGNyZWF0ZU5hdlRvZ2dsZUJ1dHRvbignbmF2LXByaW1hcnktYXJpYScpKTtcblxuICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVyTGVmdCk7XG4gIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJSaWdodCk7XG5cbiAgY29udGVudC5hcHBlbmRDaGlsZChoZWFkZXIpO1xuXG4gIHJldHVybiBoZWFkZXI7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUhlYWRlciB9O1xuIiwiLy8gKiBEZXBlbmRlbmNpZXM6IGh0bWwtc2NyaXB0LWluamVjdGlvbi5qc1xuXG4vLyAqIERlc2NyaXB0aW9uOiBDcmVhdGVzIGEgdGhlbWUgdG9nZ2xlIGJ1dHRvbi5cbi8vID8gQHJldHVybiB7SFRNTEVsZW1lbnR9IHRoZW1lVG9nZ2xlQ29udGFpbmVyXG5cbi8vICogQGV4YW1wbGVcbi8vID8gY29uc3QgdGhlbWVUb2dnbGVDb250YWluZXIgPSBjcmVhdGVUaGVtZVRvZ2dsZUJ1dHRvbigpO1xuLy8gPyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoZW1lVG9nZ2xlQ29udGFpbmVyKTtcblxuLy8gKiBTVFlMRVNIRUVUU1xuaW1wb3J0ICcuL3RoZW1lLXRvZ2dsZS5zY3NzJztcblxuLy8gPiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24oKSB7XG4gIGNvbnN0IHRoZW1lVG9nZ2xlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRoZW1lVG9nZ2xlQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAndGhlbWUtdG9nZ2xlLWNvbnRhaW5lcicpO1xuXG4gIGNvbnN0IHRoZW1lVG9nZ2xlQ2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICB0aGVtZVRvZ2dsZUNoZWNrYm94LnNldEF0dHJpYnV0ZSgndHlwZScsICdjaGVja2JveCcpO1xuICB0aGVtZVRvZ2dsZUNoZWNrYm94LnNldEF0dHJpYnV0ZSgnaWQnLCAndGhlbWUtdG9nZ2xlLWNoZWNrYm94Jyk7XG5cbiAgY29uc3QgdGhlbWVUb2dnbGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gIHRoZW1lVG9nZ2xlTGFiZWwuc2V0QXR0cmlidXRlKCdpZCcsICd0aGVtZS10b2dnbGUtbGFiZWwnKTtcbiAgdGhlbWVUb2dnbGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0aGVtZS10b2dnbGUtY2hlY2tib3gnKTtcblxuICBjb25zdCBzdW5JY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpO1xuICBzdW5JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLXN1bicpO1xuICBzdW5JY29uLnNldEF0dHJpYnV0ZSgnaWQnLCAnc3VuJyk7XG5cbiAgY29uc3QgbW9vbkljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpJyk7XG4gIG1vb25JY29uLmNsYXNzTGlzdC5hZGQoJ2ZhLXNvbGlkJywgJ2ZhLW1vb24nKTtcbiAgbW9vbkljb24uc2V0QXR0cmlidXRlKCdpZCcsICdtb29uJyk7XG5cbiAgdGhlbWVUb2dnbGVMYWJlbC5hcHBlbmRDaGlsZChzdW5JY29uKTtcbiAgdGhlbWVUb2dnbGVMYWJlbC5hcHBlbmRDaGlsZChtb29uSWNvbik7XG5cbiAgdGhlbWVUb2dnbGVDb250YWluZXIuYXBwZW5kQ2hpbGQodGhlbWVUb2dnbGVDaGVja2JveCk7XG4gIHRoZW1lVG9nZ2xlQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoZW1lVG9nZ2xlTGFiZWwpO1xuXG4gIHJldHVybiB0aGVtZVRvZ2dsZUNvbnRhaW5lcjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlVGhlbWVUb2dnbGVCdXR0b24gfTsiLCIvLyAqIEhBTkRMRVJTXG5pbXBvcnQgeyBoYW5kbGVOYXZUb2dnbGVCdXR0b24gfSBmcm9tICcuL2hhbmRsZS1uYXYtdG9nZ2xlLWJ1dHRvbic7XG5cbi8vICoqIFNUWUxFU1xuaW1wb3J0ICcuL25hdi10b2dnbGUuc2Nzcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZU5hdlRvZ2dsZUJ1dHRvbihhcmlhQ29udHJvbHNJRCkge1xuICBjb25zdCBuYXZUb2dnbGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ25hdi10b2dnbGUtYnV0dG9uJyk7XG4gIG5hdlRvZ2dsZUJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnT3BlbiBOYXZpZ2F0aW9uIE1lbnUnKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcbiAgbmF2VG9nZ2xlQnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1jb250cm9scycsIGFyaWFDb250cm9sc0lEKTtcblxuICBjb25zdCBuYXZUb2dnbGVCYXJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG5hdlRvZ2dsZUJhcnMuY2xhc3NMaXN0LmFkZCgnbmF2LXRvZ2dsZS1iYXJzJyk7XG5cbiAgbmF2VG9nZ2xlQnV0dG9uLmFwcGVuZENoaWxkKG5hdlRvZ2dsZUJhcnMpO1xuXG4gIG5hdlRvZ2dsZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZU5hdlRvZ2dsZUJ1dHRvbik7XG5cbiAgcmV0dXJuIG5hdlRvZ2dsZUJ1dHRvbjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlTmF2VG9nZ2xlQnV0dG9uIH07IiwiLy8gKiBIQU5ETEVSU1xuaW1wb3J0IHsgaGFuZGxlTmF2IH0gZnJvbSAnLi9oYW5kbGUtemlnLXphZy1uYXYuanMnO1xuXG4vLyAqIFNUWUxFU0hFRVRTXG5pbXBvcnQgJy4vemlnLXphZy1uYXYuc2Nzcyc7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vICogaW5pdGlhbFBhZ2UgaXMgYSBzdHJpbmcgdGhhdCB3aWxsIGJlIHVzZWQgdG8gc2V0IHRoZSBhcmlhLWN1cnJlbnQgYXR0cmlidXRlICh1c2UgdGhlIGluZGV4IG9mIHRoZSBwYWdlIG5hbWUpXG4vLyAqIGFuY2hvck9yQnV0dG9uIGlzIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBpZiB0aGUgbmF2IGxpbmtzIGFyZSBidXR0b25zIG9yIGFuY2hvcnMgb3B0aW9ucyBhcmUgJ2J1dHRvbicgb3IgJ2EnXG4vLyAqIGlkIGlzIGEgc3RyaW5nIHRoYXQgd2lsbCBiZSB1c2VkIHRvIHNldCB0aGUgaWQgYXR0cmlidXRlIG9mIHRoZSBuYXYncyBuZXN0ZWQgVUwgZWxlbWVudFxuXG5mdW5jdGlvbiBjcmVhdGVaaWdaYWdOYXYoXG4gIG9iamVjdE9mTGlzdHMsXG4gIGluaXRpYWxQYWdlLFxuICBhbmNob3JPckJ1dHRvbixcbiAgYXJpYUNvbnRyb2xzSUQsXG4gIHNwZWNpYWxOYXZMaXN0SXRlbUFycmF5XG4pIHtcbiAgY29uc3QgemlnWmFnTmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gIHppZ1phZ05hdi5jbGFzc0xpc3QuYWRkKCd6aWctemFnLW5hdicpO1xuICB6aWdaYWdOYXYuc2V0QXR0cmlidXRlKCdpZCcsIGFyaWFDb250cm9sc0lEKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdNYWluIE5hdmlnYXRpb24nKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCB0cnVlKTtcbiAgemlnWmFnTmF2LnNldEF0dHJpYnV0ZSgnZGF0YS12aXNpYmlsaXR5JywgZmFsc2UpO1xuXG4gIGZvciAoY29uc3QgbGlzdCBpbiBvYmplY3RPZkxpc3RzKSB7XG4gICAgY29uc3QgbGlzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxpc3RDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnbmF2LWxpc3QtY29udGFpbmVyJyk7XG5cbiAgICBjb25zdCBsaXN0SGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBsaXN0SGVhZGVyLmNsYXNzTGlzdC5hZGQoJ25hdi1saXN0LWhlYWRpbmcnKTtcbiAgICBsaXN0SGVhZGVyLnRleHRDb250ZW50ID0gbGlzdDtcbiAgICB6aWdaYWdOYXYuYXBwZW5kQ2hpbGQobGlzdEhlYWRlcik7XG5cbiAgICBjb25zdCBsaXN0VUwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIGxpc3RVTC5jbGFzc0xpc3QuYWRkKCduYXYtdWwnKTtcblxuICAgIGNvbnN0IGdyb3VwZWRMaXN0RWxlbWVudHMgPSBvYmplY3RPZkxpc3RzW2xpc3RdLmxpc3RFbGVtZW50cztcblxuICAgIGNvbnN0IGxpc3RGcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICBncm91cGVkTGlzdEVsZW1lbnRzLmZvckVhY2goKHBhZ2VOYW1lQW5kSHJlZiwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHBhZ2VOYW1lID0gcGFnZU5hbWVBbmRIcmVmWzBdO1xuICAgICAgY29uc3QgcGFnZUhyZWYgPSBwYWdlTmFtZUFuZEhyZWZbMV07XG5cbiAgICAgIGNvbnN0IG5hdkxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBhbmNob3JPckJ1dHRvbiA9PT0gJ2J1dHRvbidcbiAgICAgICAgICA/ICdidXR0b24nXG4gICAgICAgICAgOiAnYSdcbiAgICAgICAgICA/ICdhJ1xuICAgICAgICAgIDogY29uc29sZS5sb2coJ3ppZ1phZ05hdiBvbmx5IGFjY2VwdHMgXCJidXR0b25cIiBvciBcImFcIiBhcyBhcmd1bWVudHMnKVxuICAgICAgKTtcbiAgICAgIG5hdkxpbmsuY2xhc3NMaXN0LmFkZCgnbmF2LWxpbmsnKTtcbiAgICAgIGlmIChhbmNob3JPckJ1dHRvbiA9PT0gJ2EnKSB7XG4gICAgICAgIG5hdkxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgcGFnZUhyZWYpO1xuICAgICAgfVxuICAgICAgaWYgKHBhZ2VOYW1lID09PSBpbml0aWFsUGFnZSkge1xuICAgICAgICBuYXZMaW5rLnNldEF0dHJpYnV0ZSgnYXJpYS1jdXJyZW50JywgJ3BhZ2UnKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgbmF2TEkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgbmF2TEkuY2xhc3NMaXN0LmFkZCgnbmF2LWxpJyk7XG4gICAgICBpZiAoc3BlY2lhbE5hdkxpc3RJdGVtQXJyYXkpIHtcbiAgICAgICAgc3BlY2lhbE5hdkxpc3RJdGVtQXJyYXkuZm9yRWFjaCgoc3BlY2lhbE5hdkxpbmspID0+IHtcbiAgICAgICAgICBpZiAocGFnZU5hbWUgPT09IHNwZWNpYWxOYXZMaW5rKSB7XG4gICAgICAgICAgICBuYXZMSS5jbGFzc0xpc3QuYWRkKCdzcGVjaWFsLW5hdi1saScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIG5hdkxpbmsudGV4dENvbnRlbnQgPSBwYWdlTmFtZTtcbiAgICAgIG5hdkxpbmsuc2V0QXR0cmlidXRlKCdkYXRhLXBhZ2UtbmFtZScsIHBhZ2VOYW1lLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgICBuYXZMSS5hcHBlbmRDaGlsZChuYXZMaW5rKTtcbiAgICAgIGxpc3RGcmFnbWVudC5hcHBlbmRDaGlsZChuYXZMSSk7XG4gICAgfSk7XG5cbiAgICBsaXN0VUwuYXBwZW5kQ2hpbGQobGlzdEZyYWdtZW50KTtcbiAgICBcbiAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGxpc3RIZWFkZXIpO1xuICAgIGxpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQobGlzdFVMKTtcblxuICAgIHppZ1phZ05hdi5hcHBlbmRDaGlsZChsaXN0Q29udGFpbmVyKTtcbiAgfVxuXG4gIGhhbmRsZU5hdigpO1xuXG4gIHJldHVybiB6aWdaYWdOYXY7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVppZ1phZ05hdiB9OyIsIi8vICogRVZFTlQgTkFNRVNcbmltcG9ydCB7IEFERF9ORVdfUFJPSkVDVCB9IGZyb20gXCIuLi9ldmVudE5hbWVzXCI7XG5cbi8vICogTUFSS1VQXG5pbXBvcnQgeyBjcmVhdGVMaXN0SWNvbiB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2xpc3RJY29uL2NyZWF0ZS1saXN0LWljb25cIjtcblxuLy8gKiBVVElMSVRJRVNcbmltcG9ydCB7IGV2ZW50cyB9IGZyb20gXCIuLi8uLi91dGlsaXRpZXMvcHVic3ViXCI7XG5cbi8vID4gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGNyZWF0ZUFkZFByb2plY3RDb250YWluZXIoKSB7XG4gIGNvbnN0IHByb2plY3ROYW1lSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBwcm9qZWN0TmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdC1uYW1lLWlucHV0Jyk7XG4gIHByb2plY3ROYW1lSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKTtcbiAgcHJvamVjdE5hbWVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ0VudGVyIFByb2plY3QgTmFtZScpO1xuICBwcm9qZWN0TmFtZUlucHV0LnNldEF0dHJpYnV0ZSgnbWF4LWxlbmd0aCcsIDI0KTtcbiAgcHJvamVjdE5hbWVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGV2ZW50cy5lbWl0KEFERF9ORVdfUFJPSkVDVCk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdhZGQtcHJvamVjdC1idXR0b24nKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdyZXF1aXJlZCcsIHRydWUpO1xuICBhZGRQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnbmFtZScsICdhZGQtcHJvamVjdCcpO1xuICBhZGRQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnZm9ybScsICdhZGQtcHJvamVjdC1mb3JtJyk7XG4gIGFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ0FkZCBQcm9qZWN0Jyk7XG4gIGFkZFByb2plY3RCdXR0b24udGV4dENvbnRlbnQgPSAnYWRkJztcblxuICBjb25zdCBjYW5jZWxBZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdjYW5jZWwtYWRkLXByb2plY3QtYnV0dG9uJyk7XG4gIGNhbmNlbEFkZFByb2plY3RCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBjYW5jZWxBZGRQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICdDYW5jZWwgQWRkIFByb2plY3QnKTtcbiAgY2FuY2VsQWRkUHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdjYW5jZWwnO1xuXG4gIGNvbnN0IHByb2plY3RJbnB1dENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBwcm9qZWN0SW5wdXRDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdwcm9qZWN0LWlucHV0LWNvbnRhaW5lcicpO1xuICBwcm9qZWN0SW5wdXRDb250YWluZXIuYXBwZW5kQ2hpbGQoY3JlYXRlTGlzdEljb24oKSk7XG4gIHByb2plY3RJbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZUlucHV0KTtcblxuICBjb25zdCBwcm9qZWN0QnV0dG9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBwcm9qZWN0QnV0dG9uc0NvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Byb2plY3QtYnV0dG9ucy1jb250YWluZXInKTtcbiAgcHJvamVjdEJ1dHRvbnNDb250YWluZXIuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdEJ1dHRvbik7XG4gIHByb2plY3RCdXR0b25zQ29udGFpbmVyLmFwcGVuZENoaWxkKGNhbmNlbEFkZFByb2plY3RCdXR0b24pO1xuXG4gIGNvbnN0IHByb2plY3RGb3JtQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZC1wcm9qZWN0LWZvcm0nKTtcbiAgcHJvamVjdEZvcm1Db250YWluZXIuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ2hpZGRlbicpO1xuICBwcm9qZWN0Rm9ybUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2RhdGEtaGlkZGVuJywgdHJ1ZSk7XG5cbiAgcHJvamVjdEZvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdElucHV0Q29udGFpbmVyKTtcbiAgcHJvamVjdEZvcm1Db250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdEJ1dHRvbnNDb250YWluZXIpO1xuXG4gIGNvbnN0IG5ld1Byb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbmV3UHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ25ldy1wcm9qZWN0LWJ1dHRvbicpO1xuICBuZXdQcm9qZWN0QnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgbmV3UHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnTmV3IFByb2plY3QnKTtcbiAgbmV3UHJvamVjdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdOZXcgUHJvamVjdCc7XG5cbiAgY29uc3QgYWRkUHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBhZGRQcm9qZWN0Q29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkLXByb2plY3QtY29udGFpbmVyJyk7XG4gIGFkZFByb2plY3RDb250YWluZXIuYXBwZW5kQ2hpbGQobmV3UHJvamVjdEJ1dHRvbik7XG4gIGFkZFByb2plY3RDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdEZvcm1Db250YWluZXIpO1xuXG4gIHJldHVybiBhZGRQcm9qZWN0Q29udGFpbmVyO1xufVxuXG5leHBvcnQgeyBjcmVhdGVBZGRQcm9qZWN0Q29udGFpbmVyIH07XG4iLCJmdW5jdGlvbiBtb2RpZnlHZW5lcmljTmF2TGlua3MoKSB7XG4gIGNvbnN0IGdlbmVyaWNOYXZMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXYtbGlzdC1jb250YWluZXI6bm90KCNwcm9qZWN0LW5hdi1saXN0LWNvbnRhaW5lcikgLm5hdi1saW5rJyk7XG5cbiAgZ2VuZXJpY05hdkxpbmtzLmZvckVhY2goKG5hdkxpbmspID0+IHtcbiAgICBpZiAobmF2TGluay5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGFnZS1uYW1lJykgPT09ICdhbGwgdGFza3MnXG4gICAgICB8fCBuYXZMaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1wYWdlLW5hbWUnKSA9PT0gJ3RvZGF5J1xuICAgICAgfHwgbmF2TGluay5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGFnZS1uYW1lJykgPT09ICduZXh0IDcgZGF5cycpXG4gICAge1xuICAgICAgbmF2TGluay5zZXRBdHRyaWJ1dGUoJ2RhdGEtYXJyYW5nZS1tZXRob2QnLCAnc29ydCcpO1xuICAgIH0gZWxzZSBpZiAobmF2TGluay5nZXRBdHRyaWJ1dGUoJ2RhdGEtcGFnZS1uYW1lJykgPT09ICdwcmlvcml0aWVzJykge1xuICAgICAgbmF2TGluay5zZXRBdHRyaWJ1dGUoJ2RhdGEtYXJyYW5nZS1tZXRob2QnLCAnZmlsdGVyJyk7XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IHsgbW9kaWZ5R2VuZXJpY05hdkxpbmtzIH07Il0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJnIiwiZ2xvYmFsVGhpcyIsInRoaXMiLCJGdW5jdGlvbiIsImUiLCJ3aW5kb3ciLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJkb2N1bWVudCIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJsZW5ndGgiLCJpIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsImVuY2Fwc3VsYXRlZFByb2plY3RBcnJheSIsImRhdGEiLCJhZGRUYXNrVG9Qcm9qZWN0IiwicHJvamVjdE5hbWUiLCJ0YXNrIiwiZmluZCIsInByb2plY3QiLCJnZXROYW1lIiwiYWRkVGFzayIsImdldFByb2plY3RBcnJheSIsImNvbmNhdCIsImFycmFuZ2VQcm9qZWN0QXJyYXkiLCJjYWxsYmFjayIsImZpbHRlciIsImdldFByb2plY3RBcnJheUxlbmd0aCIsImFkZFByb2plY3QiLCJwdXNoIiwiZGVsZXRlUHJvamVjdCIsInNwbGljZSIsImluZGV4T2YiLCJnZXRBbGxUYXNrcyIsImZsYXRNYXAiLCJnZXRUYXNrQXJyYXkiLCJnZXRQcm9qZWN0T2JqZWN0IiwiTWF0aCIsInBvdyIsIm1pbGxpc2Vjb25kc0luTWludXRlIiwibWlsbGlzZWNvbmRzSW5Ib3VyIiwicGFyc2VJU08iLCJhcmd1bWVudCIsIm9wdGlvbnMiLCJhZGRpdGlvbmFsRGlnaXRzIiwiZGF0ZVN0cmluZ3MiLCJkYXRlU3RyaW5nIiwiYXJyYXkiLCJzcGxpdCIsInBhdHRlcm5zIiwiZGF0ZVRpbWVEZWxpbWl0ZXIiLCJ0aW1lU3RyaW5nIiwidGVzdCIsImRhdGUiLCJ0aW1lWm9uZURlbGltaXRlciIsInN1YnN0ciIsInRva2VuIiwidGltZXpvbmUiLCJleGVjIiwidGltZSIsInNwbGl0RGF0ZVN0cmluZyIsInBhcnNlWWVhclJlc3VsdCIsInJlZ2V4IiwiUmVnRXhwIiwiY2FwdHVyZXMiLCJtYXRjaCIsInllYXIiLCJOYU4iLCJyZXN0RGF0ZVN0cmluZyIsInBhcnNlSW50IiwiY2VudHVyeSIsInNsaWNlIiwicGFyc2VZZWFyIiwiRGF0ZSIsImRhdGVSZWdleCIsImlzV2Vla0RhdGUiLCJkYXlPZlllYXIiLCJwYXJzZURhdGVVbml0IiwibW9udGgiLCJkYXkiLCJ3ZWVrIiwiZGF5T2ZXZWVrIiwiX3llYXIiLCJ2YWxpZGF0ZVdlZWtEYXRlIiwiaXNvV2Vla1llYXIiLCJzZXRVVENGdWxsWWVhciIsImRpZmYiLCJnZXRVVENEYXkiLCJzZXRVVENEYXRlIiwiZ2V0VVRDRGF0ZSIsImRheU9mSVNPV2Vla1llYXIiLCJkYXlzSW5Nb250aHMiLCJpc0xlYXBZZWFySW5kZXgiLCJ2YWxpZGF0ZURhdGUiLCJ2YWxpZGF0ZURheU9mWWVhckRhdGUiLCJtYXgiLCJwYXJzZURhdGUiLCJpc05hTiIsImdldFRpbWUiLCJ0aW1lc3RhbXAiLCJvZmZzZXQiLCJ0aW1lUmVnZXgiLCJob3VycyIsInBhcnNlVGltZVVuaXQiLCJtaW51dGVzIiwic2Vjb25kcyIsInZhbGlkYXRlVGltZSIsInBhcnNlVGltZSIsImRpcnR5RGF0ZSIsInJlc3VsdCIsInNldEZ1bGxZZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNb250aCIsInNldEhvdXJzIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInRpbWV6b25lU3RyaW5nIiwidGltZXpvbmVSZWdleCIsInNpZ24iLCJfaG91cnMiLCJ2YWxpZGF0ZVRpbWV6b25lIiwicGFyc2VUaW1lem9uZSIsInZhbHVlIiwicGFyc2VGbG9hdCIsInRvRGF0ZSIsImFyZ1N0ciIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImNvbnN0cnVjdG9yIiwiY29tcGFyZUFzYyIsImRhdGVMZWZ0IiwiZGF0ZVJpZ2h0IiwiX2RhdGVMZWZ0IiwiX2RhdGVSaWdodCIsImxpbmtPYmplY3RGYWN0b3J5IiwibmFtZSIsInN0YXRlIiwidGFza3MiLCJ0eXBlIiwiZ2V0VHlwZSIsImdldFNoYWxsb3dDb3B5IiwiX29iamVjdFNwcmVhZCIsInNvcnRUYXNrQXJyYXkiLCJzb3J0IiwiYSIsImIiLCJkYXRlU3RyaW5nQSIsImdldER1ZURhdGUiLCJkYXRlU3RyaW5nQiIsIlNIT1dfTkFWX0VWRU5UIiwiSElERV9OQVZfRVZFTlQiLCJUT0dHTEVfQUREX1BST0pFQ1RfRk9STSIsIlRPR0dMRV9BRERfVEFTS19GT1JNIiwiVE9HR0xFX0VESVRfVEFTS19GT1JNIiwiQUREX05FV19QUk9KRUNUIiwiQUREX05FV19UQVNLIiwiSEFORExFX01BSU4iLCJoYW5kbGVUYXNrSXRlbUludGVyYWN0YWJsZXMiLCJldmVudCIsInRhc2tOYW1lIiwidGFyZ2V0IiwidGFyZ2V0VGFnTmFtZSIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsInRhc2tJdGVtIiwiY2xvc2VzdCIsImNvcnJlc3BvbmRpbmdUYXNrT2JqZWN0IiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiaGFuZGxlciIsInRhc2tPYmplY3QiLCJpc0NoZWNrZWQiLCJjaGVja2JveCIsImNoZWNrZWQiLCJzZXRDb21wbGV0ZWQiLCJzZXRBdHRyaWJ1dGUiLCJpc1ByaW9yaXR5IiwicHJpb3JpdHlCdXR0b24iLCJnZXRBdHRyaWJ1dGUiLCJ0b2dnbGVTdGFySWNvbiIsInNldFByaW9yaXR5IiwiZW1pdEVkaXRUYXNrRm9ybVZpc2liaWxpdHlUb2dnbGUiLCJjbGFzc05hbWUiLCJzZXRBdHRyaWJ1dGVzIiwiZWxlbWVudCIsImF0dHJpYnV0ZXMiLCJrZXkiLCJnZXRUYXNrTGlzdENvbnRlbnQiLCJtYWluVXBkYXRlT2JqZWN0IiwidGFza0FycmF5IiwibWFpblVwZGF0ZU9iamVjdFR5cGUiLCJwbGFjZWhvbGRlclRleHQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwicGxhY2Vob2xkZXJDb250YWluZXIiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZVRhc2tMaXN0UGxhY2Vob2xkZXIiLCJ0YXNrTGlzdEZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImZvckVhY2giLCJ0YXNrVGl0bGUiLCJ0YXNrRGV0YWlscyIsImdldERldGFpbHMiLCJ0YXNrRHVlRGF0ZSIsImlzVGFza0NvbXBsZXRlIiwiZ2V0Q29tcGxldGVkIiwiaXNUYXNrUHJpb3JpdHkiLCJnZXRQcmlvcml0eSIsInRhc2tDaGVja0JveENvbnRhaW5lciIsInRhc2tJdGVtQ2hlY2tib3giLCJ0YXNrSXRlbVRpdGxlIiwidGFza0l0ZW1EZXRhaWxzIiwiZGF0ZU9wdGlvbnMiLCJ0YXNrSXRlbURhdGUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJ0YXNrUHJpb3JpdHlTdGFySWNvbiIsInRhc2tQcmlvcml0eVN0YXJCdXR0b24iLCJtb2RpZnlUYXNrQnV0dG9uIiwibW9kaWZ5VGFza0J1dHRvbkljb24iLCJ0YXNrQnV0dG9uQ29udGFpbmVyIiwidGFza1JpZ2h0U2lkZUNvbnRhaW5lciIsInRyaW0iLCJjcmVhdGVUYXNrSXRlbSIsImNyZWF0ZVRhc2tMaXN0IiwidGFza0xpc3QiLCJ0YXNrTGlzdENvbnRlbnQiLCJjaGVja1RhcmdldEVsZW1lbnRFeGlzdGVuY2UiLCJzZWxlY3RvciIsInRhcmdldEVsZW1lbnQiLCJjb25zb2xlIiwiZXJyb3IiLCJoYW5kbGVTYXZlRWRpdFRhc2tCdXR0b24iLCJlZGl0VGFza0Zvcm0iLCJ0YXNrTmFtZUlucHV0IiwidGFza0RldGFpbHNJbnB1dCIsInRhc2tEdWVEYXRlSW5wdXQiLCJ0b0lTT1N0cmluZyIsImFsZXJ0IiwicmVzZXQiLCJ0YXNrVG9FZGl0T2JqZWN0Iiwic2V0TmFtZSIsInNldERldGFpbHMiLCJzZXREdWVEYXRlIiwibWFpblN0YXRlIiwibGlua1R5cGUiLCJoYW5kbGVUYXNrTGlzdCIsImxpbmtOYW1lIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwiYWN0aXZlTGluayIsIm1haW5Db250ZW50IiwibmV3VGFza0xpc3QiLCJyZW1vdmUiLCJjaGVja1Rhc2tMaXN0UG9wdWxhdGlvbiIsImhhbmRsZVRhc2tJdGVtcyIsInJlZnJlc2hUYXNrTGlzdEZyb21MaW5rIiwiaGFuZGxlRWRpdFRhc2tNb2RhbEJ1dHRvbnMiLCJjb250YWlucyIsInRhcmdldElkIiwiaXNDYW5jZWxCdXR0b24iLCJjbG9zZU1vZGFsRW5oYW5jZWQiLCJjbG9zZSIsIm1vZGFsU3RhdGUiLCJldmVudHMiLCJvbiIsImV2ZW50TmFtZSIsImZuIiwib2ZmIiwiZW1pdCIsImlzRWRpdFRhc2tGb3JtRXZlbnRQdWJsaXNoZWQiLCJ0b2dnbGVNb2RhbEJ1dHRvbkNvbnRhaW5lckV2ZW50TGlzdGVuZXJzIiwiZWRpdFRhc2tCdXR0b25Db250YWluZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZUVkaXRUYXNrRm9ybVZpc2liaWxpdHkiLCJtb2RhbCIsImVkaXRUYXNrTW9kYWwiLCJ0YXNrTW9kYWxWaXNpYmlsaXR5T25DYWxsIiwic2V0TW9kYWxQbGFjZWhvbGRlcnMiLCJzaG93TW9kYWwiLCJvbkFuaW1hdGlvbkVuZCIsInRhc2tMaXN0RWxlbWVudCIsImNvbnRlbnRFbGVtZW50IiwiZWRpdFRhc2tIZWFkaW5nIiwidGl0bGVMYWJlbCIsInRpdGxlSW5wdXQiLCJwcmV2ZW50RGVmYXVsdCIsInRpdGxlQ29udGFpbmVyIiwiZGV0YWlsc0xhYmVsIiwiZGV0YWlsc0lucHV0IiwiZGV0YWlsc0NvbnRhaW5lciIsImR1ZURhdGVMYWJlbCIsImR1ZURhdGVJbnB1dCIsImR1ZURhdGVDb250YWluZXIiLCJzYXZlRWRpdFRhc2tCdXR0b24iLCJjYW5jZWxFZGl0VGFza0J1dHRvbiIsImVkaXRUYXNrRm9ybUNvbnRhaW5lciIsImNyZWF0ZUVkaXRUYXNrRm9ybSIsImNyZWF0ZUVkaXRUYXNrTW9kYWwiLCJhZGRUYXNrTGlzdEV2ZW50TGlzdGVuZXIiLCJjb250YWluZXJzIiwiY29udGFpbmVyc1dpdGhPdmVyZmxvdyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjb250YWluZXIiLCJjbGllbnRXaWR0aCIsInNjcm9sbFdpZHRoIiwiY29udGFpbmVyRWxlbWVudCIsIm1heFNjcm9sbCIsInNjcm9sbERpcmVjdGlvbiIsInNjcm9sbEVsZW1lbnRDb250ZW50IiwiY3VycmVudFNjcm9sbCIsInNjcm9sbExlZnQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJlbmFibGVUYXNrRGV0YWlsT3ZlckZsb3dTY3JvbGxBbmltYXRpb25zIiwidGFza0xpc3RGaXJzdENoaWxkIiwiZmlyc3RDaGlsZCIsImhhc0F0dHJpYnV0ZSIsInBhcmVudE5vZGUiLCJwcm9qZWN0T2JqZWN0IiwiYWRkTmV3VGFzayIsInRhc2tGb3JtIiwiZHVlRGF0ZSIsImRldGFpbHMiLCJwcmlvcml0eSIsImNvbXBsZXRlZCIsImJvb2xlYW4iLCJzZXRQcm9qZWN0TmFtZSIsImdldFByb2plY3ROYW1lIiwidGFza0ZhY3RvcnkiLCJlbWl0VG9nZ2xlVGFza0Zvcm1WaXNpYmlsaXR5IiwiZW1pdEluaXRpYWxpemVUYXNrIiwidGFza0NvbXBvbmVudFN0YXRlIiwiZm9ybVN0YXRlIiwiaXNBZGRUYXNrQnV0dG9uTGlzdGVuZXJBdHRhY2hlZCIsInNldERpc3BsYXlOb25lIiwidG9nZ2xlQWRkVGFza0Zvcm0iLCJhZGRUYXNrRm9ybUNvbnRhaW5lciIsImN1cnJlbnRUYXNrRm9ybVN0YXRlIiwiYWRkVGFza0J1dHRvbiIsInRvZ2dsZVRhc2tBZGRCdXR0b25MaXN0ZW5lciIsInRvZ2dsZVRhc2tBZGRFdmVudCIsImNhbmNlbEFkZFRhc2tCdXR0b24iLCJ0b2dnbGVDYW5jZWxCdXR0b25MaXN0ZW5lciIsImhhbmRsZVRhc2tDYW5jZWxCdXR0b24iLCJjcmVhdGVNYWluQ29udGVudENvbnRhaW5lciIsIm1haW5IZWFkaW5nIiwiaGVhZGluZ1RleHRDb250ZW50IiwiYWRkVGFza0NvbnRhaW5lciIsIm1haW5Db250ZW50Q29udGFpbmVyIiwib2JqZWN0VHlwZSIsImFkZFRhc2tGb3JtQnV0dG9uIiwiYWRkVGFza0J1dHRvbkNvbnRhaW5lciIsImNyZWF0ZUFkZFRhc2tCdXR0b24iLCJhZGRUYXNrRm9ybSIsImNyZWF0ZUFkZFRhc2tGb3JtIiwiaGFuZGxlTWFpbiIsIm5ld0N1cnJlbnROYXZMaW5rIiwiaXNQcm9qZWN0TGluayIsImlzUGFnZUxpbmsiLCJwcm9qZWN0QXJyYXkiLCJwcm9qZWN0VmFsdWUiLCJsaW5rT2JqZWN0IiwicmVzb2x2ZU1haW5VcGRhdGVPYmplY3QiLCJtYWluVXBkYXRlT2JqZWN0TmFtZSIsIm5ld01haW5Db250YWluZXIiLCJtYWluRWxlbWVudCIsInJlbW92ZUNoaWxkIiwiY2xlYXJNYWluIiwiYWRkVGFza0Zvcm1PcGVuZXJCdXR0b24iLCJ0b2dnbGVBZGRUYXNrQnV0dG9uQ2xpY2tMaXN0ZW5lciIsInRvZ2dsZUFkZFRhc2tCdXR0b25FdmVudFB1Ymxpc2hpbmciLCJoYW5kbGVOYXZUb2dnbGVCdXR0b24iLCJvbmNlIiwiY2xvc2VOYXZQb3N0VHJhbnNpdGlvbiIsInNldEFjdGl2ZUxpbmsiLCJpc1RhcmdldEVsZW1lbnROYXZMaW5rIiwiaXNUYXJnZXROYXZMaW5rIiwiaXNUYXJnZXRMaW5rQWN0aXZlIiwiY2hlY2tJZkNsaWNrYWJsZU5hdkxpbmsiLCJub2RlbGlzdCIsInJlbW92ZUF0dHJpYnV0ZSIsInJlbW92ZU9sZEFyaWFDdXJyZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInNldEFyaWFDdXJyZW50IiwiZW1pdFVwZGF0ZU1haW4iLCJoYW5kbGVOYXZMaW5rcyIsInppZ1phZ05hdiIsIm5hdlN0YXRlIiwib3BlbiIsImNyZWF0ZUxpc3RJY29uIiwibGlzdEljb25Db250YWluZXIiLCJsaXN0SWNvbkJhcnMiLCJBZGROZXdQcm9qZWN0IiwicHJvamVjdEZvcm0iLCJwcm9qZWN0RmFjdG9yeSIsInByb2plY3RMaXN0IiwicmV2ZXJzZWRQcm9qZWN0QXJyYXkiLCJyZXZlcnNlIiwicHJvamVjdEJ1dHRvbiIsImxpc3RJY29uIiwicHJvamVjdExpIiwiY3JlYXRlUHJvamVjdEl0ZW0iLCJ1cGRhdGVQcm9qZWN0TGlzdCIsInN0eWxlIiwib3ZlcmZsb3ciLCJjaGVja0xpc3RPdmVyZmxvdyIsImVtaXRQcm9qZWN0Rm9ybVZpc2liaWxpdHlUb2dnbGUiLCJmb3JtQ29tcG9uZW50U3RhdGUiLCJwcm9qZWN0Rm9ybVN0YXRlIiwiZW1pdEluaXRpYWxpemVQcm9qZWN0IiwidG9nZ2xlQWRkUHJvamVjdEZvcm0iLCJwcm9qZWN0Rm9ybUNvbnRhaW5lciIsInByb2plY3RBZGRCdXR0b24iLCJ0b2dnbGVQcm9qZWN0QWRkQnV0dG9uTGlzdGVuZXIiLCJ0b2dnbGVQcm9qZWN0QWRkRXZlbnQiLCJjYW5jZWxBZGRQcm9qZWN0QnV0dG9uIiwiZ2V0RWxlbWVudEJ5SWQiLCJoYW5kbGVQcm9qZWN0Q2FuY2VsQnV0dG9uIiwiaGFuZGxlTmV3UHJvamVjdEJ1dHRvbiIsIm5ld1Byb2plY3RCdXR0b24iLCJ0b2dnbGVOZXdQcm9qZWN0QnV0dG9uRXZlbnRQdWJsaXNoaW5nIiwiYW5pbWF0aW5nIiwiaGlkZU5hdiIsImluaXRpYXRlSGlkZU5hdiIsInNob3dOYXYiLCJ0b2dnbGVCdXR0b24iLCJwcm9qZWN0TmF2TGlzdENvbnRhaW5lciIsIm1haW4iLCJjb250ZW50Iiwic2NyaXB0IiwiYXR0cmlidXRlIiwiaGVhZCIsImFkZFNjcmlwdFRvSGVhZCIsImNyb3Nzb3JpZ2luIiwiaHJlZiIsInJlbCIsImxpbmsiLCJhZGRMaW5rVG9IZWFkIiwiaGVhZGVyIiwiaGVhZGVyTGVmdCIsImhlYWRlckxvZ28iLCJwcmlvcml0eUxvZ28iLCJoZWFkZXJUaXRsZSIsImhlYWRlclJpZ2h0IiwidGhlbWVUb2dnbGVDb250YWluZXIiLCJ0aGVtZVRvZ2dsZUNoZWNrYm94IiwidGhlbWVUb2dnbGVMYWJlbCIsInN1bkljb24iLCJtb29uSWNvbiIsImNyZWF0ZVRoZW1lVG9nZ2xlQnV0dG9uIiwiYXJpYUNvbnRyb2xzSUQiLCJuYXZUb2dnbGVCdXR0b24iLCJuYXZUb2dnbGVCYXJzIiwiY3JlYXRlTmF2VG9nZ2xlQnV0dG9uIiwiY3JlYXRlSGVhZGVyIiwib2JqZWN0T2ZMaXN0cyIsImluaXRpYWxQYWdlIiwiYW5jaG9yT3JCdXR0b24iLCJzcGVjaWFsTmF2TGlzdEl0ZW1BcnJheSIsIl9sb29wIiwibGlzdENvbnRhaW5lciIsImxpc3RIZWFkZXIiLCJsaXN0IiwibGlzdFVMIiwiZ3JvdXBlZExpc3RFbGVtZW50cyIsImxpc3RFbGVtZW50cyIsImxpc3RGcmFnbWVudCIsInBhZ2VOYW1lQW5kSHJlZiIsImluZGV4IiwicGFnZU5hbWUiLCJuYXZMaW5rIiwibmF2TEkiLCJjcmVhdGVaaWdaYWdOYXYiLCJIb21lIiwiUHJvamVjdHMiLCJpbnNlcnRCZWZvcmUiLCJwcm9qZWN0TmFtZUlucHV0IiwiYWRkUHJvamVjdEJ1dHRvbiIsInByb2plY3RJbnB1dENvbnRhaW5lciIsInByb2plY3RCdXR0b25zQ29udGFpbmVyIiwiYWRkUHJvamVjdENvbnRhaW5lciIsImNyZWF0ZUFkZFByb2plY3RDb250YWluZXIiLCJsYXN0Q2hpbGQiXSwic291cmNlUm9vdCI6IiJ9