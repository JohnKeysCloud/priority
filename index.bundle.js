(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!e;)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{addTaskToProject:function(t,n){e.find((function(e){return e.getName()===t})).addTask(n)},getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return e.find((function(e){return e.getName()===t}))}});Math.pow(10,8);const a=6e4,r=36e5;function i(t,e){const n=e?.additionalDigits??2,i=function(t){const e={},n=t.split(o.dateTimeDelimiter);let a;if(n.length>2)return e;if(/:/.test(n[0])?a=n[0]:(e.date=n[0],a=n[1],o.timeZoneDelimiter.test(e.date)&&(e.date=t.split(o.timeZoneDelimiter)[0],a=t.substr(e.date.length,t.length))),a){const t=o.timezone.exec(a);t?(e.time=a.replace(t[1],""),e.timezone=t[1]):e.time=a}return e}(t);let f;if(i.date){const t=function(t,e){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),a=t.match(n);if(!a)return{year:NaN,restDateString:""};const r=a[1]?parseInt(a[1]):null,i=a[2]?parseInt(a[2]):null;return{year:null===i?r:100*i,restDateString:t.slice((a[1]||a[2]).length)}}(i.date,n);f=function(t,e){if(null===e)return new Date(NaN);const n=t.match(d);if(!n)return new Date(NaN);const a=!!n[4],r=u(n[1]),i=u(n[2])-1,o=u(n[3]),c=u(n[4]),s=u(n[5])-1;if(a)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,c,s)?function(t,e,n){const a=new Date(0);a.setUTCFullYear(t,0,4);const r=7*(e-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+r),a}(e,c,s):new Date(NaN);{const t=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(m[e]||(p(t)?29:28))}(e,i,o)&&function(t,e){return e>=1&&e<=(p(t)?366:365)}(e,r)?(t.setUTCFullYear(e,i,Math.max(r,o)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!f||isNaN(f.getTime()))return new Date(NaN);const b=f.getTime();let v,h=0;if(i.time&&(h=function(t){const e=t.match(c);if(!e)return NaN;const n=l(e[1]),i=l(e[2]),o=l(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,i,o)?n*r+i*a+1e3*o:NaN}(i.time),isNaN(h)))return new Date(NaN);if(!i.timezone){const t=new Date(b+h),e=new Date(0);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return v=function(t){if("Z"===t)return 0;const e=t.match(s);if(!e)return 0;const n="+"===e[1]?-1:1,i=parseInt(e[2]),o=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,o)?n*(i*r+o*a):NaN}(i.timezone),isNaN(v)?new Date(NaN):new Date(b+h+v)}const o={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},d=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,c=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,s=/^([+-])(\d{2})(?::?(\d{2}))?$/;function u(t){return t?parseInt(t):1}function l(t){return t&&parseFloat(t.replace(",","."))||0}const m=[31,null,31,30,31,30,31,31,30,31,30,31];function p(t){return t%400==0||t%4==0&&t%100!=0}function f(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function b(t,e){const n=f(t),a=f(e),r=n.getTime()-a.getTime();return r<0?-1:r>0?1:r}function v(t){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},v(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function g(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){var a,r,i;a=t,r=e,i=n[e],(r=function(t){var e=function(t,e){if("object"!==v(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==v(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===v(e)?e:String(e)}(r))in a?Object.defineProperty(a,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):a[r]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},sortTaskArray:function(){n.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return b(i(n),i(a))}))},getTaskArray:function(){return n.tasks}}}const A=t.p+"f0f19e6f57687481453e.webp";var y="showNav",E="hideNav",k="handleMain",C="toggleAddProjectForm",j="addNewProject",L="toggelAddTaskForm",D="addNewTask";function N(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();if(e.length>0){var a=document.createDocumentFragment();return e.length>1&&t.sortTaskArray(),e.forEach((function(t){a.appendChild(function(t){var e=document.createElement("div");e.classList.add("task-checkbox-container");var n=document.createElement("input");n.setAttribute("type","checkbox"),n.classList.add("task-item-checkbox"),e.appendChild(n);var a=document.createElement("h4");a.classList.add("task-item-title"),a.textContent=t.getName();var r=document.createElement("p");r.classList.add("task-item-details"),r.textContent=t.getDetails();var i,o,d=document.createElement("p");d.classList.add("task-item-date"),d.textContent="Due ".concat((i=t.getDueDate(),o={year:"numeric",month:"short",day:"numeric"},new Date(i).toLocaleDateString("en-us",o)));var c=document.createElement("input");c.classList.add("task-priority-checkbox"),c.setAttribute("type","checkbox"),c.setAttribute("aria-label","Prioritize Task");var s=document.createElement("button");s.classList.add("modify-task-button"),s.setAttribute("type","button"),s.setAttribute("aria-label","Edit Task");var u=document.createElement("i");u.classList.add("fa-solid","fa-ellipsis-vertical"),s.appendChild(u);var l=document.createElement("div");l.classList.add("task-item-button-container"),l.appendChild(c),l.appendChild(s);var m=document.createElement("div");m.classList.add("task-right-side-container"),m.appendChild(d),m.appendChild(l);var p=document.createElement("li");p.classList.add("task-item"),p.appendChild(e),p.appendChild(a),console.log(t.getDetails()),""!==t.getDetails()&&p.appendChild(r),p.appendChild(m);var f=document.createElement("dialog");f.classList.add("task-edit-modal");var b=document.createElement("button");b.classList.add("task-edit-button"),b.setAttribute("type","button"),b.setAttribute("aria-label","Edit Task"),f.appendChild(b);var v=document.createElement("button");return v.classList.add("task-delete-button"),v.setAttribute("type","button"),v.setAttribute("aria-label","Delete Task"),f.appendChild(v),p}(t))})),a}}function T(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=N(t);return n&&e.appendChild(n),e}function w(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}var S={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}};function P(){var t,e;(t=document.querySelectorAll(".task-item-details"),e=[],t.forEach((function(t){t.clientWidth<t.scrollWidth&&e.push(t)})),e).forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(r){var i=e.scrollLeft+.5*a;i>=n?a=-1:i<=0&&(a=1),e.scrollLeft=i,requestAnimationFrame(t)}()}))}function x(){var t=w("#add-task-form"),e=t.querySelector("#title"),a=t.querySelector("#details"),r=t.querySelector("#due-date"),i=e.value.trim(),o=a.value.trim(),d=r.value;if(!i)return alert("Enter Task Name");if(!d)return alert("Enter Task Due Date");if(console.log(new Date),console.log((new Date).toString()),console.log((new Date).toLocaleDateString()),console.log((new Date).toISOString()),console.log((new Date).toISOString().slice(0,10)),console.log(d),d<(new Date).toISOString().slice(0,10))return alert("Enter Valid Due Date");t.reset();var c=B.projectName,s=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof n&&"string"!=typeof a)throw new Error("⚠️ name, details & due-date, must all be strings");var r={name:t,projectName:e,details:n,dueDate:a,priority:!1,completed:!1};return{getName:function(){return r.name},setName:function(t){r.name=t},getDetails:function(){return r.details},setDetails:function(t){r.details=t},getDueDate:function(){return r.dueDate},setDueDate:function(t){r.dueDate=t},getPriority:function(){return r.priority},setPriority:function(t){r.priority=t},getCompleted:function(){return r.completed},setCompleted:function(t){r.completed=t},setProjectName:function(t){r.project=t},getProjectName:function(){return r.projectName}}}(i,c,o,d);s.setProjectName(c),n.addTaskToProject(c,s),I(),function(t){var e=w("#task-list"),a=e.parentNode,r=n.getProjectObject(t);e.remove(),a.appendChild(T(r)),P()}(c)}function O(){S.emit(D)}function F(t,e){for(var n in e)t.setAttribute(n,e[n])}var z={formState:"hidden",isAddTaskButtonListenerAttached:!1};function q(t){z.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",q)}function U(){var t,e,n=w("#add-task-form-container"),a=z.formState;"hidden"===a?(F(n,{"data-hidden":"false","aria-label":"visible"}),z.formState="visible"):"visible"===a&&(F(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,z.formState="closing",t.addEventListener("animationend",q)),function(t){var e=w("#add-task-button");"visible"===t?e.addEventListener("click",O):"closing"===t&&e.removeEventListener("click",O)}(e=z.formState),function(t){"visible"===t?S.on(D,x):"closing"===t&&S.off(D,x)}(e),function(t){!function(t){var e=w("#cancel-add-task-button");"visible"===t?e.addEventListener("click",I):"closing"===t&&e.removeEventListener("click",I)}(t)}(z.formState)}function I(){S.emit(L)}function M(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var a,r=document.createElement("div");r.setAttribute("id","main-content"),r.appendChild(T(t)),P(),"project"===t.getType()&&r.appendChild(((a=document.createElement("div")).setAttribute("id","add-task-container"),a.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="Add Task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),a.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","title"),e.setAttribute("name","title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),S.emit(D))}));var n=document.createElement("div");n.setAttribute("id","title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("add-task-label"),a.setAttribute("for","details"),a.textContent="Details (optional)";var r=document.createElement("input");r.classList.add("add-task-input"),r.setAttribute("type","text"),r.setAttribute("id","details"),r.setAttribute("name","details"),r.setAttribute("placeholder","tell me more"),r.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),S.emit(D))}));var i=document.createElement("div");i.setAttribute("id","details-container"),i.classList.add("input-container"),i.appendChild(a),i.appendChild(r);var o=document.createElement("label");o.classList.add("add-task-label"),o.setAttribute("for","due-date"),o.textContent="Due Date";var d=document.createElement("input");d.classList.add("add-task-input"),d.setAttribute("type","date"),d.setAttribute("id","due-date"),d.setAttribute("name","due-date"),d.setAttribute("required",!0),d.setAttribute("placeholder","yyyy-mm-dd"),d.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),S.emit(D))}));var c=document.createElement("div");c.setAttribute("id","due-date-container"),c.classList.add("input-container"),c.appendChild(o),c.appendChild(d);var s=document.createElement("button");s.classList.add("add-task-button"),s.setAttribute("id","add-task-button"),s.setAttribute("type","button"),s.setAttribute("aria-label","Add Task"),s.setAttribute("name","add-task-button"),s.setAttribute("form","add-task-form"),s.textContent="Add Task";var u=document.createElement("button");u.classList.add("add-task-button"),u.setAttribute("id","cancel-add-task-button"),u.setAttribute("type","button"),u.setAttribute("aria-label","Cancel Add Task"),u.textContent="Cancel";var l=document.createElement("div");l.setAttribute("id","add-task-button-container"),l.appendChild(s),l.appendChild(u);var m=document.createElement("form");m.setAttribute("id","add-task-form"),m.appendChild(n),m.appendChild(i),m.appendChild(c),m.appendChild(l);var p=document.createElement("div");return p.setAttribute("id","add-task-form-container"),p.setAttribute("aria-label","hidden"),p.setAttribute("data-hidden",!0),p.appendChild(m),p}()),a));var i=document.createElement("div");return i.setAttribute("id","main-container"),i.appendChild(e),i.appendChild(r),i}var B={updateObjectType:null,projectName:null};function $(t){var e=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var r=n.getProjectArray(),i=t.getAttribute("data-project-name"),o=r.find((function(t){return t.getName()===i}));return B.updateObjectType="project",o}if(a){var d=g(t.getAttribute("data-page-name"),n.getAllTasks());return B.updateObjectType="link",d}}(t),a=e.getName(),r=e.getType(),i=M(e);z.isAddTaskButtonListenerAttached&&(w("#add-task-form-opener-button").removeEventListener("click",I),z.isAddTaskButtonListenerAttached=!1,S.off(L,U));var o,d=w("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(d),d.appendChild(i),"project"===r&&(B.projectName=a,function(t){var e=w("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",I),z.isAddTaskButtonListenerAttached=!0)}(o=r),function(t){"project"===t&&S.on(L,U)}(o)),function(t){t.addEventListener("transitionend",nt,{once:!0})}(t)}function W(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(w(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page")}(e),function(t){S.emit(k,t)}(e))}function Z(){var t;!0===X.open?S.on(k,$):!1===X.open&&S.off(k,$),t=w(".zig-zag-nav"),!0===X.open?t.addEventListener("click",W):!1===X.open&&t.removeEventListener("click",W)}function Y(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function H(){var t=w("#add-project-form"),e=t.querySelector("#project-name-input").value.trim();if(!e)return alert("Enter Project Name");t.reset();var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{getName:function(){return e.name},setName:function(t){e.name=t},getType:function(){return e.type},addTask:function(t){e.tasks.push(t)},sortTaskArray:function(){e.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return b(i(n),i(a))}))},getTaskArray:function(){return e.tasks}}}(e);n.addProject(a);var r=w("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=Y(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,r),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(r),K(),V.projectFormState="hidden"}function R(){S.emit(j)}var V={projectFormState:"hidden"};function G(t){V.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",G)}function J(){var t,e,n=w("#add-project-form"),a=V.projectFormState;if("hidden"===a)F(n,{"data-hidden":"false","aria-label":"visible"}),V.projectFormState="visible";else if("visible"===a){F(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,V.projectFormState="closing",t.addEventListener("animationend",G),w("#project-name-input").value=""}(function(t){var e=w("#add-project-button");"visible"===t?e.addEventListener("click",R):"closing"===t&&e.removeEventListener("click",R)})(e=V.projectFormState),function(t){"visible"===t?S.on(j,H):"closing"===t&&S.off(j,H)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",K):"closing"===t&&e.removeEventListener("click",K)}(t)}(V.projectFormState)}function K(){S.emit(C)}function Q(){var t=document.getElementById("new-project-button");!0===X.open?t.addEventListener("click",K):!1===X.open&&t.removeEventListener("click",K),function(t){!0===t.open?S.on(C,J):!1===t.open&&S.off(C,J)}(X)}var X={open:!1,animating:!1};function _(){X.open=!1,X.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",_),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),Q(),Z()}function tt(){X.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",_)}function et(){X.open=!0,X.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),Z(),Q()}function nt(){var t=w(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),S.emit(E);else{if(!0===X.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),S.emit(y)}}var at,rt,it,ot=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),ot.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",A),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var r=document.createElement("div");return r.classList.add("header-right"),r.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var r=document.createElement("i");return r.classList.add("fa-solid","fa-moon"),r.setAttribute("id","moon"),n.appendChild(a),n.appendChild(r),t.appendChild(e),t.appendChild(n),t}()),r.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",nt),e}()),t.appendChild(e),t.appendChild(r),content.appendChild(t),t}()),ot.appendChild(function(t,e,n,a,r){var i=document.createElement("nav");i.classList.add("zig-zag-nav"),i.setAttribute("id","nav-primary-aria"),i.setAttribute("aria-label","Main Navigation"),i.setAttribute("aria-hidden",!0),i.setAttribute("data-visibility",!1);var o=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=d,i.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var r=t[d].listElements,o=document.createDocumentFragment();r.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var r=document.createElement("li");r.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),r.appendChild(a),o.appendChild(r)})),a.appendChild(o),e.appendChild(n),e.appendChild(a),i.appendChild(e)};for(var d in t)o();return S.on(y,et),S.on(E,tt),i}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(at=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),at.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),S.emit(j))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var a=document.createElement("div");a.setAttribute("id","project-input-container"),a.appendChild(Y()),a.appendChild(t);var r=document.createElement("div");r.setAttribute("id","project-buttons-container"),r.appendChild(e),r.appendChild(n);var i=document.createElement("form");i.setAttribute("id","add-project-form"),i.setAttribute("aria-label","hidden"),i.setAttribute("data-hidden",!0),i.appendChild(a),i.appendChild(r);var o=document.createElement("button");o.setAttribute("id","new-project-button"),o.setAttribute("type","button"),o.setAttribute("aria-label","New Project"),o.textContent="New Project";var d=document.createElement("div");return d.setAttribute("id","add-project-container"),d.appendChild(o),d.appendChild(i),d}(),at.lastChild),at.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),ot.appendChild((rt=M(g("all tasks",n.getAllTasks())),(it=document.createElement("main")).appendChild(rt),it))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,