(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!e;)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{addTaskToProject:function(t,n){e.find((function(e){return e.getName()===t})).addTask(n)},getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},getProjectObject:function(t){return e.find((function(e){return e.getName()===t}))}});Math.pow(10,8);const a=6e4,i=36e5;function r(t,e){const n=e?.additionalDigits??2,r=function(t){const e={},n=t.split(d.dateTimeDelimiter);let a;if(n.length>2)return e;if(/:/.test(n[0])?a=n[0]:(e.date=n[0],a=n[1],d.timeZoneDelimiter.test(e.date)&&(e.date=t.split(d.timeZoneDelimiter)[0],a=t.substr(e.date.length,t.length))),a){const t=d.timezone.exec(a);t?(e.time=a.replace(t[1],""),e.timezone=t[1]):e.time=a}return e}(t);let f;if(r.date){const t=function(t,e){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),a=t.match(n);if(!a)return{year:NaN,restDateString:""};const i=a[1]?parseInt(a[1]):null,r=a[2]?parseInt(a[2]):null;return{year:null===r?i:100*r,restDateString:t.slice((a[1]||a[2]).length)}}(r.date,n);f=function(t,e){if(null===e)return new Date(NaN);const n=t.match(o);if(!n)return new Date(NaN);const a=!!n[4],i=u(n[1]),r=u(n[2])-1,d=u(n[3]),s=u(n[4]),c=u(n[5])-1;if(a)return function(t,e,n){return e>=1&&e<=53&&n>=0&&n<=6}(0,s,c)?function(t,e,n){const a=new Date(0);a.setUTCFullYear(t,0,4);const i=7*(e-1)+n+1-(a.getUTCDay()||7);return a.setUTCDate(a.getUTCDate()+i),a}(e,s,c):new Date(NaN);{const t=new Date(0);return function(t,e,n){return e>=0&&e<=11&&n>=1&&n<=(m[e]||(p(t)?29:28))}(e,r,d)&&function(t,e){return e>=1&&e<=(p(t)?366:365)}(e,i)?(t.setUTCFullYear(e,r,Math.max(i,d)),t):new Date(NaN)}}(t.restDateString,t.year)}if(!f||isNaN(f.getTime()))return new Date(NaN);const v=f.getTime();let b,h=0;if(r.time&&(h=function(t){const e=t.match(s);if(!e)return NaN;const n=l(e[1]),r=l(e[2]),d=l(e[3]);return function(t,e,n){return 24===t?0===e&&0===n:n>=0&&n<60&&e>=0&&e<60&&t>=0&&t<25}(n,r,d)?n*i+r*a+1e3*d:NaN}(r.time),isNaN(h)))return new Date(NaN);if(!r.timezone){const t=new Date(v+h),e=new Date(0);return e.setFullYear(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()),e.setHours(t.getUTCHours(),t.getUTCMinutes(),t.getUTCSeconds(),t.getUTCMilliseconds()),e}return b=function(t){if("Z"===t)return 0;const e=t.match(c);if(!e)return 0;const n="+"===e[1]?-1:1,r=parseInt(e[2]),d=e[3]&&parseInt(e[3])||0;return function(t,e){return e>=0&&e<=59}(0,d)?n*(r*i+d*a):NaN}(r.timezone),isNaN(b)?new Date(NaN):new Date(v+h+b)}const d={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},o=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,s=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,c=/^([+-])(\d{2})(?::?(\d{2}))?$/;function u(t){return t?parseInt(t):1}function l(t){return t&&parseFloat(t.replace(",","."))||0}const m=[31,null,31,30,31,30,31,31,30,31,30,31];function p(t){return t%400==0||t%4==0&&t%100!=0}function f(t){const e=Object.prototype.toString.call(t);return t instanceof Date||"object"==typeof t&&"[object Date]"===e?new t.constructor(+t):"number"==typeof t||"[object Number]"===e||"string"==typeof t||"[object String]"===e?new Date(t):new Date(NaN)}function v(t,e){const n=f(t),a=f(e),i=n.getTime()-a.getTime();return i<0?-1:i>0?1:i}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function g(t,e){var n={name:t,tasks:e,type:"link"};return{getName:function(){return n.name},getType:function(){return n.type},getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?h(Object(n),!0).forEach((function(e){var a,i,r;a=t,i=e,r=n[e],(i=function(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==b(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===b(e)?e:String(e)}(i))in a?Object.defineProperty(a,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):a[i]=r})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},sortTaskArray:function(){n.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return v(r(n),r(a))}))},getTaskArray:function(){return n.tasks}}}const A=t.p+"f0f19e6f57687481453e.webp";var k="showNav",y="hideNav",E="handleMain",C="toggleAddProjectForm",L="toggelAddTaskForm",j="toggleEditTaskForm",D="addNewProject",T="addNewTask";function w(t,e){for(var n in e)t.setAttribute(n,e[n])}function N(t){var e=t.getTaskArray(),n=t.getType();if(0===e.length&&"link"===n)return function(){var t=document.createElement("p");t.setAttribute("id","placeholder-text"),t.classList.add("hvr-wobble-vertical"),t.textContent="create a project in the above menu";var e=document.createElement("li");return e.setAttribute("id","placeholder-container"),e.appendChild(t),e}();if(e.length>0){var a=document.createDocumentFragment();return e.length>1&&t.sortTaskArray(),e.forEach((function(t){a.appendChild(function(t){var e=t.getName().toLowerCase(),n=t.getDetails(),a=t.getDueDate(),i=t.getCompleted(),r=t.getPriority(),d=document.createElement("div");d.classList.add("task-checkbox-container");var o=document.createElement("input");o.setAttribute("type","checkbox"),o.setAttribute("data-checked",i?"true":"false"),o.checked=!!i,o.classList.add("task-item-checkbox"),d.appendChild(o);var s=document.createElement("h4");s.classList.add("task-item-title"),s.textContent=e;var c=document.createElement("p");c.classList.add("task-item-details"),c.textContent=n;var u,l=document.createElement("p");l.classList.add("task-item-date"),l.textContent="Due ".concat((u={year:"numeric",month:"short",day:"numeric"},new Date(a).toLocaleDateString("en-us",u)));var m=document.createElement("span");m.classList.add("task-priority-star-icon","material-symbols-outlined"),m.textContent="star";var p=document.createElement("button");p.classList.add("task-priority-star-button"),w(p,{"aria-label":"Prioritize Task",type:"button","data-checked":r?"true":"false"}),p.appendChild(m);var f=document.createElement("button");f.classList.add("modify-task-button"),f.setAttribute("type","button"),f.setAttribute("aria-label","Edit Task");var v=document.createElement("i");v.classList.add("fa-solid","fa-ellipsis-vertical"),f.appendChild(v);var b=document.createElement("div");b.classList.add("task-item-button-container"),b.appendChild(p),b.appendChild(f);var h=document.createElement("div");h.classList.add("task-right-side-container"),h.appendChild(l),h.appendChild(b);var g=document.createElement("li");return g.classList.add("task-item"),g.appendChild(d),g.appendChild(s),""!==n.trim()&&g.appendChild(c),g.appendChild(h),g}(t))})),a}}function S(t){var e=document.createElement("ul");e.setAttribute("id","task-list");var n=N(t);return n&&e.appendChild(n),e}function x(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}var P,O={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}};function q(){var t,e;(t=document.querySelectorAll(".task-item-details"),e=[],t.forEach((function(t){t.clientWidth<t.scrollWidth&&e.push(t)})),e).forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(i){var r=e.scrollLeft+.5*a;r>=n?a=-1:r<=0&&(a=1),e.scrollLeft=r,requestAnimationFrame(t)}()}))}function F(t){return n.getAllTasks().find((function(e){return e.getName()===t}))}function z(t){if(t.target.classList.contains("edit-task-button")){var e=t.target.getAttribute("id"),n="cancel-edit-task-button"===e;"save-edit-task-button"===e?console.log("add functionality to save edit task button"):n&&O.emit(j)}}function M(t){var e=x(".edit-task-button-container");"hidden"===t?e.removeEventListener("click",z):"visible"===t&&e.addEventListener("click",z)}function U(t){P="hidden",t.close(),w(t,{"data-hidden":"hidden","aria-label":"hidden"})}function B(t){var e,n,a,i=x("#edit-task-modal"),r=i.getAttribute("data-hidden");"hidden"===r?(P="visible",(a=i).showModal(),w(a,{"data-hidden":"visible","aria-label":"visible"}),M(P)):"visible"===r&&(P="closing",n=U,(e=i).setAttribute("data-hidden","closing"),e.addEventListener("animationend",(function t(){n(e),e.removeEventListener("animationend",t)})),M(P))}function I(t){if(!x(".task-item"))return O.off(j);O.on(j,B);var e=x("#content"),n=function(){var t=document.createElement("h2");t.setAttribute("id","edit-task-heading"),t.textContent="Edit Task";var e=document.createElement("dialog");return w(e,{id:"edit-task-modal","aria-label":"hidden","data-hidden":"hidden"}),e.appendChild(t),e.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","edit-task-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","edit-task-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(j))}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("edit-task-label"),a.setAttribute("for","edit-task-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("edit-task-input"),i.setAttribute("type","text"),i.setAttribute("id","edit-task-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(j))}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("edit-task-label"),d.setAttribute("for","edit-task-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("edit-task-input"),o.setAttribute("type","date"),o.setAttribute("id","edit-task-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(j))}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("edit-task-button"),c.setAttribute("id","save-edit-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Edit Task"),c.setAttribute("form","edit-task-form"),c.textContent="save";var u=document.createElement("button");u.classList.add("edit-task-button"),u.setAttribute("id","cancel-edit-task-button"),u.setAttribute("type","button"),u.setAttribute("aria-label","Cancel Add Task"),u.textContent="cancel";var l=document.createElement("div");l.classList.add("edit-task-button-container"),l.appendChild(c),l.appendChild(u);var m=document.createElement("form");m.setAttribute("id","edit-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(l);var p=document.createElement("div");return p.classList.add("edit-task-form-container"),p.appendChild(m),p}()),e}();e.appendChild(n),t.querySelectorAll(".task-item").forEach((function(t){t.addEventListener("click",(function(e){var n=e.target,a=n.tagName.toLowerCase();if("button"===a||"input"===a){var i=t.querySelector(".task-item-title").textContent.toLowerCase(),r=t.querySelector(".task-item-checkbox"),d=t.querySelector(".task-priority-star-button"),o=t.querySelector(".modify-task-button"),s=[e,i];n===r?function(t,e){var n=t.checked,a=F(e);!0===n?(a.setCompleted(!0),t.setAttribute("data-checked","true")):!1===n&&(a.setCompleted(!1),t.setAttribute("data-checked","false"))}(r,i):n===d?function(t,e){var n=t.getAttribute("data-checked"),a=F(e);!function(t,e){"false"===e?t.setAttribute("data-checked","true"):"true"===e&&t.setAttribute("data-checked","false")}(t,n),"false"===n?a.setPriority(!0):"true"===n&&a.setPriority(!1)}(d,i):n===o&&function(t){O.emit(j,t)}(s)}}))}))}function $(){var t=x("#add-task-form"),e=t.querySelector("#task-add-title"),a=t.querySelector("#task-add-details"),i=t.querySelector("#task-add-due-date"),r=e.value.trim().toLowerCase(),d=a.value.trim(),o=i.value;if(!r)return alert("Enter Task Name");if(!o)return alert("Enter Task Due Date");if(o<(new Date).toISOString().slice(0,10))return alert("Enter Valid Due Date");t.reset();var s=V.projectName.toLowerCase(),c=function(t,e,n,a){if("string"!=typeof t&&"string"!=typeof n&&"string"!=typeof a)throw new Error("⚠️ name, details & due-date, must all be strings");var i={name:t,projectName:e,details:n,dueDate:a,priority:!1,completed:!1};return{getName:function(){return i.name},setName:function(t){i.name=t},getDetails:function(){return i.details},setDetails:function(t){i.details=t},getDueDate:function(){return i.dueDate},setDueDate:function(t){i.dueDate=t},getPriority:function(){return i.priority},setPriority:function(t){i.priority=t},getCompleted:function(){return i.completed},setCompleted:function(t){i.completed=t},setProjectName:function(t){i.project=t},getProjectName:function(){return i.projectName}}}(r,s,d,o);c.setProjectName(s),n.addTaskToProject(s,c),R(),function(t){var e=x("#task-list"),a=e.parentNode,i=n.getProjectObject(t);e.remove();var r=S(i);a.appendChild(r),q(),i.getTaskArray().length>0&&(q(),I(r))}(s)}function W(){O.emit(T)}var Z={formState:"hidden",isAddTaskButtonListenerAttached:!1};function Y(t){Z.formState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",Y)}function H(){var t,e,n=x(".add-task-form-container"),a=Z.formState;"hidden"===a?(w(n,{"data-hidden":"false","aria-label":"visible"}),Z.formState="visible"):"visible"===a&&(w(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,Z.formState="closing",t.addEventListener("animationend",Y)),function(t){var e=x("#add-task-button");"visible"===t?e.addEventListener("click",W):"closing"===t&&e.removeEventListener("click",W)}(e=Z.formState),function(t){"visible"===t?O.on(T,$):"closing"===t&&O.off(T,$)}(e),function(t){!function(t){var e=x("#cancel-add-task-button");"visible"===t?e.addEventListener("click",R):"closing"===t&&e.removeEventListener("click",R)}(t)}(Z.formState)}function R(){O.emit(L)}function G(t){var e=document.createElement("h2"),n=t.getName();e.setAttribute("id","main-heading"),e.textContent=n;var a=document.createElement("div");a.setAttribute("id","main-content");var i,r=S(t);a.appendChild(r),t.getTaskArray().length>0&&(q(),console.log(t.getTaskArray()),I(r)),"project"===t.getType()&&a.appendChild(((i=document.createElement("div")).setAttribute("id","add-task-container"),i.appendChild(function(){var t=document.createElement("button");t.setAttribute("id","add-task-form-opener-button"),t.setAttribute("type","button"),t.setAttribute("aria-label","Add Task"),t.textContent="add task";var e=document.createElement("div");return e.setAttribute("id","add-task-form-opener-button-container"),e.appendChild(t),e}()),i.appendChild(function(){var t=document.createElement("label");t.classList.add("add-task-label"),t.setAttribute("for","task-add-title"),t.textContent="Title";var e=document.createElement("input");e.classList.add("add-task-input"),e.setAttribute("type","text"),e.setAttribute("id","task-add-title"),e.setAttribute("required","true"),e.setAttribute("placeholder","what are the vibes?"),e.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(T))}));var n=document.createElement("div");n.classList.add("title-container"),n.classList.add("input-container"),n.appendChild(t),n.appendChild(e);var a=document.createElement("label");a.classList.add("add-task-label"),a.setAttribute("for","task-add-details"),a.textContent="Details (optional)";var i=document.createElement("input");i.classList.add("add-task-input"),i.setAttribute("type","text"),i.setAttribute("id","task-add-details"),i.setAttribute("placeholder","tell me more"),i.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(T))}));var r=document.createElement("div");r.classList.add("details-container"),r.classList.add("input-container"),r.appendChild(a),r.appendChild(i);var d=document.createElement("label");d.classList.add("add-task-label"),d.setAttribute("for","task-add-due-date"),d.textContent="Due Date";var o=document.createElement("input");o.classList.add("add-task-input"),o.setAttribute("type","date"),o.setAttribute("id","task-add-due-date"),o.setAttribute("required",!0),o.setAttribute("placeholder","yyyy-mm-dd"),o.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(T))}));var s=document.createElement("div");s.classList.add("due-date-container"),s.classList.add("input-container"),s.appendChild(d),s.appendChild(o);var c=document.createElement("button");c.classList.add("add-task-button"),c.setAttribute("id","add-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Add Task"),c.setAttribute("name","add-task-button"),c.setAttribute("form","add-task-form"),c.textContent="add";var u=document.createElement("button");u.classList.add("add-task-button"),u.setAttribute("id","cancel-add-task-button"),u.setAttribute("type","button"),u.setAttribute("aria-label","Cancel Add Task"),u.textContent="cancel";var l=document.createElement("div");l.classList.add("add-task-button-container"),l.appendChild(c),l.appendChild(u);var m=document.createElement("form");m.setAttribute("id","add-task-form"),m.appendChild(n),m.appendChild(r),m.appendChild(s),m.appendChild(l);var p=document.createElement("div");return p.classList.add("add-task-form-container"),p.setAttribute("aria-label","hidden"),p.setAttribute("data-hidden",!0),p.appendChild(m),p}()),i));var d=document.createElement("div");return d.setAttribute("id","main-container"),d.appendChild(e),d.appendChild(a),d}var V={updateObjectType:null,projectName:null};function J(t){var e=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var i=n.getProjectArray(),r=t.getAttribute("data-project-name"),d=i.find((function(t){return t.getName()===r}));return V.updateObjectType="project",d}if(a){var o=g(t.getAttribute("data-page-name"),n.getAllTasks());return V.updateObjectType="link",o}}(t),a=e.getName(),i=e.getType(),r=G(e);Z.isAddTaskButtonListenerAttached&&(x("#add-task-form-opener-button").removeEventListener("click",R),Z.isAddTaskButtonListenerAttached=!1,O.off(L,H));var d,o=x("main");!function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(o),o.appendChild(r),"project"===i&&(V.projectName=a,function(t){var e=x("#add-task-form-opener-button");"project"===t&&(e.addEventListener("click",R),Z.isAddTaskButtonListenerAttached=!0)}(d=i),function(t){"project"===t&&O.on(L,H)}(d)),function(t){t.addEventListener("transitionend",ut,{once:!0})}(t)}function K(t){var e=t.target,n=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);n&&(function(t){!function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(x(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page")}(e),function(t){O.emit(E,t)}(e))}function Q(){var t;!0===dt.open?O.on(E,J):!1===dt.open&&O.off(E,J),t=x(".zig-zag-nav"),!0===dt.open?t.addEventListener("click",K):!1===dt.open&&t.removeEventListener("click",K)}function X(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function _(){var t=x("#add-project-form"),e=t.querySelector("#project-name-input").value.trim();if(!e)return alert("Enter Project Name");t.reset();var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[],type:"project"};return{getName:function(){return e.name},setName:function(t){e.name=t},getType:function(){return e.type},addTask:function(t){e.tasks.push(t)},sortTaskArray:function(){e.tasks.sort((function(t,e){var n=t.getDueDate(),a=e.getDueDate();return v(r(n),r(a))}))},getTaskArray:function(){return e.tasks}}}(e);n.addProject(a);var i=x("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=X(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,i),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(i),it(),et.projectFormState="hidden"}function tt(){O.emit(D)}var et={projectFormState:"hidden"};function nt(t){et.projectFormState="hidden";var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",nt)}function at(){var t,e,n=x("#add-project-form"),a=et.projectFormState;if("hidden"===a)w(n,{"data-hidden":"false","aria-label":"visible"}),et.projectFormState="visible";else if("visible"===a){w(n,{"data-hidden":"closing","aria-label":"hidden"}),t=n,et.projectFormState="closing",t.addEventListener("animationend",nt),x("#project-name-input").value=""}(function(t){var e=x("#add-project-button");"visible"===t?e.addEventListener("click",tt):"closing"===t&&e.removeEventListener("click",tt)})(e=et.projectFormState),function(t){"visible"===t?O.on(D,_):"closing"===t&&O.off(D,_)}(e),function(t){!function(t){var e=document.getElementById("cancel-add-project-button");"visible"===t?e.addEventListener("click",it):"closing"===t&&e.removeEventListener("click",it)}(t)}(et.projectFormState)}function it(){O.emit(C)}function rt(){var t=document.getElementById("new-project-button");!0===dt.open?t.addEventListener("click",it):!1===dt.open&&t.removeEventListener("click",it),function(t){!0===t.open?O.on(C,at):!1===t.open&&O.off(C,at)}(dt)}var dt={open:!1,animating:!1};function ot(){dt.open=!1,dt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",ot),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),rt(),Q()}function st(){dt.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",ot)}function ct(){dt.open=!0,dt.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),Q(),rt()}function ut(){var t=x(".nav-toggle-button");if(t.classList.contains("active"))t.classList.remove("active"),t.setAttribute("aria-label","Open Navigation Menu"),t.setAttribute("aria-expanded",!1),O.emit(y);else{if(!0===dt.animating)return;t.classList.add("active"),t.setAttribute("aria-label","Close Navigation Menu"),t.setAttribute("aria-expanded",!0),O.emit(k)}}var lt,mt,pt,ft=document.getElementById("content");!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"}),function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=document.createElement("link");for(var i in a.setAttribute("href",t),a.setAttribute("rel",e),n)a.setAttribute(i,n[i]);document.head.appendChild(a)}("https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200","stylesheet"),ft.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",A),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var i=document.createElement("div");return i.classList.add("header-right"),i.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var i=document.createElement("i");return i.classList.add("fa-solid","fa-moon"),i.setAttribute("id","moon"),n.appendChild(a),n.appendChild(i),t.appendChild(e),t.appendChild(n),t}()),i.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",ut),e}()),t.appendChild(e),t.appendChild(i),content.appendChild(t),t}()),ft.appendChild(function(t,e,n,a,i){var r=document.createElement("nav");r.classList.add("zig-zag-nav"),r.setAttribute("id","nav-primary-aria"),r.setAttribute("aria-label","Main Navigation"),r.setAttribute("aria-hidden",!0),r.setAttribute("data-visibility",!1);var d=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-heading"),n.textContent=o,r.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var i=t[o].listElements,d=document.createDocumentFragment();i.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var i=document.createElement("li");i.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),i.appendChild(a),d.appendChild(i)})),a.appendChild(d),e.appendChild(n),e.appendChild(a),r.appendChild(e)};for(var o in t)d();return O.on(k,ct),O.on(y,st),r}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(lt=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),lt.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),O.emit(D))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("required",!0),e.setAttribute("name","add-project"),e.setAttribute("form","add-project-form"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var a=document.createElement("div");a.setAttribute("id","project-input-container"),a.appendChild(X()),a.appendChild(t);var i=document.createElement("div");i.setAttribute("id","project-buttons-container"),i.appendChild(e),i.appendChild(n);var r=document.createElement("form");r.setAttribute("id","add-project-form"),r.setAttribute("aria-label","hidden"),r.setAttribute("data-hidden",!0),r.appendChild(a),r.appendChild(i);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var o=document.createElement("div");return o.setAttribute("id","add-project-container"),o.appendChild(d),o.appendChild(r),o}(),lt.lastChild),lt.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),ft.appendChild((mt=G(g("all tasks",n.getAllTasks())),(pt=document.createElement("main")).appendChild(mt),pt))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,