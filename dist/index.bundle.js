(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&!e;)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();var e,n=(e=[],{getProjectArray:function(){return[].concat(e)},arrangeProjectArray:function(t){return[].concat(e).filter(t)},getProjectArrayLength:function(){return e.length},addProject:function(t){e.push(t)},deleteProject:function(t){e.splice(e.indexOf(t),1)},getAllTasks:function(){return e.flatMap((function(t){return t.getTaskArray()}))},arrangeTasks:function(){}}),a={events:{},on:function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},off:function(t,e){if(this.events[t])for(var n=0;n<this.events[t].length;n++)if(this.events[t][n]===e){this.events[t].splice(n,1);break}},emit:function(t,e){this.events[t]&&this.events[t].forEach((function(t){t(e)}))}},i="showNav",r="hideNav",o="toggleDisplayFormContainerVisibility",c="addNewProject",d="updateMainContent";function s(){var t=document.createElement("div");t.classList.add("list-icon-container"),t.setAttribute("aria-hidden",!0);var e=document.createElement("div");return e.classList.add("list-icon-bars"),t.appendChild(e),t}function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t){var e=document.querySelector(t);if(e)return e;console.error("Element not found for selector: ".concat(t))}function m(){var t=document.querySelector("#project-name-input"),e=t.value.trim();if(t.value="",!e)return alert("Enter Project Name");var a=function(t){if("string"!=typeof t)throw new Error("name must be a string");var e={name:t,tasks:[]};return{addTask:function(t){t.setProject(this),e.tasks.push(t)},getTaskArray:function(){return e.tasks},getName:function(){return e.name},setName:function(t){e.name=t}}}(e);n.addProject(a);var i=p("#project-nav-list");(function(t,e){for(var n=t.getProjectArray().slice().reverse();e.firstChild;)e.removeChild(e.firstChild);n.forEach((function(t){e.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-link"),e.setAttribute("type","button"),e.setAttribute("aria-label","Project ".concat(t)),e.setAttribute("data-project-name",t),e.textContent=t;var n=s(),a=document.createElement("li");return a.classList.add("project-li"),a.classList.add("nav-li"),e.setAttribute("aria-label","Project ".concat(t)),a.appendChild(n),a.appendChild(e),a}(t.getName()))}))})(n,i),function(t){var e;(e=t).scrollWidth>e.clientWidth?e.style.overflow="auto":e.style.overflow="hidden"}(i),L()}function v(){a.emit(c)}function b(t){var e=t.target,a=function(t){var e=t.classList.contains("nav-link"),n=t.hasAttribute("aria-current");if(e&&!n)return!0}(e);if(a){var i=function(t){return function(t){for(var e=0;e<t.length;e++)if(t[e].hasAttribute("aria-current")){t[e].removeAttribute("aria-current");break}}(p(".zig-zag-nav").getElementsByClassName("nav-link")),t.setAttribute("aria-current","page"),t}(e),r=function(t){var e=t.hasAttribute("data-project-name"),a=t.hasAttribute("data-page-name");if(e){var i=n.getProjectArray(),r=t.getAttribute("data-project-name");return i.find((function(t){return t.getName()===r}))}if(a){var o=function(t,e){var n={name:t.getAttribute("data-page-name"),tasks:e};return{getShallowCopy:function(){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){var a,i,r;a=t,i=e,r=n[e],(i=function(t){var e=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,"string");if("object"!==l(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===l(e)?e:String(e)}(i))in a?Object.defineProperty(a,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):a[i]=r})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},n)},arrangeTasks:function(t){"sort"===t.getAttribute("data-arrange-method")?console.log("sort me"):"filter"===t.getAttribute("data-arrange-method")&&console.log("filter me")}}}(t,n.getAllTasks());return o.arrangeTasks(t),o}}(i);console.log("mainUpdateObject: ".concat(r)),p("#main-container").querySelector("#main-content"),console.log("clearTaskList Called")}}function h(t){a.emit(d,t)}function f(){var t;!0===g.open?a.on(d,b):!1===g.open&&a.off(d,b),t=p(".zig-zag-nav"),!0===g.open?t.addEventListener("click",h):!1===g.open&&t.removeEventListener("click",h)}var g={open:!1,animating:!1};function A(){g.open=!1,g.animating=!1;var t=document.querySelector(".zig-zag-nav");t.removeEventListener("animationend",A),t.setAttribute("aria-hidden",!0),t.setAttribute("data-visibility",!1),P(),f()}function y(){g.animating=!0;var t=document.querySelector(".zig-zag-nav");t.setAttribute("data-visibility","closing"),t.addEventListener("animationend",A)}function E(){g.open=!0,g.animating=!1;var t=document.querySelector(".zig-zag-nav");t.setAttribute("aria-hidden",!1),t.setAttribute("data-visibility",!0),f(),P()}function C(t,e){for(var n in e)t.setAttribute(n,e[n])}function k(t){var e=t.target;e.setAttribute("data-hidden","true"),e.removeEventListener("animationend",k)}function j(){var t,e,n,i=p("#project-form-container"),r="true"===i.getAttribute("data-hidden")?"hidden":"visible";"hidden"===r?(C(i,{"data-hidden":"false","aria-label":"visible"}),r="visible"):"visible"===r&&(C(i,{"data-hidden":"closing","aria-label":"hidden"}),i.addEventListener("animationend",k),r="hidden"),function(t){!function(t){var e=document.querySelector("#add-project-button");"visible"===t?e.addEventListener("click",v):"hidden"===t&&e.removeEventListener("click",v),function(t){"visible"===t?a.on(c,m):"hidden"===t&&a.off(c,m)}(t)}(t)}(r),t=p("#project-form-container"),e="true"===t.getAttribute("data-hidden"),(n=document.getElementById("cancel-add-project-button"))&&(e?n.removeEventListener("click",L):n.addEventListener("click",L))}function L(){a.emit(o)}function P(){var t=document.getElementById("new-project-button");!0===g.open?t.addEventListener("click",L):!1===g.open&&t.removeEventListener("click",L),function(t){!0===t.open?a.on(o,j):!1===t.open&&a.off(o,j)}(g)}const w=t.p+"f0f19e6f57687481453e.webp";function x(){if(this.classList.contains("active"))this.classList.remove("active"),this.setAttribute("aria-label","Open Navigation Menu"),this.setAttribute("aria-expanded",!1),a.emit(r);else{if(!0===g.animating)return;this.classList.add("active"),this.setAttribute("aria-label","Close Navigation Menu"),this.setAttribute("aria-expanded",!0),a.emit(i)}}function S(t){var e=document.createElement("div");e.classList.add("task-checkbox-container");var n=document.createElement("input");n.setAttribute("type","checkbox"),n.classList.add("task-item-checkbox"),e.appendChild(n);var a=document.createElement("h4");a.classList.add("task-item-title"),a.textContent="Task Item";var i=document.createElement("p");i.classList.add("task-item-details"),i.textContent="Lorem ipsum dolor sit amet consectetur.";var r=document.createElement("p");r.classList.add("task-item-date"),r.textContent="Due in 3 days";var o=document.createElement("input");o.classList.add("task-priority-checkbox"),o.setAttribute("type","checkbox"),o.setAttribute("aria-label","Prioritize Task");var c=document.createElement("button");c.classList.add("modify-task-button"),c.setAttribute("type","button"),c.setAttribute("aria-label","Edit Task");var d=document.createElement("i");d.classList.add("fa-solid","fa-ellipsis-vertical"),c.appendChild(d);var s=document.createElement("div");s.classList.add("task-button-container"),s.appendChild(o),s.appendChild(c);var l=document.createElement("div");l.classList.add("task-right-side-container"),l.appendChild(r),l.appendChild(s);var u=document.createElement("li");u.classList.add("task-item"),u.appendChild(e),u.appendChild(a),u.appendChild(i),u.appendChild(l);var p=document.createElement("dialog");p.classList.add("task-edit-modal");var m=document.createElement("button");m.classList.add("task-edit-button"),m.setAttribute("type","button"),m.setAttribute("aria-label","Edit Task"),p.appendChild(m);var v=document.createElement("button");return v.classList.add("task-delete-button"),v.setAttribute("type","button"),v.setAttribute("aria-label","Delete Task"),p.appendChild(v),u}!function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=document.createElement("script");for(var a in n.setAttribute("src",t),n.setAttribute("type","text/javascript"),e)n.setAttribute(a,e[a]);document.head.appendChild(n)}("https://kit.fontawesome.com/24176ab973.js",{crossorigin:"anonymous"});var O,T=document.getElementById("content");T.appendChild(function(){var t=document.createElement("header"),e=document.createElement("div");e.classList.add("header-left");var n=document.createElement("img");n.classList.add("header-logo"),n.setAttribute("src",w),n.setAttribute("alt","Priority Logo");var a=document.createElement("h1");a.classList.add("header-title"),a.textContent="<pr{io}rity>",e.appendChild(n),e.appendChild(a);var i=document.createElement("div");return i.classList.add("header-right"),i.appendChild(function(){var t=document.createElement("div");t.setAttribute("id","theme-toggle-container");var e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("id","theme-toggle-checkbox");var n=document.createElement("label");n.setAttribute("id","theme-toggle-label"),n.setAttribute("for","theme-toggle-checkbox");var a=document.createElement("i");a.classList.add("fa-solid","fa-sun"),a.setAttribute("id","sun");var i=document.createElement("i");return i.classList.add("fa-solid","fa-moon"),i.setAttribute("id","moon"),n.appendChild(a),n.appendChild(i),t.appendChild(e),t.appendChild(n),t}()),i.appendChild(function(t){var e=document.createElement("button");e.classList.add("nav-toggle-button"),e.setAttribute("aria-label","Open Navigation Menu"),e.setAttribute("aria-expanded",!1),e.setAttribute("aria-controls","nav-primary-aria");var n=document.createElement("div");return n.classList.add("nav-toggle-bars"),e.appendChild(n),e.addEventListener("click",x),e}()),t.appendChild(e),t.appendChild(i),content.appendChild(t),t}()),T.appendChild(function(t,e,n,o,c){var d=document.createElement("nav");d.classList.add("zig-zag-nav"),d.setAttribute("id","nav-primary-aria"),d.setAttribute("aria-label","Main Navigation"),d.setAttribute("aria-hidden",!0),d.setAttribute("data-visibility",!1);var s=function(){var e=document.createElement("div");e.classList.add("nav-list-container");var n=document.createElement("h2");n.classList.add("nav-list-header"),n.textContent=l,d.appendChild(n);var a=document.createElement("ul");a.classList.add("nav-ul");var i=t[l].listElements,r=document.createDocumentFragment();i.forEach((function(t,e){var n=t[0],a=(t[1],document.createElement("button"));a.classList.add("nav-link"),"All Tasks"===n&&a.setAttribute("aria-current","page");var i=document.createElement("li");i.classList.add("nav-li"),a.textContent=n,a.setAttribute("data-page-name",n.toLowerCase()),i.appendChild(a),r.appendChild(i)})),a.appendChild(r),e.appendChild(n),e.appendChild(a),d.appendChild(e)};for(var l in t)s();return a.on(i,E),a.on(r,y),d}({Home:{listElements:[["All Tasks","#"],["Today","#"],["Next 7 Days","#"],["Priorities","#"]]},Projects:{listElements:[]}})),(O=document.querySelector(".nav-list-container:nth-child(2)")).setAttribute("id","project-nav-list-container"),O.insertBefore(function(){var t=document.createElement("input");t.setAttribute("id","project-name-input"),t.setAttribute("type","text"),t.setAttribute("placeholder","Enter Project Name"),t.setAttribute("max-length",24),t.addEventListener("keydown",(function(t){"Enter"===t.key&&(t.preventDefault(),a.emit(c))}));var e=document.createElement("button");e.setAttribute("id","add-project-button"),e.setAttribute("type","button"),e.setAttribute("aria-label","Add Project"),e.textContent="add";var n=document.createElement("button");n.setAttribute("id","cancel-add-project-button"),n.setAttribute("type","button"),n.setAttribute("aria-label","Cancel Add Project"),n.textContent="cancel";var i=document.createElement("div");i.setAttribute("id","project-input-container"),i.appendChild(s()),i.appendChild(t);var r=document.createElement("div");r.setAttribute("id","project-buttons-container"),r.appendChild(e),r.appendChild(n);var o=document.createElement("form");o.setAttribute("id","project-form-container"),o.setAttribute("aria-label","hidden"),o.setAttribute("data-hidden",!0),o.appendChild(i),o.appendChild(r);var d=document.createElement("button");d.setAttribute("id","new-project-button"),d.setAttribute("type","button"),d.setAttribute("aria-label","New Project"),d.textContent="New Project";var l=document.createElement("div");return l.setAttribute("id","add-project-container"),l.appendChild(d),l.appendChild(o),l}(),O.lastChild),O.querySelector(".nav-ul").setAttribute("id","project-nav-list"),document.querySelectorAll(".nav-list-container:not(#project-nav-list-container) .nav-link").forEach((function(t){"all tasks"===t.getAttribute("data-page-name")||"today"===t.getAttribute("data-page-name")||"next 7 days"===t.getAttribute("data-page-name")?t.setAttribute("data-arrange-method","sort"):"priorities"===t.getAttribute("data-page-name")&&t.setAttribute("data-arrange-method","filter")})),T.appendChild(function(){var t=document.createElement("h2");t.setAttribute("id","main-heading"),t.textContent="all tasks";var e,a=document.createElement("div");a.setAttribute("id","main-content"),a.appendChild(((e=document.createElement("ul")).setAttribute("id","task-list"),0===n.getProjectArrayLength()||n.getProjectArray().forEach((function(t){t.getTaskArray().forEach((function(t){e.appendChild(S())}))})),e.appendChild(S()),e.appendChild(S()),e.appendChild(S()),e.appendChild(S()),e.appendChild(S()),e));var i=document.createElement("div");i.setAttribute("id","main-container"),i.appendChild(t),i.appendChild(a);var r=document.createElement("main");return r.appendChild(i),r}()),document.querySelectorAll(".task-item-details").forEach((function(t){var e,n,a;n=(e=t).scrollWidth-e.clientWidth,a=-1,function t(i){var r=e.scrollLeft+.5*a;r>=n?a=-1:r<=0&&(a=1),e.scrollLeft=r,requestAnimationFrame(t)}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,